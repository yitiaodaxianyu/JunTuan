---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by hkc.
--- DateTime: 2021/5/12 11:21
---

-- 三选二技能宝箱怪
local BxGuai = class("BxGuai", cc.Node)

local state = {
    pao = "pao",
    daiji = "daiji",
    gongji = "gongji",
    beiji = "beiji",
    siwang = "siwang"
}

function BxGuai:ctor()
    self:enableNodeEvents()
    self:initData()
end

function BxGuai:onEnter()
    self:createSpAni()
    self:bornAni()
end

function BxGuai:initData()
    self.isBox = true
    self.state = nil
    self.animationState = nil
    self.timeTag = 0
    self.hp = 1
    self.speed = 300
    self.bounding_radius = 30
    self.atkType = 1
    self.isBornOver = false
end

function BxGuai:setEnemyMgr(enemyMgr)
    self.enemyMgr = enemyMgr
end

function BxGuai:createSpAni()
    local file = "res/JunTuan/spine/enemy/baoxiangguai"
    local animation = AnimationMgr:createSpine(file, 1)
    animation:registerSpineEventHandler(function(event)
        if event.animation == state.siwang then
            self.enemyMgr:removeBoxEnemy(self)
            self:runAction(cc.Sequence:create(
                    cc.FadeOut:create(0.4),
                    cc.CallFunc:create(function ()
                        self:removeFromParent(true)
                    end)
            ))
        end
    end, sp.EventType.ANIMATION_COMPLETE)
    self.spAni = animation
    self:addChild(animation)
end

function BxGuai:bornAni()
    self:setPositionInfo(self:getPos())
    self.spAni:setAnimation(0, "close", false)
    self:setScale(0)
    self:setLocalZOrder(-self.pos.y)
    self:runAction(cc.Sequence:create(
            cc.DelayTime:create(2 * math.random()),
            cc.ScaleTo:create(0.3, 1.2),
            cc.ScaleTo:create(0.3, 0.8),
            cc.ScaleTo:create(0.3, 1.1),
            cc.ScaleTo:create(0.3, 1),
            cc.CallFunc:create(function ()
                AudioManager:playSoundEffect("skillmst")
                self.spAni:setAnimation(0, "bianxing", false)
            end),
            cc.DelayTime:create(1.4),
            cc.CallFunc:create(function ()
                self:refreshState()
                performWithDelay(self, function ()
                    self.isBornOver = true
                end, 1.5)
            end)
    ))
end

function BxGuai:setPositionInfo(pos)
    self.pos = pos
    self:setPosition(pos)
end

function BxGuai:setRotateInfo(rotation)
    self.rotation = rotation
    local radian = math.rad(90 - rotation)
    self.dx = math.cos(radian)
    self.dy = math.sin(radian)
    if self.dx > 0 then
        self:setScaleX(-1)
    else
        self:setScaleX(1)
    end
end

function BxGuai:getPos()
    local w = display.width
    local h = display.height
    local x = math.random(120, w - 120)
    local y = math.random(500, h - 150)
    return cc.p(x, y)
end

function BxGuai:getDir()
    self.toPos = self:getPos()
    local r = ExternalTools:getAngleByTowPoint(self.toPos, self.pos)
    r = 90 - math.deg(r)
    self:setRotateInfo(r)
end

function BxGuai:move(dt)
    self.pos.x = self.pos.x + self.speed * dt * self.dx
    self.pos.y = self.pos.y + self.speed * dt * self.dy
    if cc.pGetDistance(self.pos, self.toPos) <= 5 then
        self:getDir()
    else
        self:setPositionInfo(self.pos)
    end
end

function BxGuai:refreshState()
    local n = math.random()
    if n <= .7 then
        self.state = state.pao
        self:getDir()
    else
        if n  > .7 and n < .9 then
            self.state = state.daiji
        else
            self.state = state.gongji
        end
    end
end

function BxGuai:refreshTimeTag(dt)
    if self.timeTag > 0 then
        self.timeTag = self.timeTag - dt
    else
        self.timeTag = math.random() + .5
        self:refreshState()
    end
end

function BxGuai:update(dt)
    if state.pao == self.state then
        if state.pao ~= self.animationState then
            self.animationState = state.pao
            self.spAni:setAnimation(0, state.pao, true)
        else
            self:refreshTimeTag(dt)
        end
        self:move(dt)
        self:setLocalZOrder(-self.pos.y)
    elseif state.daiji == self.state then
        if state.daiji ~= self.animationState then
            self.animationState = state.daiji
            self.spAni:setAnimation(0, state.daiji, true)
        else
            self:refreshTimeTag(dt)
        end
    elseif state.gongji == self.state then
        if state.gongji ~= self.animationState then
            self.animationState = state.gongji
            self.spAni:setAnimation(0, state.gongji, false)
        else
            self:refreshTimeTag(dt)
        end
    elseif state.beiji == self.state then
        if state.beiji ~= self.animationState then
            self.animationState = state.beiji
            self.spAni:setAnimation(0, state.beiji, false)
        else
            self:refreshTimeTag(dt)
        end
    elseif state.siwang == self.state then
        if state.siwang ~= self.animationState then
            self.animationState = state.siwang
            self.spAni:setAnimation(0, state.siwang, false)
        end
    end
end

function BxGuai:beHit()
    if state.siwang ~= self.state then
        self.hp = self.hp - 1
        if self.hp <= 0 then
            self.state = state.siwang
            self.spAni:setTimeScale(1)
        else
            self.state = state.beiji
            self.timeTag = 0.33
        end
    end
end

function BxGuai:beFrozen()
    if self.state ~= state.siwang then
        self.state = state.daiji
        self.spAni:setTimeScale(0)
    end
end

function BxGuai:removeFrozen()
    if self.state ~= state.siwang then
        self.state = state.pao
        self.spAni:setTimeScale(1)
    end
end

function BxGuai:onExit()

end

return BxGuai