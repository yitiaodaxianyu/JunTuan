---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by hkc.
--- DateTime: 2021/4/9 10:16
---

local Hero = class("Hero", cc.Node)
local spAniY = {
    [1] = 50, [2] = 50, [3] = 50, [4] = 50, [5] = 50, [6] = 50
}
function Hero:ctor(heroInfo, size)
    self:enableNodeEvents()
    self:initData(heroInfo, size)
end

function Hero:onEnter()
    printf("Hero on onEnter")
    --self:createLayout()
    self:createHero()
    self:createSkillBar()
    self:setIsCanTouch(true)
end

function Hero:setGameView(_gameView)
    self.gameView = _gameView
end

function Hero:initData(heroInfo, size)
    self.size = size
    self:setContentSize(self.size)
    self.centerPos = cc.p(self.size.width / 2, self.size.height / 2)

    --GameTool:dataEncrypt(heroInfo, true)

    self.heroType = heroInfo.roleId       -- 英雄类型
    self.heroRank = heroInfo.heroRank     -- 英雄军衔等级

    -- 加密角色数据
    --heroInfo = GameTool:dataEncrypt(heroInfo)

    self.damage = heroInfo.attack         -- 英雄伤害
    self.critRate = heroInfo.critRate     -- 英雄暴击率
    self.critDps = heroInfo.critMultiples -- 英雄暴击伤害

    self.attackSpeedPer = heroInfo.attackSpeedPer   -- 攻速提升
    self.powerBulletNum = heroInfo.powerBulletNum   -- 大招子弹数量


    self.atkSpeed = heroInfo.interval     -- 攻速
    self.atkSpeedTmp = heroInfo.interval  -- 攻速副本(用于记录原始攻速)
    self.damge_jgjc = 0                   -- 近攻加成buff伤害加成数值
    self.damageTmp = self.damage          -- 伤害副本(用于记录原始伤害)
    self.damageOff = heroInfo.attOff      -- 角色伤害(不包括装备、军衔的加成)

    if not self.heroRank then
        -- 军衔等级
        self.heroRank = UserData.Shared().roleInfoList[self.heroType].roleRank
    end

    local para = GameTool:getRolePara(self.heroType)
    self.bounce = 0                       -- 子弹反弹次数

    ---------- 弓箭手特有属性 ----------
    self.isContinue = 0                   -- 穿透率
    self.poison = 0                       -- 中毒伤害

    ---------- 炮手特有属性 ----------
    self.vertigoTime = 0                  -- 眩晕时间
    self.bulletRange = 0                  -- 溅射范围

    ---------- 狙击手特有属性 ----------
    self.crit2Rate = 0                    -- 会心概率
    self.crit2Dps = 3                     -- 会心伤害基础倍率

    ---------- 喷火兵特有属性 ----------
    self.atkRange = 0                     -- 攻击范围加成
    self.burn = 0                         -- 灼烧伤害

    ---------- 忍者特有属性 ----------
    self.beHead = 0                       -- 斩杀概率
    self.beheadHp = 0                     -- 斩杀比例
    self.bounceUp = {}                    -- 弹射增伤配置

    ---------- 女巫特有属性 ----------
    self.bleed = {}                       -- 流血配置
    self.bulletNum = 0                    -- 额外地刺数量（初始8个地刺）

    ---------- 三选二技能特殊加成 ----------
    self.isZXJY = false                   -- 正向加一
    self.isLXSJ = false                   -- 连续射击
    self.isXXJY = false                   -- 斜向加一
    self.isJGJC = false                   -- 近攻加成

    -- 技能配置
    self.skillPara = {
        heroInfo.skillParam1,             -- 技能属性1(伤害)
        heroInfo.skillParam2,             -- 技能属性2(眩晕时间、范围等等)
    }

    -- 特有参数配置
    self.personalPara = {
        heroInfo.personal1,
        heroInfo.personal2,
    }

    printf("---------- 初始化角色基础属性 ----------")
    printf("角色id: %d", self.heroType)
    printf("军衔等级: %d", self.heroRank)
    printf("伤害: %d", self.damage)
    printf("暴击率: %.2f", self.critRate)
    printf("暴击伤害: %.2f", self.critDps)
    printf("攻速: %.2f", self.atkSpeed)
    printf("---------- 初始化角色基础属性 ----------")

    if self.heroType == 1 then
        self.isContinue = self.personalPara[1]
        self.poison = { para[1], heroInfo.personal2, para[2], 1e4, 0 }
        printf("---------- 初始化角色特有属性 ----------")
        printf("穿透率: %.2f", self.isContinue)
        printf("中毒伤害: %.2f", self.personalPara[2])
        printf("---------- 初始化角色特有属性 ----------")
    elseif self.heroType == 2 then
        self.vertigoTime = self.personalPara[1] * 10
        self.bulletRange = self.personalPara[2]
        printf("---------- 初始化角色特有属性 ----------")
        printf("眩晕时间: %.2f", self.vertigoTime)
        printf("溅射范围: %.2f", self.bulletRange)
        printf("---------- 初始化角色特有属性 ----------")
    elseif self.heroType == 3 then
        self.crit2Dps = self.personalPara[1]
        self.crit2Rate = self.personalPara[2]
        printf("---------- 初始化角色特有属性 ----------")
        printf("会心伤害: %.2f", self.crit2Dps)
        printf("会心率: %.2f", self.crit2Rate)
        printf("---------- 初始化角色特有属性 ----------")
    elseif self.heroType == 4 then
        self.atkRange = self.personalPara[1] --/ 10
        self.burn = { para[3], heroInfo.personal2, para[4], 1e4, 0 }
        printf("---------- 初始化角色特有属性 ----------")
        printf("范围加成: %.2f", self.atkRange)
        printf("灼烧伤害: %.2f", self.personalPara[2])
        printf("---------- 初始化角色特有属性 ----------")
    elseif self.heroType == 5 then
        self.beHead = self.personalPara[1]
        self.bounceUp = { para[1], heroInfo.personal2 }
        self.beheadHp = para[4] / 1e4
        printf("---------- 初始化角色特有属性 ----------")
        printf("弹射次数: %.2f", self.bounceUp[1])
        printf("弹射增伤: %.2f", self.bounceUp[2])
        printf("斩杀率: %.2f", self.beHead)
        printf("---------- 初始化角色特有属性 ----------")
    elseif self.heroType == 6 then
        self.bulletNum = self.personalPara[1]
        self.bleed = { para[5], heroInfo.personal2, para[4], 1e4, 0 }
        printf("---------- 初始化角色特有属性 ----------")
        printf("流血: %.2f", self.bleed[2])
        printf("地刺数量: %.2f", self.bulletNum)
        printf("---------- 初始化角色特有属性 ----------")
    end

    -- 攻击类型
    local atkList = GameTool:getRoleAtkType(self.heroType)
    self.atkType = atkList

    self.atkDir = 1                       -- 攻击方向（1正向 2左侧 3右侧）
    self.atkCool = 0                      -- 普攻冷却
    self.ultCool = 20                     -- 技能冷却
    self.isCanTouch = false               -- 是否能过触发点击事件
    self.isCanUseSkill = false            -- 是否可以使用技能
    self.isShowSkillTip = false           -- 是否已经显示了技能提示
    self.state = Define.state.attack
end

function Hero:createLayout()
    local layout = ccui.Layout:create()
    layout:setContentSize(self.size)
    layout:setAnchorPoint(0.5, 0.5)
    layout:setPosition(self.centerPos)
    layout:setBackGroundColorType(ccui.LayoutBackGroundColorType.solid)
    layout:setBackGroundColor(cc.c3b(150,200,255))
    layout:setBackGroundColorOpacity(125)
    self:addChild(layout)
end

function Hero:setIsCanTouch(flag)
    self.isCanTouch = flag
end

function Hero:setAtkDir(rotation)
    local flag = 20
    if rotation > -flag and rotation < flag then
        self.atkDir = 1
    elseif rotation <= flag then
        self.atkDir = 2
    elseif rotation >= flag then
        self.atkDir = 3
    end
end

function Hero:getSkillType()
    if self.heroType == 2 or self.heroType == 3 or self.heroType == 6 then
        return Define.SKILL_TYPE_AREA
    else
        return Define.SKILL_TYPE_LINE
    end
end

function Hero:getAtkPos()
    local pos = cc.p(self.centerPos)
    if self.heroType == 5 then
        pos.y = self.centerPos.y
    elseif self.heroType == 2 or self.heroType == 4 then
        pos = cc.p(self.centerPos.x, self.centerPos.y + 60)
        local dis = 50
        if self.atkDir == 1 then
            -- 正向攻击
            pos = cc.p(self.size.width / 2, self.size.height + dis)
        elseif self.atkDir == 2 then
            -- 左侧攻击
            pos = cc.p(self.size.width / 2 - dis, self.size.height + dis)
        elseif self.atkDir == 3 then
            -- 右侧攻击
            pos = cc.p(self.size.width / 2 + dis, self.size.height + dis)
        end
    end
    return self:convertToWorldSpace(pos)
end

function Hero:createHero()
    local info = {
        file = string.format("res/JunTuan/spine/player/0%d_01", self.heroType)
    }
    local animation = AnimationMgr:createSpine(info.file, 1)
    animation:setSkin("stage" .. self.heroRank + 1)
    animation:setAnimation(0,"zhengmian_daiji", true)
    animation:setPosition(cc.p(self.centerPos.x, spAniY[self.heroType]))
    animation:registerSpineEventHandler(function(event)
        if event.animation == "zhengmian" then
            self:heroNormalAni(1)
        elseif event.animation == "cemian" then
            self:heroNormalAni(2)
        end
    end, sp.EventType.ANIMATION_COMPLETE)
    self.heroSpine = animation
    self:addChild(animation)
    if self.heroType == 5 then
        self:createCoolBar()
    end
end

-- 忍者普攻进度条
function Hero:createCoolBar()
    local s = self.size
    local sp_bg = cc.Sprite:createWithSpriteFrameName("recoveryBarBg.png")
    local sprite = cc.Sprite:createWithSpriteFrameName("recoveryBar.png")
    local progressBar = cc.ProgressTimer:create(sprite)
    progressBar:setType(cc.PROGRESS_TIMER_TYPE_BAR)
    progressBar:setMidpoint(cc.p(0, 0))
    progressBar:setBarChangeRate(cc.p(0, 1))
    progressBar:setPosition(cc.p(s.width / 2 - 50, s.height / 2))
    sp_bg:setPosition(cc.p(s.width / 2 - 50, s.height / 2))
    self:addChild(sp_bg)
    self:addChild(progressBar)
    self.press_bar = progressBar
    progressBar:setPercentage(0)
end

-- 技能能量进度条
function Hero:createSkillBar()
    local node = cc.Node:create()
    local s = self.size
    local lightBg = cc.Sprite:createWithSpriteFrameName("ultProgress4.png")--:hide()
    lightBg:runAction(cc.RepeatForever:create(
            cc.Sequence:create(
                    cc.FadeTo:create(0.4, 255 * 0.3),
                    cc.FadeTo:create(0.4, 255 * 1)
            )
    ))
    local lightBar = cc.Sprite:createWithSpriteFrameName("ultProgress3.png")
    local sp_bg = cc.Sprite:createWithSpriteFrameName("ultProgress1.png")
    local sprite = cc.Sprite:createWithSpriteFrameName("ultProgress2.png")
    local progressBar = cc.ProgressTimer:create(sprite)
    progressBar:setType(cc.PROGRESS_TIMER_TYPE_BAR)
    progressBar:setMidpoint(cc.p(0, 0))
    progressBar:setBarChangeRate(cc.p(1, 0))
    node:addChild(sp_bg)
    node:addChild(lightBg)
    node:addChild(progressBar)
    node:addChild(lightBar)
    node:setPosition(cc.p(s.width / 2, 0))
    self:addChild(node)
    progressBar:setPercentage(33)
    progressBar.lightBg = lightBg
    progressBar.lightBar = lightBar
    self.skillBar = progressBar
end

function Hero:heroNormalAni(flag)
    if flag == 1 then
        -- 正面待机
        self.heroSpine:setAnimation(0, "zhengmian_daiji", true)
    else
        -- 侧面待机
        self.heroSpine:setAnimation(0, "cemian_daiji", true)
    end
end

function Hero:heroAtkAni(dir)
    if dir then
        self.atkDir = dir
    end
    if self.atkDir == 1 then
        -- 正面攻击
        self.heroSpine:setAnimation(0, "zhengmian", false)
        self.heroSpine:setScaleX(1)
    elseif self.atkDir == 2 then
        -- 左侧攻击
        self.heroSpine:setAnimation(0, "cemian", false)
        self.heroSpine:setScaleX(-1)
    elseif self.atkDir == 3 then
        -- 右侧攻击
        self.heroSpine:setAnimation(0, "cemian", false)
        self.heroSpine:setScaleX(1)
    end
end

-- 施法区域提示
function Hero:showSkillTipArea(pos)
    local skillType = self:getSkillType()
    if skillType == Define.SKILL_TYPE_AREA then
        -- 范围技能
        self:showAreaSkill(pos)
    elseif skillType == Define.SKILL_TYPE_LINE then
        -- 指定方向技能
        self:showLineSkill(pos)
    end
end

function Hero:showAreaSkill(pos)
    if not self.nodeSkillTip then
        local name = "ult2Area.png"
        if self.heroType == 3 then
            name = "zhunxin2.png"
        elseif self.heroType == 6 then
            name = "zhunxin3.png"
        end
        local img_area = ccui.ImageView:create()
        img_area:setScale(0.6)
        img_area:loadTexture(name, 1)
        self.nodeSkillTip = img_area
        self:addChild(img_area)
    end
    self.nodeSkillTip.pos = pos
    local p = self:convertToNodeSpace(pos)
    self.nodeSkillTip:show()
    self.nodeSkillTip:setPosition(p)
    if not self.isCanUseSkill then
        self.nodeSkillTip:setColor(cc.RED)
    else
        self.nodeSkillTip:setColor(cc.WHITE)
    end
end

function Hero:showLineSkill(pos)
    local p = self:convertToNodeSpace(pos)
    local p2 = cc.p(self.centerPos.x, self.size.height + 5)
    local angle = ExternalTools:getAngleByTowPoint(p, p2)
    local rotation = 90 - math.deg(angle)
    if not self.nodeSkillTip then
        local node = cc.Node:create()
        node.imgTable = {}
        local img_arrow = ccui.ImageView:create()
        img_arrow:loadTexture("jiantou.png", 1)
        table.insert(node.imgTable, img_arrow)
        local num = 15
        local y = 0
        for i = 1, num do
            local dis = i == 1 and 5 or 0
            y = y + dis + 30
            local img_line = ccui.ImageView:create()
            img_line:loadTexture("jiantou2.png", 1)
            img_line.pos = cc.p(0, y)
            img_line:setPosition(img_line.pos)
            node:addChild(img_line)
            table.insert(node.imgTable, img_line)
        end
        img_arrow.pos = cc.p(0, y + 45)
        img_arrow:setPosition(img_arrow.pos)
        node:addChild(img_arrow)
        self.nodeSkillTip = node
        self.nodeSkillTip.pos = node:convertToWorldSpace(img_arrow.pos)
        self:addChild(node)
    end
    self.nodeSkillTip:show()
    self.nodeSkillTip:setRotation(rotation)
    self.nodeSkillTip.rotation = rotation
    self.nodeSkillTip:setPosition(p2)
    if not self.isCanUseSkill then
        for _, v in pairs(self.nodeSkillTip.imgTable) do
            v:setColor(cc.RED)
        end
    else
        for _, v in pairs(self.nodeSkillTip.imgTable) do
            v:setColor(cc.WHITE)
        end
    end
end

-- 隐藏施法区域提示
function Hero:hideSkillTipArea(pos)
    if self.nodeSkillTip then
        self.nodeSkillTip.pos = pos
        self.nodeSkillTip:hide()
    end
end

-- 释放技能
function Hero:useSkill()
    if not self.isCanUseSkill then return end
    if not self.nodeSkillTip then return end
    if self.nodeSkillTip then self.nodeSkillTip:hide() end
    self.state = Define.state.ult
    if self.heroType == 1 then
        self:createSkill_1()
    elseif self.heroType == 2 then
        self:createSkill_2()
    elseif self.heroType == 3 then
        if not self:createSkill_3() then
            GameTool:showTxtTip("范围内没有敌人！")
            return
        end
    elseif self.heroType == 4 then
        self:createSkill_4()
    elseif self.heroType == 5 then
        self:createSkill_5()
    elseif self.heroType == 6 then
        self:createSkill_6()
    end
    self:setSkillPress(0)
end

function Hero:getBulletInfo(damagePer)
    local damagePer = damagePer or 1
    local info = {
        heroType = self.heroType,
        atkType = self.atkType,
        damage = self.damage * damagePer,
        damageOff = self.damageOff,
        critRate = self.critRate,
        critDps = self.critDps,
        crit2Rate = self.crit2Rate,
        crit2Dps = self.crit2Dps,
        beHead = self.beHead,
        beheadHp = self.beheadHp,
        isContinue = self.isContinue,
        vertigoTime = self.vertigoTime,
        bulletRange = self.bulletRange,
        atkRange = self.atkRange,
        bounce = self.bounce,
        bounceUp = self.bounceUp,
        personalPara = clone(self.personalPara),
        skillPara = clone(self.skillPara),
        speed = GameDataCfg.bulletSpeed[self.heroType],
    }
    return info
end

-- 弓箭手技能
function Hero:createSkill_1()
    local damage = self.skillPara[1]
    local num = self.powerBulletNum
    --damage = GameTool:dataEncrypt(damage)
    --num = GameTool:dataEncrypt(num)
    local rotation = self.nodeSkillTip.rotation
    local atkPos = self:getAtkPos()
    local function createBullet()
        for i = 1, num do
            local dis = 30
            local x = math.random(-dis, dis)
            local y = math.random(-dis, dis)
            local delay = 0
            if y < 0 then
                delay = math.random(100, 200) / 1000
            end
            performWithDelay(self, function ()
                local info = self:getBulletInfo(damage)
                info.pos = cc.p(atkPos.x + x, atkPos.y + y)
                info.rotation = math.random(-20, 20) + rotation
                info.bulletType = Define.bulletType.ult_1
                info.speed = 900
                self.gameView:addBullet(info)
            end, delay)
        end
    end
    self:setAtkDir(rotation)
    self:heroAtkAni()
    local showPos = self:convertToWorldSpace(cc.p(self.size.width / 2, self.size.height))
    self.gameView:showWorldTxtTip("wjqf", showPos)
    performWithDelay(self, function ()
        createBullet()
        self.state = Define.state.attack
    end, 0.15)
    AudioManager:playSoundEffect("special_arrow")
    printf("弓箭手使用技能，Para1:%.2f, Para2:%.2f", damage, num)
end

-- 炮手技能
function Hero:createSkill_2()
    local damage = self.skillPara[1]        -- 伤害比例
    local num = self.skillPara[2]           -- 范围
    --num = math.min(num, 30)
    --num = math.max(num, 50)
    --damage = GameTool:dataEncrypt(damage)
    --num = GameTool:dataEncrypt(num)
    local toPos = self.nodeSkillTip.pos
    local idx = 0
    local y_dis = { num, 0, -num }
    local col = 6
    for i = 1, 3 do
        local p = cc.p(toPos.x, toPos.y + y_dis[i])
        local posList = ExternalTools:getCenterSortPos(p, col, num)
        for j = 1, col do
            idx = idx + 1
            performWithDelay(self, function()
                local imgBg = ccui.ImageView:create()
                imgBg:loadTexture("boomArea.png", 1)
                imgBg:setScale(num / 100)
                local pos = self:convertToWorldSpace(cc.p(self.size.width / 2 + math.random(-20, 20), self.size.height))
                local info = self:getBulletInfo(damage)
                info.pos = pos
                info.toPos = posList[j]
                info.fixNode = imgBg
                info.bulletType = Define.bulletType.ult_2
                info.speed = 1000
                --info.vertigoTime = 0
                imgBg:setPosition(info.toPos)
                self.gameView.panel_enemy:addChild(imgBg, 0)

                self.atkDir = 1
                self:heroAtkAni()
                self.gameView:addBullet(info)
                AudioManager:playSoundEffect("cannon")
                if i == 3 and j == 4 then
                    self.state = Define.state.attack
                end
            end, (idx - 1) * 0.1)
        end
    end
    local showPos = self:convertToWorldSpace(cc.p(self.size.width / 2, self.size.height))
    self.gameView:showWorldTxtTip("jszd", showPos)
    printf("炮手使用技能，Para1:%.2f, Para2:%.2f", damage, num)
end

-- 狙击手技能
function Hero:createSkill_3()
    local damage = self.skillPara[1]        -- 伤害比例
    local num = self.skillPara[2]           -- 子弹数量
    --damage = GameTool:dataEncrypt(damage)
    --num = GameTool:dataEncrypt(num)
    performWithDelay(self, function()
        self.state = Define.state.attack
    end, 0.5)
    printf("狙击手使用技能，Para1:%.2f, Para2:%.2f", damage, num)
    local enemies = self:searchEnemy(num)
    if #enemies > 0 then
        local count = num
        local atkEnemies = self:getDistanceMost(enemies, count, self.nodeSkillTip.pos)
        if #atkEnemies < 1 then
            return false
        end
        for _, atkEnemy in pairs(atkEnemies) do
            local atkPos = self:getAtkPos()
            local rotation = ExternalTools:getAngleByTowPoint(atkEnemy.pos, atkPos)
            rotation = 90 - math.deg(rotation)
            local info = self:getBulletInfo(damage)
            info.baotou = true
            info.bulletType = Define.bulletType.ult_3
            info.atkEnemy = atkEnemy
            self:createHeroAtk_3(info, atkPos, rotation, atkEnemy.pos, true)
        end
        local showPos = self:convertToWorldSpace(cc.p(self.size.width / 2, self.size.height))
        self.gameView:showWorldTxtTip("rdzf", showPos)
        return true
    else
        return false
    end
    return false
end

-- 喷火兵技能
function Hero:createSkill_4()
    local para1 = self.skillPara[1]     -- 每秒伤害
    local para2 = self.skillPara[2]     -- 持续时间
    --para1 = GameTool:dataEncrypt(para1)
    --para2 = GameTool:dataEncrypt(para2)
    local info = self:getBulletInfo(para1)
    info.bulletType = Define.bulletType.ult_4
    info.pos = self:convertToWorldSpace(cc.p(self.size.width / 2, self.size.height))
    info.rotation = self.nodeSkillTip.rotation
    info.burn = self.burn
    self:setAtkDir(info.rotation)
    self:heroAtkAni()
    self.gameView:addBullet(info)
    self.gameView:showWorldTxtTip("lyqx", info.pos)
    AudioManager:playSoundEffect("special_fire")
    printf("喷火兵使用技能，Para1:%.2f, Para2:%.2f", para1, para2)
end

-- 忍者技能
function Hero:createSkill_5()
    local para1 = self.skillPara[1]         -- 伤害比例
    local para2 = self.skillPara[2]         -- 飞镖个数
    --para1 = GameTool:dataEncrypt(para1)
    --para2 = GameTool:dataEncrypt(para2)
    local rotation = self.nodeSkillTip.rotation
    self:setAtkDir(rotation)
    local atkPos = self:getAtkPos()
    self:heroAtkAni()
    for i = 1, para2 do
        local info = self:getBulletInfo(para1)
        info.bulletType = Define.bulletType.ult_5
        local x = math.random(-20, 20)
        info.pos = cc.p(atkPos.x + x, atkPos.y)
        info.rotation = rotation
        info.speed = 850
        performWithDelay(self, function ()
            self.gameView:addBullet(info)
            if i == para2 then
                self.state = Define.state.attack
            end
        end, (i - 1) * 0.15)
    end
    self.gameView:showWorldTxtTip("ckxt", atkPos)
    AudioManager:playSoundEffect("hit_toumao")
    printf("忍者使用技能，Para1:%.2f, Para2:%.2f", para1, para2)
end

-- 荆棘巫女技能
function Hero:createSkill_6()
    local para1 = self.skillPara[1]             -- 伤害比例
    --local para2 = 8 + self.powerBulletNum     -- 地刺数量
    local para2 = 8 + self.bulletNum            -- 地刺数量
    local para3 = self.skillPara[2]             -- 眩晕时间
    --para1 = GameTool:dataEncrypt(para1)
    --para2 = GameTool:dataEncrypt(para2)
    --para3 = GameTool:dataEncrypt(para3)
    local cp = self.nodeSkillTip.pos
    local num = math.floor(para2 / 2)
    local posList1 = ExternalTools:getCenterSortPos(cp, num, 35, 1)
    local posList2 = ExternalTools:getCenterSortPos(cp, num, 35, 2)
    posList1 = table.Shuffle(posList1)
    posList2 = table.Shuffle(posList2)
    for i = 1, 2 do
        for j = 1, num do
            local info = self:getBulletInfo()
            if i == 1 then
                info.pos = posList1[j]
            else
                info.pos = posList2[j]
            end
            info.vertigoTime = para3
            info.rotation = 0
            info.bulletType = Define.bulletType.ult_6
            performWithDelay(self, function ()
                self.gameView:addBullet(info)
            end, (j - 1) * 0.1)
        end
    end
    self:heroAtkAni()
    local showPos = self:convertToWorldSpace(cc.p(self.size.width / 2, self.size.height))
    self.gameView:showWorldTxtTip("nvzn", showPos)
    performWithDelay(self, function ()
        self.state = Define.state.attack
    end, 0.15)
    AudioManager:playSoundEffect("hit_dici")
    printf("荆棘巫女使用技能，伤害比例:%.2f, 地刺数量:%.2f, 眩晕时间:%.2f", para1, para2, para3)
end

-- 判断能否攻击此类型的怪
function Hero:isCanAtkEnemy(enemy)
    if enemy.isBox then
        return true
    end
    if enemy.state == Define.state.move or enemy.state == Define.state.frozen then
        if self.atkType[enemy.atkType] == 1 then
            return true
        end
    end
    return false
end

-- 优先攻击指定怪物
function Hero:getSpecialEnemy(list)
    local enemies = {}
    for _, v in pairs(list) do
        if v.isXianJiZhe then
            table.insert(enemies, v)
        end
    end
    return enemies
end

-- 获取距离城墙近的敌人
function Hero:getDistanceMost(list, num, pos)
    if #list < 1 then
        return {}
    end
    local aimTable = {}              -- 攻击目标
    local hero3Skill_aim = {}        -- 狙击手技能目标
    local boss_aim = {}              -- 狙击手技能点杀的boss
    local isHero3Skill = false
    for _, v in pairs(list) do
        if not tolua.isnull(v) then
            local p = cc.p(v.pos)
            local p2 = pos or cc.p(p.x, 500)
            v.dis = cc.pGetDistance(p, p2)
            if self.heroType == 3 and pos then
                -- 狙击手技能
                isHero3Skill = true
                --if v.dis < 100 then
                if v.isBoss then
                    boss_aim[1] = v
                else
                    if v.isSpecialState and not v:isSpecialState() then
                        table.insert(hero3Skill_aim, v)
                    end
                end
                --end
            end
        end
    end

    if isHero3Skill then
        -- 狙击手技能特殊处理
        local boss = boss_aim[1]
        if boss then
            -- 有boss, 优先攻击Boss
            local bulletNum = math.random(num - 3, num)
            for i = 1, bulletNum do
                table.insert(aimTable, boss)
            end
            num = num - bulletNum
        end
        table.sort(hero3Skill_aim, function (a, b)
            return a.dis < b.dis
        end)
        local newAim = ExternalTools:getDataFromTable(hero3Skill_aim, num)
        for i = 1, #newAim do
            table.insert(aimTable, newAim[i])
        end
        return aimTable
    end

    table.sort(list, function (a, b)
        return a.dis < b.dis
    end)

    for _, v in pairs(list) do
        local enemy = v
        local f1 = not enemy.haveXianJiZhe
        local f2 = not (enemy.isCiKeLianMeng and enemy.opacity <= enemy.ciKeLianMeng.opacity)
        if f1 and f2 then
            table.insert(aimTable, enemy)
            return aimTable
        end
    end
    return { list[1] }
end

function Hero:getEnemies(list, isBox, num)
    local enemies = {}
    for _, enemy in pairs(list) do
        if self:isCanAtkEnemy(enemy) then
            if isBox then
                if enemy.isBornOver then
                    table.insert(enemies, enemy)
                end
            else
                table.insert(enemies, enemy)
            end
        end
    end
    if num then
        local len = #enemies
        if len < num then
            local sub = num - len
            local isHave = sub >= len
            local t = ExternalTools:getRandomFromTable(enemies, sub, true, isHave)
            enemies = ExternalTools:tableConnect(t, enemies)
        end
    end
    return enemies
end

-- 搜索可以攻击的怪物
function Hero:searchEnemy(num)
    local enemyMgr = self.gameView.enemyMgr
    local boxList = enemyMgr.boxEnemyTable
    if #boxList > 0 then
        return self:getEnemies(boxList, true)
    else
        local enemyTable = enemyMgr.enemyTable
        return self:getEnemies(enemyTable, false, num)
    end
end

-- 连续射击检测
function Hero:continueAddAtkCheck(info, call, rad, delay)
    if self.isLXSJ then
        local delay = delay or 0.125
        performWithDelay(self, function ()
            if call then
                call(info, rad)
            end
        end, delay)
    end
end

-- 正向攻击加一检测
function Hero:forwardAddAtkCheck()
    if self.isZXJY then
        -- 正向加一
        --if self.atkDir == 1 then
           return true
        --end
    end
    return false
end

-- 斜向加一检测
function Hero:slantAddAtkCheck(call)
    if self.isXXJY then
        local tmp = call
        local newCall = function(info)
            local num = 15
            --if self.heroType == 4 then
            --    num = 10
            --end
            local info1 = clone(info)
            local info2 = clone(info)
            info1.rotation = info1.rotation - num
            info2.rotation = info2.rotation + num
            self.gameView:addBullet(info1)
            self.gameView:addBullet(info2)
            tmp(info)
        end
        return newCall
    end
    return call
end

-- 炮兵溅射攻击
function Hero:heroSecondAtk(atkPos, toPos, r)
    local rotation = r
    local info = self:getBulletInfo()
    info.isSecondAtk = true
    info.speed = 300
    self:createHeroAtk_2(info, atkPos, rotation, toPos)
end

-- 角色普通攻击
function Hero:heroNormalAtk(num, notSound)
    local enemies = self:searchEnemy()
    if #enemies > 0 then
        self.state = Define.state.attack
        local atkEnemy
        if self.heroType == 3 and num > 1 then
            atkEnemy = enemies[math.random(1, #enemies)]
        else
            atkEnemy = self:getDistanceMost(enemies, 1)[1]
        end
        if not atkEnemy then
            self.state = Define.state.stop
            return
        end
        local atkPos = self:getAtkPos()
        local rad = ExternalTools:getAngleByTowPoint(atkEnemy.pos, atkPos)
        local rotation = 90 - math.deg(rad)
        local info = self:getBulletInfo()
        if self.heroType == 1 then
            info.atkEnemy = atkEnemy
            info.poison = self.poison
            self:createHeroAtk_1(info, atkPos, rotation)
        elseif self.heroType == 2 then
            self:createHeroAtk_2(info, atkPos, rotation, atkEnemy.pos)
        elseif self.heroType == 3 then
            info.atkEnemy = atkEnemy
            info.bulletType = Define.bulletType.atk_3
            self.atkEnemy = atkEnemy
            self:createHeroAtk_3(info, atkPos, rotation, atkEnemy.pos, false, notSound)
        elseif self.heroType == 4 then
            info.burn = self.burn
            if self.isJGJC then
                info.damage = info.damage + (self.damge_jgjc * self.damageTmp)
            end
            self:createHeroAtk_4(info, rotation)
        elseif self.heroType == 5 then
            info.atkEnemy = atkEnemy
            self:createHeroAtk_5(info, atkPos, rotation)
        elseif self.heroType == 6 then
            info.bleed = self.bleed
            self:createHeroAtk_6(info, atkPos, rotation, rad)
        end
    else
        self.state = Define.state.stop
    end
end

function Hero:getRotatePos(pos, rotation, width, flag)
    local w = width or 50
    local f = flag or 2
    local posList = ExternalTools:getCenterSortPos(pos, 2, w, f)
    local r = math.rad(90 - rotation)
    for i, v in pairs(posList) do
        posList[i] = ExternalTools:getRotatePos(v, pos, r)
    end
    return posList
end

function Hero:createHeroAtk_1(info, atkPos, rotation)
    info.pos = atkPos
    info.rotation = rotation
    info.bulletType = Define.bulletType.atk_1
    self:setAtkDir(rotation)
    self:heroAtkAni()

    local function createBullet(info)
        self.gameView:addBullet(info)
    end

    if self:forwardAddAtkCheck() then
        createBullet = function(info)
            local newInfo = clone(info)
            local posList = self:getRotatePos(info.pos, info.rotation)
            info.pos = posList[1]
            newInfo.pos = posList[2]
            self.gameView:addBullet(info)
            self.gameView:addBullet(newInfo)
        end
    end
    createBullet = self:slantAddAtkCheck(createBullet)
    createBullet(clone(info))
    self:continueAddAtkCheck(clone(info), createBullet)
    AudioManager:playSoundEffect("hit_shejian")
end

function Hero:createHeroAtk_2(info, atkPos, rotation, toPos)
    if not info.isSecondAtk then
        AudioManager:playSoundEffect("cannon")
    end
    info.pos = atkPos
    info.toPos = toPos
    info.rotation = rotation
    info.bulletType = Define.bulletType.atk_2
    if not info.isSecondAtk then
        self:setAtkDir(rotation)
        self:heroAtkAni()
    end

    local function createFix(info)
        local fixNode = cc.Sprite:createWithSpriteFrameName("boomArea.png")
        fixNode:setPosition(info.toPos)
        fixNode:setScale(0.7)
        info.fixNode = fixNode
        self.gameView.panel_enemy:addChild(fixNode, 0)
        self.gameView:addBullet(info)
    end

    local function createBullet(info)
        createFix(info)
    end

    if info.isSecondAtk then
        self.gameView:addBullet(info)
        return
    end

    if self:forwardAddAtkCheck() then
        createBullet = function(info)
            local newInfo = clone(info)
            local posList = self:getRotatePos(info.pos, info.rotation)
            info.pos = posList[1]
            newInfo.pos = posList[2]

            local posList2 = self:getRotatePos(info.toPos, info.rotation)
            info.toPos = posList2[1]
            newInfo.toPos = posList2[2]

            createFix(info)
            createFix(newInfo)
        end
    end
    createBullet = self:slantAddAtkCheck(createBullet)
    createBullet(clone(info))
    self:continueAddAtkCheck(clone(info), createBullet)
end

function Hero:createHeroAtk_3(info, atkPos, rotation, toPos, isSkill, notSound)
    local fixNode = cc.DrawNode:create()
    self.fixNode = fixNode
    self.gameView.panel_enemy:addChild(fixNode, 9999)
    self:setAtkDir(rotation)
    self:heroAtkAni()

    info.pos = atkPos
    info.toPos = toPos
    info.rotation = rotation
    info.fixNode = fixNode

    local function createFix(info)
        if not tolua.isnull(self.fixNode) then
            local sp = info.pos
            local ep = info.toPos
            self.fixNode:drawSegment(sp, ep, 1, cc.c4b(1, 0, 0, 1))
            local img_bg = ccui.ImageView:create("ult3.png", 1)
            local img_zx = ccui.ImageView:create("snipingAim.png", 1)
            img_zx:setScale(1.5)
            local p = self.fixNode:convertToNodeSpace(ep)
            img_bg:setPosition(p)
            img_zx:setPosition(p)
            self.fixNode:addChild(img_bg, 1)
            self.fixNode:addChild(img_zx, 0)
            self.gameView:addBullet(info)
        end
    end

    local function createBullet(info)
        createFix(info)
    end

    if isSkill then
        -- 技能不受三选二影响
        createBullet(info)
        return
    end
    createBullet(clone(info))
    if not notSound then
        AudioManager:playSoundEffect("unAtt")
    end
end

function Hero:createHeroAtk_4(info, rotation)
    info.bulletType = Define.bulletType.atk_4
    self:setAtkDir(rotation)
    self:heroAtkAni()
    info.rotation = rotation + 90
    if self.atkDir == 1 then
        --info.rotation = 0 + 90
        info.pos = self:convertToWorldSpace(cc.p(self.size.width * 0.5 + 25, self.size.height + 50))
    elseif self.atkDir == 2 then
        --info.rotation = -45 + 90
        --info.rotation = math.min(info.rotation, 60)
        info.pos = self:convertToWorldSpace(cc.p(self.size.width * 0.5 - 85, self.size.height + 25))
    elseif self.atkDir == 3 then
        --info.rotation = 45 + 90
        --info.rotation = math.max(info.rotation, 150)
        info.pos = self:convertToWorldSpace(cc.p(self.size.width * 0.5 + 95, self.size.height + 20))
    end

    local function createBullet(info)
        self.gameView:addBullet(info)
    end

    if self:forwardAddAtkCheck() then
        createBullet = function(info)
            local newInfo = clone(info)
            --local posList = self:getRotatePos(info.pos, info.rotation, 50, 1)
            --info.pos = posList[1]
            --newInfo.pos = posList[2]
            newInfo.rotation = info.rotation - 5
            info.rotation = info.rotation + 5
            self.gameView:addBullet(info)
            self.gameView:addBullet(newInfo)
        end
    end
    createBullet = self:slantAddAtkCheck(createBullet)
    createBullet(clone(info))
    self:continueAddAtkCheck(clone(info), createBullet)
    AudioManager:playSoundEffect("firegun")
end

function Hero:createHeroAtk_5(info, atkPos, rotation)
    info.pos = atkPos
    info.rotation = rotation
    info.bulletType = Define.bulletType.atk_5
    self:setAtkDir(rotation)
    self:heroAtkAni()
    local function createBullet(info)
        self.gameView:addBullet(info)
    end
    if self:forwardAddAtkCheck() then
        createBullet = function(info)
            local newInfo = clone(info)
            local posList = self:getRotatePos(info.pos, info.rotation)
            info.pos = posList[1]
            newInfo.pos = posList[2]
            self.gameView:addBullet(info)
            self.gameView:addBullet(newInfo)
        end
    end
    createBullet = self:slantAddAtkCheck(createBullet)
    createBullet(clone(info))
    self:continueAddAtkCheck(clone(info), createBullet)
    AudioManager:playSoundEffect("wheel")
end

function Hero:createHeroAtk_6(info, atkPos, rotation, rad)
    info.pos = atkPos
    info.rotation = rotation
    info.bulletType = Define.bulletType.atk_6
    self:setAtkDir(rotation)
    self:heroAtkAni()
    local function createBullet(info, rad)
        local num = 8 + self.bulletNum
        local w = 50
        local cp = cc.p(info.pos.x, info.pos.y)
        for i = 1, num do
            local newInfo = clone(info)
            local x = (i - 1) * w * math.cos(rad)
            local y = (i - 1) * w * math.sin(rad)
            performWithDelay(self, function ()
                local newPos = cc.p(cp.x + x, cp.y + y)
                newInfo.pos = newPos
                self.gameView:addBullet(newInfo)
            end, (i - 1) * 0.1)
        end
    end
    local createBulletTmp = createBullet
    if self:forwardAddAtkCheck() then
        local tmp = createBullet
        createBullet = function(info, rad)
            local newInfo = clone(info)
            local posList = self:getRotatePos(info.pos, info.rotation)
            info.pos = posList[1]
            newInfo.pos = posList[2]
            tmp(info, rad)
            tmp(newInfo, rad)
        end
    end
    if self.isXXJY then
        local tmp = createBullet
        createBullet = function(info, rad)
            local info1 = clone(info)
            local info2 = clone(info)
            local sub = math.rad(15)
            local rad1 = rad - sub
            local rad2 = rad + sub
            info1.rotation = info1.rotation - 15
            info2.rotation = info2.rotation + 15
            tmp(info, rad)
            createBulletTmp(info1, rad1)
            createBulletTmp(info2, rad2)
        end
    end
    createBullet(info, rad)
    local delay = 0.25
    self:continueAddAtkCheck(info, createBullet, rad, delay)
end

-- 增加技能能量
function Hero:addSkillEnergy()
    self.ultCool = self.ultCool + Define.recoveryKill
    self:setSkillPress(self.ultCool)
end

-- 设置技能能量进度条
function Hero:setSkillPress(p)
    self.ultCool = p
    self.skillBar:setPercentage(p)
    self.skillBar.lightBg:setVisible(p >= 99.9)
    self.skillBar.lightBar:setVisible(p >= 99.9)
    self.isCanUseSkill = p >= 99.9
end

-- 技能能量条恢复
function Hero:skillRecover(dt)
    if self.ultCool < 100 then
        self.ultCool = self.ultCool + (Define.recoveryKill * dt)
        local p = self.ultCool
        self:setSkillPress(p)
    else
        if self.heroType == 1 and not self.showGuide then
            self.showGuide = true
            self.gameView:showUseSkillGuide()
        end
    end
end

-- 目标敌人死亡
function Hero:atkEnemyDie()
    if not tolua.isnull(self.fixNode) then
        self.fixNode:removeFromParent(true)
        self.fixNode = nil
    end
    self.atkEnemy = nil
end

function Hero:handleSkillOver(data)
    if data.heroType == self.heroType then
        if self.state == Define.state.ult then
            self.state = Define.state.attack
        end
    end
end

function Hero:handleKillEnemy(data)
    if data.heroType == self.heroType then
        if not data.killFlag then
            -- 掉落道具
            self.gameView:dropProp(data)

            -- 掉落技能能量球
            local isDrop = ExternalTools:isSuccessful(Define.skillBallGet)
            if isDrop then
                local function call()
                    self:addSkillEnergy()
                end
                local data = {
                    dropPos = data.pos,
                    heroType = self.heroType,
                }
                self.gameView:dropSkillBall(data, call)
            end
        end

        -- 掉落金币
        if not data.isBaby and data.dropMoney and data.dropMoney > 0 then
            self.gameView:dropCoinAni(data.pos, data.dropMoney)
        end
    end
end

-- 角色属性更新
function Hero:handleRoleUpdate(data)
    local Icon = data.Icon
    local buffValue = data.buffValue
    --local newBuffNum = GameTool:dataEncrypt(buffValue / 1e4)
    local newBuffNum = buffValue / 1e4
    if Icon == 1 then
        -- 正向加一
        self.isZXJY = true
    elseif Icon == 2 then
        -- 斜向加一
        self.isXXJY = true
    elseif Icon == 3 then
        -- 连续射击
        self.isLXSJ = true
    elseif Icon == 8 then
        -- 近攻加成
        self.isJGJC = true
        if self.heroType == 4 then
            self.damge_jgjc = self.damge_jgjc + newBuffNum
        end
    elseif Icon == 4 or Icon == 14 then
        -- 攻击力
        self.damage = self.damage + (newBuffNum * self.damageTmp)
    elseif Icon == 5 or Icon == 15 then
        -- 暴击率
        self.critRate = self.critRate + newBuffNum
    elseif Icon == 6 or Icon == 16 then
        -- 暴击伤害
        self.critDps = self.critDps + newBuffNum
    elseif Icon == 7 or Icon == 17 then
        -- 攻速
        self.attackSpeedPer = self.attackSpeedPer + newBuffNum
        --self.atkSpeed = self.atkSpeed + self.attackSpeedPer * self.atkSpeed
    end
end

-- 进入狂暴状态
function Hero:crazyState()
    if not self.isCrazy then
        self.isCrazy = true
        self.atkCool = 0
        self.atkSpeed = self.atkSpeed * Define.CRAZY_UP
        self:crazyEffect()
    end
end

-- 解除狂暴状态
function Hero:removeCrazyState()
    if self.isCrazy then
        self.isCrazy = false
        self.atkSpeed = self.atkSpeed / Define.CRAZY_UP
        self:removeCrazyEffect()
    end
end

-- 狂暴光环
function Hero:crazyEffect()
    local info = JunTuanCfg.spineAni.EffectAni.crazy
    local ani = AnimationMgr:createSpine(info.file)
    ani:setAnimation(0, info.names[1], true)
    ani:setPosition(cc.p(self.centerPos.x, spAniY[self.heroType]))
    self:addChild(ani, 999)
    self.ani_crazyBuff = ani
end

-- 移除狂暴关环
function Hero:removeCrazyEffect()
    if self.ani_crazyBuff then
        self.ani_crazyBuff:removeFromParent()
        self.ani_crazyBuff = nil
    end
end

function Hero:onExit()

end

return Hero