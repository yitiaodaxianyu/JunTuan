---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by hkc.
--- DateTime: 2021/4/9 10:22
---

local Enemy = class("Enemy", cc.Node)
local zIndex = {
    drawNode = 0,
    bottomAni = 1,
    spAni = 2,
    topAni = 3,
    hpBar = 4,
}
local dpsFrom = {
    atk = 0,
    skill = 1,
    buff = 2,
    sceneBuff = 3
}
function Enemy:ctor(enemyInfo)
    self.gameDataMgr = GameDataManager:getInstance()
    self:enableNodeEvents()
    self:initData(enemyInfo)
    self:initEnemyNode()
    self:setCascadeOpacityEnabled(true)
end

function Enemy:drawNode()
    local node = cc.DrawNode:create()
    node:drawDot(cc.p(0, 0), self.bounding_radius, cc.c4b(255, 100, 100, 0.7))
    self:addChild(node, zIndex.drawNode)
end

function Enemy:onEnter()
    self.parent = self:getParent()
    if self.isXianJiZhe or self.isDaTongLing then
        self:setLocalZOrder(-9999)
    end
end

function Enemy:initEnemyNode()
    local delay = 0.5
    if not self._isBaby then
        self:createShowAni()
        delay = 0
    end
    performWithDelay(self, function ()
        self:createEnemy()
    end, delay)
    self:createEnemyHp()
end

function Enemy:initData(enemyInfo)
    self.enemyInfo = enemyInfo
    self.state = Define.state.born
    --self.moveDir = "y"
    self.wordTipList = {}

    self.type = enemyInfo.type
    self.atkType = enemyInfo.attType
    self.isBoss = enemyInfo.isBoss
    self.hp = enemyInfo.hp
    self.maxHp = self.hp
    self.speed = enemyInfo.speed
    self.dropMoney = math.floor(enemyInfo.money / enemyInfo.nums)

    -- 初始化buff
    self.frozen = { 0, 0, 0, 0, 0 }         -- 冰封
    self.paralysis = { 0, 0, 0, 0, 0 }      -- 麻痹
    self.burn = { 0, 0, 0, 0, 0 }           -- 灼烧
    self.poison = { 0, 0, 0, 0, 0 }         -- 中毒
    self.bleed = { 0, 0, 0, 0, 0 }          -- 流血
    self.iceBoomDot = { 0, 0, 0, 0, 0 }     -- 冰冻爆炸

    self._isBaby = enemyInfo.isBaby         -- 是否是分裂而来的怪物
    self._charmTime = 0                     -- 魅惑时间
    self._curseTime = 0                     -- 诅咒时间
    self._curseUp = 0                       -- 诅咒伤害提升
    self._debuffSwamp = 0                   -- 减益buff沼泽
    self._debuffIce = 0                     -- 减益buff冰
    self._debuffDesert = 0                  -- 减益buff沙漠
    self._debuffThunderDebuffTime = 0       -- 减益buff雷击
    self._vertigoTime = 0                   -- 被眩晕时间

    self.repelValue = 10
    self.speedSlow = 3                      -- 可以被减速几次

    self:initAffix()
    local enemyType = self.type
    self:initBoundingData(GameDataCfg.enemyRadiusInfo[enemyType])
end

function Enemy:resetAnimation()
    if self.isTuBaShu then
        self.enemySpine:setAnimation(0,"zou", true)
    end
    self.enemySpine:resume()
    self.enemySpine:setOpacity(0)
    self.enemySpine:runAction(cc.Sequence:create(
            cc.FadeIn:create(0.5),
            cc.CallFunc:create(function ()
                if not self._isBaby then
                    self.state = Define.state.move
                end
                if self.isDaTongLing then
                    if self.ani_datongling_haro then
                        self.ani_datongling_haro:show()
                    end
                end
            end)
    ))
end

function Enemy:setPositionInfo(pos)
    self.pos = pos
    self:setPosition(pos)
    --self:drawNode()
end

function Enemy:setScaleInfo(scale)
    self.scale = scale
    if self.isBoss then
        self.bounding_radius = self.bounding_radius + 20
    end
    self:setScale(scale)
end

function Enemy:setOpacityInfo(opacity)
    self.opacity = opacity
    self:setOpacity(opacity)
end

function Enemy:setManager(enemyManager)
    self.enemyMgr = enemyManager
end

-- 出场动画
function Enemy:createShowAni()
    local info = {
        file = "res/JunTuan/spine/enemy/chuguai"
    }
    local animation = AnimationMgr:createSpine(info.file, 1)
    animation:setAnimation(0,"animation", false)
    animation:registerSpineEventHandler(function(event)
        performWithDelay(self, function ()
            animation:removeFromParent(true)
        end, 0.1)
    end, sp.EventType.ANIMATION_COMPLETE)
    self:addChild(animation, zIndex.bottomAni)
end

function Enemy:createEnemy()
    local info = {
        file = string.format("res/JunTuan/spine/enemy/guai_%02d", self.type)
    }
    local animation = AnimationMgr:createSpine(info.file, 1)
    if self.isTuBaShu then
        animation:setAnimation(0,"zou", true)
        animation:registerSpineEventHandler(function(event)
            if event.animation == "chuxian" then
                self.atkType = 1
                self.enemyInfo.atkType = 1
                animation:setAnimation(0, "daiji", true)
                local z = self.zOrder
                self:setLocalZOrder(z)
            elseif event.animation == "xiaoshi" then
                self.atkType = 2
                self.enemyInfo.atkType = 2
                animation:setAnimation(0, "zou", true)
                self:setLocalZOrder(-1)
            end
        end, sp.EventType.ANIMATION_COMPLETE)
    else
        animation:setAnimation(0,"animation", true)
    end
    self.enemySpine = animation
    self.enemySpine.pos = cc.p(0, -40)
    if self.type == 10 then
        -- 刺客联盟蝎子
        self.enemySpine.pos.y = 0
    elseif self.type == 6 then
        -- 蜘蛛
        self.enemySpine.pos.y = -25
    end
    animation:setPosition(self.enemySpine.pos)
    self:addChild(animation, zIndex.spAni)

    animation:setOpacity(0)
    animation:runAction(cc.Sequence:create(
            cc.FadeIn:create(0.5),
            cc.CallFunc:create(function ()
                if not self._isBaby and self.state ~= Define.state.frozen then
                    self.state = Define.state.move
                end
                if self.isDaTongLing then
                    if self.ani_datongling_haro then
                        self.ani_datongling_haro:show()
                    end
                end
            end)
    ))
end

-- 怪物血条
function Enemy:createEnemyHp()
    local loadingBar = ccui.LoadingBar:create()
    local bgName = "progress_1_bg.png"
    local s = cc.size(100, 15)
    if self.isBoss then
        s = cc.size(132, 34)
        bgName = "bossHpBg.png"
        loadingBar:loadTexture("bossHpBar.png", ccui.TextureResType.plistType)
        loadingBar:setContentSize(cc.size(s.width * 1.03, s.height * 1.5))
        loadingBar:setAnchorPoint(cc.p(0, 0.5))
        loadingBar:setPosition(cc.p(s.width * 0.12, s.height * 0.6))
    else
        loadingBar:loadTexture("progress_1.png", ccui.TextureResType.plistType)
        loadingBar:setContentSize(cc.size(s.width, s.height * 1.5))
        loadingBar:setPosition(cc.p(s.width / 2, s.height / 2))
    end
    local bgType = ccui.TextureResType.plistType
    local layout = ExternalTools:createLayout(bgName, bgType, s)
    layout:setBackGroundColorType(ccui.LayoutBackGroundColorType.none)
    layout:setBackGroundImageScale9Enabled(true)
    loadingBar:ignoreContentAdaptWithSize(false)
    loadingBar:setCapInsets(cc.rect(0, 0, 0, 0))
    loadingBar:setColor(cc.RED)
    loadingBar:setPercent(100)
    layout:addChild(loadingBar)
    layout:setPositionY(GameDataCfg.enemyHpY[self.enemyInfo.type])
    self:addChild(layout, zIndex.hpBar)
    loadingBar.parent = layout:hide()
    self.hpLoadingBar = loadingBar
end

function Enemy:initAffix()
    self.isDaTongLing = false
    self.isCiKeLianMeng = false
    self.isHanBingHuWei = false
    self.isZhanDouKuang = false
    self.isFuChouZhiShen = false
    self.isXianJiZhe = false
    self.isWuWeiZhe = false
    self.isShuangShengZi = false
    self.isMuTi = false

    if self.enemyInfo.MonsterEffectId ~= 0 then
        local v = self.enemyInfo.MonsterEffectId
        local affixConfig = self.gameDataMgr:getEnemyAffixCfg(v)
        local affixType = affixConfig.Type
        self.affixConfig = affixConfig
        if 4 == affixType then
            self:initDaTongLing(v)
        elseif 5 == affixType then
            self:initCiKeLianMeng(v)
        elseif 7 == affixType then
            self:initZhanDouKuang(v)
        elseif 8 == affixType then
            self:initFuChouZhiShen(v)
        elseif 11 == affixType then
            self:initXianJiZhe(v)
        elseif 13 == affixType then
            self:initWuWeiZhe(v)
        elseif 3 == affixType then
            self:initShuangShengZi(v)
        elseif 6 == affixType then
            self:initMuTi(v)
        elseif 9 == affixType then
            self:initJiaSuGuai(v)
        elseif 10 == affixType then
            self:initHouZiGuai(v)
        elseif 12 == affixType then
            self:initZaiShengGuai(v)
        elseif 14 == affixType then
            self:initShaYuQi(v)
        elseif 15 == affixType then
            self:initTuBaShu(v)
        elseif 16 == affixType then
            self:initFeiTing(v)
        end
    end
end

function Enemy:initDaTongLing(id)
    self.isDaTongLing = true
    self.datonglingLineArr = {}
    self.affixConfig.Param[4] = 1000
    self.daTongLing = {
        radius = self.affixConfig.Param[1],
        num = self.affixConfig.Param[2],
        rate = self.affixConfig.Param[3],
        interval = self.affixConfig.Param[4],
        intervalTag = self.affixConfig.Param[4],
    }
    local s = self.daTongLing.radius / 180
    local spr = cc.Sprite:createWithSpriteFrameName("datonglingLine1.png")
    local animation = cc.AnimationCache:getInstance():getAnimation("datongling_halo")
    local animate = cc.RepeatForever:create(cc.Animate:create(animation))
    spr:runAction(animate)
    spr:setScale(s)
    spr:setPositionY(-40)
    spr:hide()
    self:addChild(spr, zIndex.bottomAni)
    self.ani_datongling_haro = spr
end

function Enemy:initCiKeLianMeng(id)
    self.isCiKeLianMeng = true
    local t = (1e4 - self.affixConfig.Param[3]) / 1e4 * 255
    self.ciKeLianMeng = {
        interval = self.affixConfig.Param[4] + self.affixConfig.Param[1],
        intervalTag = 3e3 * math.random() + 1e3,
        num = self.affixConfig.Param[2],
        opacity = t,
        durning = self.affixConfig.Param[1],
        durningTag = self.affixConfig.Param[1] * math.random()
    }
end

function Enemy:initZhanDouKuang(id)
    self.isZhanDouKuang = true
    self.zhanDouKuang = {
        speedUp = self.affixConfig.Param[1],
        speed = 0,
        durning = self.affixConfig.Param[2],
        durningTag = 0,
    }

    local spr = cc.Sprite:createWithSpriteFrameName("affix_zhandoukuang1.png")
    local animation = cc.AnimationCache:getInstance():getAnimation("affix_zdk")
    local animate = cc.RepeatForever:create(cc.Animate:create(animation))
    spr:runAction(animate)
    spr:setPositionY(-30)
    self:addChild(spr, zIndex.bottomAni)
end

function Enemy:updateZhanDouKuang(dt)
    if self.zhanDouKuang.durningTag > 0 then
        self.zhanDouKuang.durningTag = self.zhanDouKuang.durningTag - dt
        if self.zhanDouKuang.durningTag <= 0 then
            self.zhanDouKuang.speed = 0
        end
    end
end

function Enemy:initFuChouZhiShen(id)
    self.isFuChouZhiShen = true
    self.fuChouZhiShen = {
        radius = self.affixConfig.Param[1],
        num = self.affixConfig.Param[2],
        rate = self.affixConfig.Param[3],
    }
end

function Enemy:getFuchouzhishenBullet()
    local spr = cc.Sprite:createWithSpriteFrameName("bullet1.png")
    local animation = cc.AnimationCache:getInstance():getAnimation("fczs_bullet")
    local animate = cc.RepeatForever:create(cc.Animate:create(animation))
    spr:runAction(animate)
    spr:setScale(0)
    self.parent:addChild(spr, 9998)
    return spr
end

function Enemy:fuChouZhiShenTrigger()
    local spr = cc.Sprite:createWithSpriteFrameName("fuchouzhishen.png")
    spr:setPosition(self.pos)
    self.parent:addChild(spr, 9998)
    local fuChouZhiShen = self.fuChouZhiShen
    local enemies = self:getEnemies(fuChouZhiShen.radius, fuChouZhiShen.num)
    local bullets = {}
    for i = 1, #enemies do
        bullets[i] = self:getFuchouzhishenBullet()
    end
    local myPos = self.pos
    spr:setScale(0)
    spr:runAction(cc.Sequence:create(
            cc.ScaleTo:create(0.5, 1),
            cc.CallFunc:create(function ()
                spr:removeFromParent(true)
                for i, v in pairs(enemies) do
                    local enemy = v[1]
                    local bullet = bullets[i]
                    if not tolua.isnull(enemy) then
                        if enemy.state == Define.state.move then
                            local rotation = ExternalTools:getAngleByTowPoint(enemy.pos, myPos)
                            rotation = 90 - math.deg(rotation)
                            bullet:setRotation(rotation)
                            bullet:setPosition(cc.p(myPos.x, myPos.y + 25))
                            bullet:setScale(1)
                            bullet:runAction(cc.Sequence:create(
                                    cc.MoveTo:create(0.5, enemy.pos),
                                    cc.CallFunc:create(function ()
                                        bullet:removeFromParent(true)
                                        if not tolua.isnull(enemy) then
                                            local hp = fuChouZhiShen.rate / 1e4 * enemy.maxHp
                                            enemy:addHp(hp)
                                            enemy:showAddHpAni(enemy)
                                        end
                                    end)
                            ))
                        else
                            bullet:removeFromParent(true)
                        end
                    else
                        bullet:removeFromParent(true)
                    end
                end
            end)
    ))
end

function Enemy:initXianJiZhe(id)
    self.isXianJiZhe = true
    self.xianJiZhe = {
        radius = self.affixConfig.Param[1],
        num = self.affixConfig.Param[2],
        interval = 1e3,
        intervalTag = 0,
    }
    local s = self.xianJiZhe.radius / 180
    local spr = cc.Sprite:createWithSpriteFrameName("affix_xianjizhe1.png")
    local animation = cc.AnimationCache:getInstance():getAnimation("affix_xjz")
    local animate = cc.RepeatForever:create(cc.Animate:create(animation))
    spr:runAction(animate)
    spr:setPositionY(-40)
    spr:setScale(s * 0.7)
    self:addChild(spr, zIndex.bottomAni)
end

function Enemy:initWuWeiZhe(id)
    self.isWuWeiZhe = true
    local node = cc.Node:create()
    local spr = cc.Sprite:createWithSpriteFrameName("affix_wuweizhe.png")
    local sprTmp = cc.Sprite:createWithSpriteFrameName("affix_wuweizhe.png")
    node:addChild(spr, 1)
    node:addChild(sprTmp, 0)
    self:addChild(node, zIndex.topAni)
    local seq = cc.Sequence:create(
            cc.Spawn:create(
                    cc.ScaleTo:create(0.5, 1.8),
                    cc.FadeTo:create(0.5, 50)
            ),
            cc.CallFunc:create(function (node)
                node:setScale(1)
                node:setOpacity(255)
            end)
    )
    sprTmp:runAction(cc.RepeatForever:create(seq))
    self.ani_buff_wwz = node
end

function Enemy:initShuangShengZi()
    self.isShuangShengZi = true
    self.shuangShengZi = {
        num = self.affixConfig.Param[1],
        iconZoom = self.affixConfig.Param[3] / 1e4,
        hpZoom = self.affixConfig.Param[2] / 1e4
    }
end

function Enemy:initShuangShengZiByFather(father)
    self.isShuangShengZi = true
    self.shuangShengZi = {}
    self.shuangShengZi.num = father.shuangShengZi.num
    self.shuangShengZi.iconZoom = father.shuangShengZi.iconZoom
    self.shuangShengZi.hpZoom = father.shuangShengZi.hpZoom
    self.type = father.type
    self.state = Define.state.stop
    self.maxHp = father.maxHp * father.shuangShengZi.hpZoom
    self.hp = self.maxHp
    self.speed = father.speed
    self.resist = father.reBack
    self:setScaleInfo(father.scale)
    self:setOpacityInfo(255)
end

function Enemy:shuangShengZiBorn(idx, father)
    local s = father.scale * self.shuangShengZi.iconZoom
    self.state = Define.state.born
    self:setPositionInfo(cc.p(father.pos))
    self:setScaleInfo(s)
    if idx == 2 then
        local x = 50 + math.random(0, 50)
        if self.pos.x + x > display.width - 50 then
            x = -x
        end
        self:runAction(cc.Sequence:create(
                cc.MoveBy:create(1, cc.p(x, 0)),
                cc.CallFunc:create(function ()
                    self.pos.x = self.pos.x + x
                    self:setPositionInfo(self.pos)
                    self.state = Define.state.move
                end)
        ))
    else
        self:runAction(cc.Sequence:create(
                cc.DelayTime:create(1),
                cc.CallFunc:create(function ()
                    self.state = Define.state.move
                end)
        ))
    end
end

-- 母体
function Enemy:initMuTi(id)
    self.isMuTi = true
    self.muTi = {
        interval = self.affixConfig.Param[1],
        intervalTag = 2e3 * math.random(),
        attrRate = self.affixConfig.Param[2],
        num = self.affixConfig.Param[3],
    }
end

function Enemy:updateMuTi(dt)
    if self.muTi.intervalTag > 0 then
        self.muTi.intervalTag = self.muTi.intervalTag - dt
    else
        if not self._isBaby then
            self.muTi.intervalTag = self.muTi.interval
            MessageManager.Shared():postMsg(MsgKeyData.muTiZiTrigger, { enemy = self })
        end
    end
end

function Enemy:muTiBorn(father)
    self:clearEnemy()
    self._isBaby = true
    local x = father.pos.x + (640 * math.random() - 320)
    local y = father.pos.y + (90 * math.random() - 20)
    if x > display.width - 80 then
        x = display.width - 80
    elseif x < 80 then
        x = 80
    end
    self:setPositionInfo(cc.p(x, y))
    local hp = father.maxHp * father.muTi.attrRate / 1e4
    self.hp = hp
    self.maxHp = hp
    self.speed = father.speed
    self.resist = father.reBack
    self.state = Define.state.born
    local s = father.scale * 0.9
    self:setScaleInfo(0)
    self:runAction(cc.Sequence:create(
            cc.ScaleTo:create(1, s),
            cc.CallFunc:create(function ()
                self:setScaleInfo(s)
                self.state = Define.state.move
            end)
    ))
end

-- 加速怪
function Enemy:initJiaSuGuai(id)
    self.isJiaSuGuai = true
    self.jiaSuGuai = {
        num = self.affixConfig.Param[1],
        interval = self.affixConfig.Param[2],
        intervalTag = self.affixConfig.Param[2] * math.random(),
        speedProportion = self.affixConfig.Param[3],
        during = self.affixConfig.Param[4],
    }
end

function Enemy:initHouZiGuai(id)
    self.isHouZiGuai = true
    self.houZiGuai = {
        distance = self.affixConfig.Param[1]
    }
end

function Enemy:triggerHouZiGuai()
    if self.isRunHzgSeq or self.state == Define.state.frozen then
        return
    end
    self.isRunHzgSeq = true
    local t = 600 * math.random() - 300
    local x = self.pos.x + t
    if x > display.width - 50 or x < 50 then
        t = -t
    end
    self.state = Define.state.stop
    self:runAction(cc.Sequence:create(
            cc.MoveBy:create(.15, cc.p(t, 0)),
            cc.CallFunc:create(function()
                self.pos.x = self.pos.x + t
                self:setPositionInfo(self.pos)
                self.isRunHzgSeq = false
                self.state = Define.state.move
            end)
    ))
end

function Enemy:initZaiShengGuai(id)
    self.isZaiShengGuai = true
    self.zaiShengGuai = {
        proportion = self.affixConfig.Param[1] / 1e4,
        interval = self.affixConfig.Param[2],
        intervalTag = math.random() * self.affixConfig.Param[2],
    }
end

function Enemy:updateZaiShengGuai(dt)
    if self.zaiShengGuai.intervalTag > 0 then
        self.zaiShengGuai.intervalTag = self.zaiShengGuai.intervalTag - dt
    else
        self.zaiShengGuai.intervalTag = self.zaiShengGuai.interval
        self:showZaiShengGuaiBuff()
        self:addHp(self.maxHp * self.zaiShengGuai.proportion)
    end
end

function Enemy:initShaYuQi(id)
    self.isShaYuQi = true
    self.shaYuQi = {
        dis = self.affixConfig.Param[2],
        interval = math.random(2, 5) * 1e3,
        intervalTag = self.affixConfig.Param[1],
        num = self.affixConfig.Param[3],
        numTag = self.affixConfig.Param[3],
    }
end

function Enemy:updateShaYuQi(dt)
    if self.shaYuQi.interval > 0 then
        self.shaYuQi.interval = self.shaYuQi.interval - dt
    else
        self.shaYuQi.interval = self.shaYuQi.intervalTag
        self:pushEnemy()
    end
end

function Enemy:pushEnemy()
    local enemyTable = self.enemyMgr.enemyTable
    for _, enemy in pairs(enemyTable) do
        local len = cc.pGetDistance(self.pos, enemy.pos)
        if enemy.pos.y < self.pos.y then
            if len < 300 and enemy.atkType == 1 and self.shaYuQi.num > 0 then
                self.shaYuQi.num = self.shaYuQi.num - 1
                enemy:bePush(self.shaYuQi.dis)
            end
        end
    end
    self.shaYuQi.num = self.shaYuQi.numTag
end

function Enemy:bePush(dis)
    self.pushDis = dis
end

function Enemy:initTuBaShu(id)
    self.isTuBaShu = true
    self.tuBaShu = {
        daijiTime = 3000,
        daijiTimeTag = 3000,
        moveTime = math.random() * 1e4,
        moveTimeTag = self.affixConfig.Param[1],
        daijiState = false,
    }
end

function Enemy:updateTuBaShu(dt)
    if self.tuBaShu.moveTime > 0 then
        self.tuBaShu.moveTime = self.tuBaShu.moveTime - dt
    elseif not self.tuBaShu.daijiState then
        self.tuBaShu.daijiState = true
        self.enemySpine:setAnimation(0, "chuxian", false)
    elseif self.tuBaShu.daijiState then
        if self.tuBaShu.daijiTime > 0 then
            self.tuBaShu.daijiTime = self.tuBaShu.daijiTime - dt
        else
            self.tuBaShu.daijiTime = self.tuBaShu.daijiTimeTag
            self.tuBaShu.moveTime = self.tuBaShu.moveTimeTag + 1e3 * math.random()
            self.enemySpine:setAnimation(0, "xiaoshi", false)
            self.tuBaShu.daijiState = false
        end
    end
end

function Enemy:initFeiTing(id)
    self.isFeiTing = true
    self.feiTing = {
        passenger = {},
        radius = self.affixConfig.Param[1],
        num = self.affixConfig.Param[2],
    }
    self.feiTingCDTag = 1e3 * math.random() + 3e3
end

function Enemy:updateFeiTing(dt)
    for _, v in pairs(self.feiTing.passenger) do
        local enemy = v
        enemy.pos.y = enemy.pos.y + 50
        enemy:setPositionInfo(enemy.pos)
    end
    local enemyTable = self.enemyMgr.enemyTable
    local radius = self.feiTing.radius
    for _, enemy in pairs(enemyTable) do
        local len = cc.pGetDistance(self.pos, enemy.pos)
        if len < 2 * radius then
            if #self.feiTing.passenger >= self.feiTing.num then
                return
            end
            if enemy ~= self and enemy.atkType == 1 and (not self.isPassenger) and (not self.isBoss) then
                enemy.state = Define.state.stop
                enemy.isPassenger = true
                table.insert(self.feiTing.passenger, enemy)
                GameTool:wordTip(self, "zhuangzai")
                self:zhuangZaiAnimation(enemy)
            end
        end
    end
end

function Enemy:zhuangZaiAnimation(enemy)
    self:runAction(cc.Sequence:create(
            cc.ScaleTo:create(0.6, 0.6),
            cc.ScaleTo:create(0.6, 1.1)
    ))
    enemy:runAction(cc.Sequence:create(
            cc.Spawn:create(
                    cc.ScaleTo:create(1.2, 0.5),
                    cc.MoveTo:create(1.2, self.pos)
            ),
            cc.CallFunc:create(function ()
                enemy:hide()
                enemy:setPosition(enemy.pos)
                enemy:setScale(self.scale)
            end)
    ))
end

function Enemy:feiTingDieAnimation()
    self.state = Define.state.stop
    local seq = cc.Sequence:create(
            cc.RotateTo:create(0.1, 5),
            cc.RotateTo:create(0.1, -5),
            cc.RotateTo:create(0.1, 5),
            cc.RotateTo:create(0.1, -5),
            cc.RotateTo:create(0.1, 0)
    )
    self:runAction(cc.Sequence:create(
            seq,
            seq:clone(),
            cc.CallFunc:create(function ()
                self:feiTingDie()
            end)
    ))
end

function Enemy:feiTingDie()
    for _, enemy in pairs(self.feiTing.passenger) do
        if not tolua.isnull(enemy) then
            enemy:show()
            enemy.isPassenger = false
            enemy.pos.y = self.pos.y
            enemy:setPositionInfo(enemy.pos)
            enemy.state = Define.state.move
        end
    end
    self.feiTing.passenger = {}
    self.enemyMgr:removeEnemy(self, true)
end

function Enemy:updateDaTongLing(dt)
    if self.daTongLing.intervalTag <= 0 then
        self.daTongLing.intervalTag = self.daTongLing.interval
        self:daTongLingTrigger()
    else
        self.daTongLing.intervalTag = self.daTongLing.intervalTag - dt
    end
end

function Enemy:daTongLingTrigger()
    local radius = self.daTongLing.radius
    local num = self.daTongLing.num
    local enemies = self:getEnemies(radius, num)
    for i, v in pairs(enemies) do
        local enemy = v[1]
        local addHp = self.daTongLing.rate / 1e4 * enemy.maxHp
        enemy:addHp(addHp)
        enemy:showAddHpAni(enemy)
        --self:showDatonglingLine(enemy)
        --self.datonglingLineArr[i].target = enemy
    end
end

function Enemy:updateDatonglingLine()
    if self.datonglingLineArr then
        for _, v in pairs(self.datonglingLineArr) do
            local line = v.line
            local target = v.target
            local rotation = ExternalTools:getAngleByTowPoint(target.pos, self.pos)
            rotation = 90 - math.deg(rotation)
            line:setRotation(rotation)
        end
    end
end

function Enemy:updateCiKeLianMeng(dt)
    if self.ciKeLianMeng.num > 0 then
        if self.ciKeLianMeng.intervalTag <= 0 then
            self.ciKeLianMeng.intervalTag = self.ciKeLianMeng.interval
            self:setOpacityInfo(255)
            self.ciKeLianMeng.num = self.ciKeLianMeng.num - 1
            self.ciKeLianMeng.durningTag = self.ciKeLianMeng.durning
        else
            self.ciKeLianMeng.intervalTag = self.ciKeLianMeng.intervalTag - dt
            if self.opacity == 255 then
                if self.ciKeLianMeng.durningTag > 0 then
                    self.ciKeLianMeng.durningTag = self.ciKeLianMeng.durningTag - dt
                else
                    self:setOpacityInfo(self.ciKeLianMeng.opacity)
                end
            end
        end
    end
end

function Enemy:updateXianJiZhe(dt)
    if self.xianJiZhe.intervalTag > 0 then
        self.xianJiZhe.intervalTag = self.xianJiZhe.intervalTag - dt
    else
        self.xianJiZhe.intervalTag = self.xianJiZhe.interval
        self:xianJiZheTrigger()
    end
end

function Enemy:xianJiZheTrigger()
    local radius = self.xianJiZhe.radius
    local num = self.xianJiZhe.num
    local enemies = self:getEnemies(radius, num)
    for _, v in pairs(enemies) do
        local enemy = v[1]
        if not enemy.isXianJiZhe then
            enemy:addXianJiZheBuff()
        end
    end
end

function Enemy:addXianJiZheBuff()
    if not self.ani_buff_xjz then
        local spr = cc.Sprite:createWithSpriteFrameName("buff1.png")
        local animation = cc.AnimationCache:getInstance():getAnimation("buff_xjz")
        local animate = cc.RepeatForever:create(cc.Animate:create(animation))
        spr:runAction(animate)
        self:addChild(spr, zIndex.topAni)
        self.ani_buff_xjz = spr
    end
    self.haveXianJiZhe = true
    self.haveXianJiZheDurningTag = 1100
end

function Enemy:removeXianJiZheBuff()
    if self.ani_buff_xjz then
        self.ani_buff_xjz:removeFromParent(true)
        self.ani_buff_xjz = nil
    end
end

function Enemy:updateJiaSuGuai(dt)
    if self.jiaSuGuai.intervalTag > 0 then
        self.jiaSuGuai.intervalTag = self.jiaSuGuai.intervalTag - dt
    else
        self.jiaSuGuai.intervalTag = self.jiaSuGuai.interval
        self:triggerJiaSuGuai()
    end
end

function Enemy:triggerJiaSuGuai()
    local enemies = self:getEnemies(2e3, self.jiaSuGuai.num)
    local function jiasu(v)
        local up = self.jiaSuGuai.speedProportion
        local time = self.jiaSuGuai.during
        v:getJiaSuGuaiBuff(up, time)
    end
    for _, v in pairs(enemies) do
        jiasu(v[1])
    end
end

function Enemy:addJiaSuGuaiBuff()
    local spr = cc.Sprite:createWithSpriteFrameName("affix_jiasuguaibuff1.png")
    local animation = cc.AnimationCache:getInstance():getAnimation("affix_jiasu")
    local animate = cc.RepeatForever:create(cc.Animate:create(animation))
    spr:runAction(animate)
    spr:setPositionY(-30)
    self.ani_buff_jiasuguai = spr
    self:addChild(spr, zIndex.bottomAni)
    GameTool:wordTip(self, "jiasu")
end

function Enemy:getJiaSuGuaiBuff(up, time)
    self:addJiaSuGuaiBuff()
    self.isHaveJiaSuGuaiBuff = true
    self.jiaSuGuaiBuffspeedProportion = up
    self.jiaSuGuaiBuffduring = time
end

function Enemy:updateJiaSuGuaiBuff(dt)
    if self.jiaSuGuaiBuffduring > 0 then
        self.jiaSuGuaiBuffduring = self.jiaSuGuaiBuffduring - dt
        if self.jiaSuGuaiBuffduring <= 0 then
            self.jiaSuGuaiBuffspeedProportion = 0
            self:removeEffect("jiasuguai_buff")
        end
    end
end

function Enemy:updateSceneDebuff(dt)
    if self._debuffSwamp > 0 then
        -- 沼泽中毒
        if self.debuffIntervalTag > 0 then
            self.debuffIntervalTag = self.debuffIntervalTag - dt
        else
            self.debuffIntervalTag = self.debuffSwampInterval
            local sub = 0.1 * self.maxHp
            local color = cc.c3b(100, 150, 60)
            local from = dpsFrom.sceneBuff
            self:deductHp(sub, nil, color, from)
        end
    end
end

function Enemy:reduceDotDelayTime(dt)
    if self.burn and self.burn[1] and self.burn[1] > 0 then
        self.burn[1] = self.burn[1] - dt
    end
    if self.bleed and self.bleed[1] and self.bleed[1] > 0 then
        self.bleed[1] = self.bleed[1] - dt
    end
    if self.poison and self.poison[1] and self.poison[1] > 0 then
        self.poison[1] = self.poison[1] - dt
    end
    if self._vertigoTime > 0 then
        self._vertigoTime = self._vertigoTime - dt
    end
end

-- 初始化碰撞数据
function Enemy:initBoundingData(bounding_radius)
    self.bounding_radius = bounding_radius
end

function Enemy:beHit(data)
    if self.state ~= Define.state.born and self.state ~= Define.state.die then
        local damage = data.damage
        self.damage = damage
        self.damageOff = data.damageOff
        self.hitHero = data.heroType
        if self.isCiKeLianMeng and self.opacity <= self.ciKeLianMeng.opacity then
            GameTool:wordTip(self, "shanbi")
        else
            if self.isZhanDouKuang then
                if self.zhanDouKuang.durningTag <= 0 then
                    GameTool:wordTip(self, "baozou")
                    self.zhanDouKuang.speed = self.zhanDouKuang.speedUp
                    self.zhanDouKuang.durningTag = self.zhanDouKuang.durning
                end
            end
            if self.haveXianJiZhe then
                damage = 0
                GameTool:wordTip(self, "mianyi")
            end
            if self.isHouZiGuai then
                self:triggerHouZiGuai()
            end
            if not data.isChainsDamage and self._chains then
                self.chainsSelf = false
                self:chainsHit(damage * self.chainsRate)
            end
            local from = dpsFrom.atk  -- 伤害来源, 普攻
            if GameTool:isRoleSkill(data.bulletType) then
                from = dpsFrom.skill  -- 伤害来源, 技能
            end
            self:deductHp(damage, data, nil, from)
            self.boom = data.boom
            self.iceBoom = data.iceBoom
            if self.hp <= 0 then
                self.state = Define.state.die
                self.killHero = data.heroType
            else
                if data.repel then
                    self:beRepel()
                end
                if data.beHead then
                    if not self.isBoss and data.beHead > 0 and self.hp / self.maxHp <= data.beheadHp then
                        local flag = math.random(1, 10000)
                        if data.beHead * 10000 > flag then
                            GameTool:wordTip(self, "zhansha")
                            self.state = Define.state.die
                            return
                        end
                    end
                end
                if data.vertigoTime > 0 then
                    self._vertigoTime = data.vertigoTime
                end
                self:beHitEffect()
            end
            self:setDot(data)
            if self.isTuBaShu and self.tuBaShu.daijiState then
                self.tuBaShu.moveTime = self.tuBaShu.moveTimeTag + 1e3 * math.random()
                self.enemySpine:setAnimation(0, "xiaoshi", false)
                self.tuBaShu.daijiState = false
            end
        end
    end
end

function Enemy:beRepel()
    if math.random() > self.resist then
        self.repelTime = 500
        self.state = Define.state.repel
    end
end

function Enemy:showAddHpAni(enemy)
    local spr = cc.Sprite:createWithSpriteFrameName("addHp0.png")
    local animation = cc.AnimationCache:getInstance():getAnimation("datongling_addHp")
    local animate = cc.Animate:create(animation)
    spr:runAction(animate)
    enemy:addChild(spr, zIndex.topAni)
    performWithDelay(spr, function (node)
        node:removeFromParent(true)
    end, 1)
end

function Enemy:showZaiShengGuaiBuff()
    local spr = cc.Sprite:createWithSpriteFrameName("affix_huixueguai1.png")
    local animation = cc.AnimationCache:getInstance():getAnimation("affix_huixue")
    local animate = cc.Animate:create(animation)
    spr:runAction(animate)
    self:addChild(spr, zIndex.topAni)
    performWithDelay(spr, function (node)
        node:removeFromParent(true)
    end, 0.5)
end

function Enemy:showDatonglingLine(enemy)
    local len = #self.datonglingLineArr
    if len < self.daTongLing.num then
        local spr = cc.Sprite:createWithSpriteFrameName("line1.png")
        local animation = cc.AnimationCache:getInstance():getAnimation("datongling_line")
        local animate = cc.RepeatForever:create(cc.Animate:create(animation))
        spr:runAction(animate)
        self:addChild(spr, zIndex.topAni)
        local data = {
            line = spr,
            target = enemy
        }
        table.insert(self.datonglingLineArr, data)
    end
end

function Enemy:addHp(num)
    local add = num
    --if self.maxHp ~= self.hp and self.state ~= Define.state.die then
        local sub = self.maxHp - self.hp
        if num > sub then
            add = sub
        end
        self.hp = self.hp + add
        local x, y = self.pos.x, self.pos.y - 10
        local color = cc.c3b(0, 255, 0)
        GameTool:hitTip(x, y, num, color, "huixue")
        self.hpLoadingBar:setPercent(self.hp / self.maxHp * 100)
    --end
end

-- 是否满足概率
-- value : 基础概率（如0.2表示20%的概率）
function Enemy:isSuccessful(value)
    local flag = math.random(1, 10000)
    if value * 10000 > flag then
        return true
    end
    return false
end

-- 是否计算暴击、会心
function Enemy:isCallCrit(b)
    if GameTool:isRoleAtk(b) or GameTool:isRoleBullet_3(b) then
        -- 普攻，狙击兵的技能
        return true
    end
    return false
end

function Enemy:deductHp(num, data, color, from)
    if self.isPassenger then
        return
    end
    local damage = math.floor(num)
    if damage ~= 0 then
        if self._curseTime > 0 then
            damage = math.floor(damage * self._curseUp / 100)
        end
        local crit, crit2 = false, false
        if data then
            if self:isCallCrit(data.bulletType) then
                if data.crit2Rate > 0 and data.crit2Dps > 0 then
                    -- 会心
                    if self:isSuccessful(data.crit2Rate) then
                        crit2 = true
                        damage = damage * data.crit2Dps
                    end
                end
                if data.critRate > 0 and data.critDps > 0 and not crit2 then
                    -- 暴击
                    if self:isSuccessful(data.critRate) then
                        crit = true
                        damage = damage * data.critDps
                    end
                end
            end
        end
        --self:getDpsData(damage, from)
        self.hp = self.hp - damage
        self.hpLoadingBar.parent:show()
        local p = self.hp / self.maxHp * 100
        performWithDelay(self, function ()
            self.hpLoadingBar:setPercent(p)
        end, 0)
        if p <= 0 then
            self.state = Define.state.die
            self.hpLoadingBar.parent:hide()
        end
        local toColor, name
        if crit or crit2 then
            if crit2 then
                toColor = cc.c3b(255, 0, 255)
                name = "huixin"
            else
                toColor = cc.c3b(255, 0, 0)
                name = "baoji"
            end
        elseif data and data.baotou then
            toColor = cc.c3b(255, 106, 0)
            name = "baotou"
        else
            toColor = cc.c3b(255, 255, 255)
        end
        if color then
            toColor = color
        end
        local x = self.pos.x
        local y = self.pos.y
        if from and from == "missile" then
            damage = 9999999
        end
        GameTool:hitTip(x, y, damage, toColor, name, self)
    end
end

function Enemy:getDpsData(damage, from)
    local dataList = UserData.Shared().heroDpsList
    local totalDps = UserData.Shared().totalDps
    local heroType = self.hitHero
    if from == dpsFrom.sceneBuff then
        totalDps.sceneDpsTmp =  totalDps.sceneDpsTmp + damage
        totalDps.sceneDps =  totalDps.sceneDps
    else
        if not dataList[heroType] then
            dataList[heroType] = {}
        end
        if not dataList[heroType][from]then
            dataList[heroType][from] = { damage = 0 }
        end
        local data = dataList[heroType][from]
        data.damage = data.damage + damage
        totalDps.heroDpsTmp = totalDps.heroDpsTmp + damage
        totalDps.heroDps = totalDps.heroDpsTmp
    end
end

function Enemy:beHitEffect()
    if self.enemySpine then
        self.enemySpine:setColor(cc.RED)
        performWithDelay(self, function ()
            self.enemySpine:setColor(cc.WHITE)
        end, 0.15)
    end
end

function Enemy:isInArea(r, pos)
    local radius = self.bounding_radius + r
    local dis = cc.pGetDistance(self.pos, pos)
    return dis < radius
end

function Enemy:move(dt)
    local t = 0
    if self.isZhanDouKuang then
        t = t + (self.speed * (1 + self.zhanDouKuang.speed / 1e4))
    else
        t = t + self.speed
    end
    if self.jiaSuGuaiBuffspeedProportion then
        if self.jiaSuGuaiBuffspeedProportion > 0 then
            t = t + (self.speed * (1 + self.jiaSuGuaiBuffspeedProportion / 1e4))
        end
    end
    if self._debuffIce and self._debuffIce > 0 then
        local snowSpeedAdd = 1e4
        t = t * (1 + snowSpeedAdd)
    elseif self._debuffDesert and self._debuffDesert > 0 then
        local desert2SpeedReduce = 1e4
        t = t * (1 - desert2SpeedReduce)
    elseif self._debuffThunderDebuffTime and self._debuffThunderDebuffTime > 0 then
        t = 0
        self._debuffThunderDebuffTime = self._debuffThunderDebuffTime - dt
    end
    local speedUp = t * dt / 1e3
    self.enemySpine.timeScale = 1
    self.enemySpine:setTimeScale(self.enemySpine.timeScale)
    if self.frozen[1] > 0 and self.frozen[2] > 0 then
        speedUp = self:moveDot(self.frozen, speedUp, dt)
        if not self.isIce then
            self.isIce = true
            self:setEffect("ice")
        end
    elseif self.isIce then
        self.isIce = false
        self:removeEffect("ice")
    end
    if self.paralysis[1] > 0 and self.paralysis[1] > 0 then
        speedUp = self:moveDot(self.paralysis, speedUp, dt)
    end
    if self.paralysis[1] > 0 and self.paralysis[1] > 0 or self._debuffThunderDebuffTime > 0 then
        if not self.isParalysis then
            self.isParalysis = true
            self:setEffect("paralysis")
        end
    elseif self.isParalysis then
        self.isParalysis = false
        self:removeEffect("paralysis")
    end
    if self.tuBaShu and self.tuBaShu.daijiState then
        speedUp = 0
    end
    if self.burn[1] > 0 and self.burn[1] > 0 then
        speedUp = self:moveDot(self.burn, speedUp, dt)
    end
    if self.poison[1] > 0 and self.poison[1] > 0 then
        speedUp = self:moveDot(self.poison, speedUp, dt)
    end
    if self.iceBoomDot[1] > 0 and self.iceBoomDot[1] > 0 then
        speedUp = self:moveDot(self.iceBoomDot, speedUp, dt)
    end
    if self.pushDis and self.pushDis > 0 then
        speedUp = speedUp + 5
        self.pushDis = self.pushDis - 5
    end
    if self._vertigoTime > 0 then
        self._vertigoTime = self._vertigoTime - dt
        if not self.enemySpine.timeScale == 0 then
            self.enemySpine.timeScale = 0
            self.enemySpine:setTimeScale(0)
        end
        return
    elseif self._charmTime > 0 then
        if self._charmTarget then
            local ts = self.enemySpine.timeScale / 2
            if not self.enemySpine.timeScale == ts then
                self.enemySpine.timeScale = ts
                self.enemySpine:setTimeScale(ts)
            end
            speedUp = speedUp / 2
            local n = cc.pSub(self._charmTarget.pos, self.pos)
            n = cc.pNormalize(n)
            self.pos.x = self.pos.x + (speedUp * n.x)
            self.pos.y = self.pos.y + (speedUp * n.y)
            self:setPositionInfo(self.pos)
        end
    else
        self.pos.y = self.pos.y - speedUp
        self:setPositionInfo(self.pos)
    end
    if self.pos.y - (self.bounding_radius / 2) <= 480 then
        self.state = Define.state.die
        MessageManager.Shared():postMsg(MsgKeyData.onEnemyToWall, self)
    end
end

function Enemy:moveDot(e, t)
    local o = 1
    if self.speedSlow > 0 then
        o = 1e-4 * (1e4 - e[1])
        self.speedSlow = self.speedSlow - 1
    end
    self.enemySpine.timeScale = self.enemySpine.timeScale * o
    self.enemySpine:setTimeScale(self.enemySpine.timeScale)
    return t * o
end

function Enemy:showFire()
    local spr = cc.Sprite:createWithSpriteFrameName("fire1.png")
    local animation = cc.AnimationCache:getInstance():getAnimation("buff_fire")
    local animate = cc.RepeatForever:create(cc.Animate:create(animation))
    spr:runAction(animate)
    spr:setPositionY(-40)
    self:addChild(spr, zIndex.topAni)
    self.fireEffect = spr
end

function Enemy:showPoison()
    local spr = cc.Sprite:createWithSpriteFrameName("poison1.png")
    local animation = cc.AnimationCache:getInstance():getAnimation("buff_poison")
    local animate = cc.RepeatForever:create(cc.Animate:create(animation))
    spr:runAction(animate)
    spr:setPositionY(-40)
    self:addChild(spr, zIndex.topAni)
    self.poisonEffect = spr
end

function Enemy:showFrozen()
    --local spr = cc.Sprite:createWithSpriteFrameName("poison1.png")
    --local animation = cc.AnimationCache:getInstance():getAnimation("buff_poison")
    --local animate = cc.RepeatForever:create(cc.Animate:create(animation))
    --spr:runAction(animate)
    --spr:setPositionY(-40)
    --self:addChild(spr, zIndex.topAni)
    --self.poisonEffect = spr
end

function Enemy:setEffect(name)
    if name == "fire" then
        self:showFire()
    elseif name == "poison" then
        self:showPoison()
    end
end

function Enemy:removeEffect(name)
    if name == "fire" then
        if self.fireEffect then
            self.fireEffect:removeFromParent(true)
        end
    elseif name == "poison" then
        if self.poisonEffect then
            self.poisonEffect:removeFromParent(true)
        end
    end
end

function Enemy:setDot(data)
    if self.haveXianJiZhe then
        return
    end
    local t
    if data.burn then
        if not self.isFire then
            t = data.burn
            if 1e4 * math.random() < t[4] then
                self.burn = { t[1], t[5], t[2], t[3], t[3] }
            else
                self.burn = { t[1], 0, t[2], t[3], t[3] }
            end
        end
    end
    if data.poison then
        if not self.isPoison then
            t = data.poison
            if 1e4 * math.random() < t[4] then
                self.poison = { t[1], t[5], t[2], t[3], t[3] }
            else
                self.poison = { t[1], 0, t[2], t[3], t[3] }
            end
        end
    end
    if data.bleed then
        t = data.bleed
        if 1e4 * math.random() < t[4] then
            self.bleed = { t[1], t[5], t[2], t[3], t[3] }
        else
            self.bleed = { t[1], 0, t[2], t[3], t[3] }
        end
    end
    if data.vertigoTime and data.vertigoTime > 0 and self._vertigoTime <= data.vertigoTime then
        self._vertigoTime = data.vertigoTime * 1e3
        GameTool:wordTip(self, "xuanyun")
    end
end

function Enemy:hitDot(name, para, dt, color)
    if para[5] <= para[4] then
        para[4] = 0
        local damage = math.floor(para[3] * self.damageOff)
        local from = dpsFrom.buff
        self:deductHp(damage, nil, color, from)
    else
        para[4] = para[4] + dt
    end
end

function Enemy:updateState(dt)
    if self.state == Define.state.move then
        self:move(dt)
    elseif self.state == Define.state.die then
        self:stopAllActions()
        if self.isFuChouZhiShen then
            self:fuChouZhiShenTrigger()
        end
        self:dieBoom()
        if self.isFeiTing then
            self:feiTingDieAnimation()
        end
        if self.fireSpriteValue then
            self:triggerFireSpriteUlt()
        end
        if self.isDaTongLing then
            self:clearDaTongLing()
        end
        if self.isShuangShengZi and self.shuangShengZi.num > 0 then
            MessageManager.Shared():postMsg(MsgKeyData.shuangShengZiTrigger, { enemy = self })
        end
    elseif self.state == Define.state.repel then
        self.pos.y = self.pos.y + dt * self.repelValue / 60
        self.repelTime = self.repelTime - dt
        if self.repelTime <= 0 then
            self.state = Define.state.move
        end
    elseif self.state == Define.state.stop and self.isFeiTing then
        return
    elseif self.state == Define.state.frozen then
        return
    end
    if self.state ~= Define.state.die and not self.isPassenger then
        --[[if self.frozen[1] > 0 and self.frozen[3] > 0 then
            local c = cc.c3b(0, 0, 255)
            self:hitDot("frozen", self.frozen, dt, c)
        end
        if self.paralysis[1] > 0 and self.paralysis[3] > 0 then
            local c = cc.c3b(255, 255, 0)
            self:hitDot("paralysis", self.paralysis, dt, c)
        end]]
        if self.bleed[1] > 0 and self.bleed[3] > 0 then
            local c = cc.c3b(255, 0, 0)
            self:hitDot("bleed", self.bleed, dt, c)
        end
        if self.burn[1] > 0 and self.burn[3] > 0 then
            local c = cc.c3b(255, 100, 0)
            self:hitDot("burn", self.burn, dt, c)
            if not self.isFire then
                self.isFire = true
                self:setEffect("fire")
            end
        elseif self.isFire then
            self.isFire = false
            self:removeEffect("fire")
        end
        if self.poison[1] > 0 and self.poison[3] > 0 then
            local c = cc.c3b(127, 0, 255)
            self:hitDot("poison", self.poison, dt, c)
            if not self.isPoison then
                self.isPoison = true
                self:setEffect("poison")
            end
        elseif self.isPoison then
            self.isPoison = false
            self:removeEffect("poison")
        end
        if self.isDaTongLing then
            self:updateDaTongLing(dt)
        end
        if self.isCiKeLianMeng then
            self:updateCiKeLianMeng(dt)
        end
        if self.isZhanDouKuang then
            self:updateZhanDouKuang(dt)
        end
        if self.haveXianJiZheDurningTag and self.haveXianJiZheDurningTag > 0 then
            self.haveXianJiZheDurningTag = self.haveXianJiZheDurningTag - dt
            if self.haveXianJiZheDurningTag <= 0 then
                self.haveXianJiZhe = false
                self:removeXianJiZheBuff()
            end
        end
        if self.isXianJiZhe then
            self:updateXianJiZhe(dt)
        end
        if self.isMuTi then
            self:updateMuTi(dt)
        end
        if self.isJiaSuGuai then
            self:updateJiaSuGuai(dt)
        end
        if self.isHaveJiaSuGuaiBuff then
            self:updateJiaSuGuaiBuff(dt)
        end
        if self.isZaiShengGuai then
            self:updateZaiShengGuai(dt)
        end
        if self.isFeiTing then
            if self.feiTingCDTag > 0 then
                self.feiTingCDTag = self.feiTingCDTag - dt
                if self.feiTingCDTag <= 0 then
                    self:updateFeiTing(dt)
                end
            end
        end
        if self.isTuBaShu then
            self:updateTuBaShu(dt)
        end
        if self.isShaYuQi then
            self:updateShaYuQi(dt)
        end
        self:updateSceneDebuff(dt)
    end
    self:reduceDotDelayTime(dt)
    --self:updateDatonglingLine(dt)
end

function Enemy:dieBoom()
    if self.boom and self.boom[1] > 0 then
        local enemies = self:getEnemies(self.boom[1], self.boom[2])
        for _, enemy in pairs(enemies) do
            enemy:hitBoom()
        end
    end
end

function Enemy:triggerFireSpriteUlt()

end

function Enemy:getEnemies(radius, num)
    local enemies = {}
    local enemyTable = self.enemyMgr.enemyTable
    for _, enemy in pairs(enemyTable) do
        local len = cc.pGetDistance(self.pos, enemy.pos)
        if len < radius - 20 then
            if enemy ~= self then
                table.insert(enemies, { enemy, len })
            end
        end
    end
    if #enemies > num then
        enemies = ExternalTools:getRandomFromTable(enemies, num)
    end
    return enemies
end

function Enemy:clearCharmBuf()

end

function Enemy:clearCurseBuf()

end

function Enemy:clearDaTongLing()
    self.ani_datongling_haro:removeFromParent(true)
end

function Enemy:clearEnemy()
    self.isPassenger = false
    self:clearCharmBuf()
    self:clearCurseBuf()
    if self.fireSpriteValue then
        self.fireSpriteValue = nil
    end
    self.wordTipList = {}
    self._curseTime = 0
    self._charmTime = 0
    self._charmTarget = nil
    self._debuffSwamp = 0
    self._debuffIce = 0
    self._debuffDesert = 0
    self._debuffThunderDebuffTime = 0
    self._vertigoTime = 0
    self.pushDis = 0
    self.currentState = nil
    self.frozen = { 0, 0, 0, 0, 0 }
    self.paralysis = { 0, 0, 0, 0, 0 }
    self.burn = { 0, 0, 0, 0, 0 }
    self.poison = { 0, 0, 0, 0, 0 }
    self.bleed = { 0, 0, 0, 0, 0 }
    self._drop = nil
    self._isBaby = false
    self.haveXianJiZhe = false
end

function Enemy:clearEnemyNode()
    self.enemySpine:removeFromParent(true)
    self.hpLoadingBar:removeFromParent(true)
end

function Enemy:die()
    local data = clone(self.enemyInfo)
    data.pos = cc.p(self.pos)
    data.heroType = self.killHero
    data.killFlag = self.killFlag
    data.dropMoney = self.dropMoney
    self:runAction(cc.Sequence:create(
            cc.Spawn:create(cc.ScaleTo:create(0.4, 0.5), cc.FadeOut:create(0.4)),
            cc.CallFunc:create(function ()
                --self.enemySpine:pause()
                --self:stopAllActions()
                --self:clearEnemy()
                --self:hide()
                self:removeFromParent(true)
            end)
    ))
    MessageManager.Shared():postMsg(MsgKeyData.onKillEnemy, data)
    AudioManager:playEnemyDieEffect(self.type)
end

-- 进入沼泽
function Enemy:inSwamp()
    if 1 == self.atkType then
        GameTool:wordTip(self, "zhongdu")
        self.debuffSwampInterval = 1e3
        self.debuffIntervalTag = 500
        self._debuffSwamp = self._debuffSwamp + 1
    end
end

-- 走出沼泽
function Enemy:outSwamp()
    if 1 == self.atkType then
        self._debuffSwamp = self._debuffSwamp - 1
    end
end

-- 是否是无敌的怪物状态
function Enemy:isSpecialState()
    local f1 = self.haveXianJiZhe
    local f2 = (self.isCiKeLianMeng and self.opacity <= self.ciKeLianMeng.opacity)
    if f1 or f2 then
        return true
    end
    return false
end

function Enemy:beFrozen()
    if self.state ~= Define.state.die then
        self.state = Define.state.frozen
        if self.enemySpine then
            self.enemySpine:setTimeScale(0)
        end
    end
end

function Enemy:removeFrozen()
    if self.state ~= Define.state.die then
        self.state = Define.state.move
        if self.enemySpine then
            self.enemySpine:setTimeScale(1)
        end
    end
end

-- 被导弹轰炸
function Enemy:beBomb()
    -- 计算伤害
    local hp = self.maxHp * Define.MISSILE_DAMAGE
    local color = cc.c3b(255, 0, 0)
    self:deductHp(hp, _, color, "missile")
    self.killHero = 1
    self.killFlag = "missile"
end

function Enemy:onExit()

end

return Enemy