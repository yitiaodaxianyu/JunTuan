---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by hkc.
--- DateTime: 2021/4/15 10:33
---

local GameTxtCfg = require("JunTuan.src.configs.GameTxtCfg")
local SegmentCfg = require("JunTuan.src.configs.SegmentCfg")
local SkillCfg = require("JunTuan.src.configs.SkillCfg")
local SceneLevelCfg = require("JunTuan.src.configs.SceneLevelCfg")
local SceneNameCfg = require("JunTuan.src.configs.SceneNameCfg")
local EnemyCfg = require("JunTuan.src.configs.EnemyCfg")
local HeroCfg = require("JunTuan.src.configs.HeroCfg")
local IllustratedCfg = require("JunTuan.src.configs.IllustratedCfg")
local MilePostCfg = require("JunTuan.src.configs.MilePostCfg")
local GuideTipCfg = require("JunTuan.src.configs.GuideTipCfg")
local GameTool = {}

function GameTool:setGameView(gameView)
    self.gameView = gameView
end

function GameTool:getTestEquipData()
    local data = {
        roleId = 1,
        userEquipId = 1,
        equipId = 1108,
        equipType = 1,
        equipRank = 1,
        mainType = 1,
        mainValue = 1,
        subType = 9,
        subValue = 1,
        exType1 = 5,
        exValue1 = 1,
        exType2 = 6,
        exValue2 = 1,
        exType3 = 1,
        exValue3 = 1,
        isUsed = false,
    }
    return data
end

-- 获取测试的角色数值
function GameTool:getTestRoleValue(roleID, roleLevel, roleRank)
    local valueInfo = {}
    valueInfo.roleId = roleID
    valueInfo.attack = math.random(500, 1000)
    valueInfo.interval = math.random(0.5, 2)
    valueInfo.critRate = math.random(0, 100)
    valueInfo.critMultiples = math.random(200, 300)
    valueInfo.attackPer = math.random(0, 100)
    valueInfo.attackSpeedPer = math.random(0, 100)
    valueInfo.personal1 = math.random(0, 100)
    valueInfo.personal2 = math.random(0, 100)
    valueInfo.skillParam1 = math.random(5, 20)
    valueInfo.skillParam2 = math.random(5, 20)
    return valueInfo
end

-- 设置英雄头像
function GameTool:setRoleHeadImg(heroType, img)
    local idxT = { "2", "", "5", "6", "3", "4" }
    local name = string.format("img_gunner%s_hero_jtdzz.png", idxT[heroType])
    img:ignoreContentAdaptWithSize(true)
    img:loadTexture(name, 1)
end

-- 设置用户头像
function GameTool:setUserIconImg(iconIdx, img)
    if iconIdx < 1 or iconIdx > 6 then
        iconIdx = 1
    end
    local name = string.format("img_avatar%d_change_head_jtdzz.png", iconIdx)
    img:ignoreContentAdaptWithSize(true)
    img:loadTexture(name, 1)
end

-- 设置三选二技能图标
function GameTool:setThreeTwoImg(skillID, img, isPanel)
    local id = skillID
    if id >= 10 then
        id = id + 4
    end
    local name = string.format("img_role_skill%d_game_jtdzz.png", skillID)
    img:ignoreContentAdaptWithSize(true)
    if isPanel then
        img:setBackGroundImage(name, ccui.TextureResType.plistType)
    else
        img:loadTexture(name, 1)
    end
end

-- 设置装备icon
function GameTool:setEquipImg(heroType, equipType, equipLevel, item)
    local equipName = string.format("equip%d_%d_hero_jtdzz.png", heroType, equipType)
    local bgName = string.format("equip_bg_%d_hero_intro_jtdzz.png", equipLevel)
    local img_equip = item:getChildByName("img_equip")
    img_equip:ignoreContentAdaptWithSize(true)
    img_equip:loadTexture(equipName, 1)
    local img_bg = item:getChildByName("img_bg")
    img_bg:ignoreContentAdaptWithSize(true)
    img_bg:loadTexture(bgName, 1)
    local levelStr = self:getEquipLevelStr(equipLevel)
    local txt_num = item:getChildByName("Text_num")
    txt_num:setString(levelStr)

    local icon_mark = item:getChildByName("icon_mark")
    if icon_mark then
        local name = string.format("icon_mark%d_hero_jtdzz.png", equipType)
        icon_mark:ignoreContentAdaptWithSize(true)
        icon_mark:loadTexture(name, 1)
    end
end

function GameTool:setEquipImgById(equipID, item)
    local roleId = self:getRoleIDByEquipID(equipID)
    local equipType = self:getEquipType(equipID)
    local equipLevel = self:getEquipLevel(equipID)
    self:setEquipImg(roleId, equipType, equipLevel, item)
end

--设置按钮背景图
function GameTool:setToggleEnable(btn,enbale)
    local spriteName = enbale and "btn_toggle_2_hero_jtdzz.png" or "btn_toggle_1_hero_jtdzz.png";
    btn:loadTextureNormal(spriteName,ccui.TextureResType.plistType);
end

-- 设置技能icon
function GameTool:setSkillImg(heroType, img)
    local name = string.format("img_role%d_hero_jtdzz.png", heroType)
    img:ignoreContentAdaptWithSize(true)
    img:loadTexture(name, 1)
end

-- 设置性别icon
function GameTool:setSexImg(sex, img)
    local name = nil
    img:ignoreContentAdaptWithSize(true)
    if sex == 1 then
        -- 男
        name = "icon_sex_boy_hero_jtdzz.png"
    elseif sex == 0 then
        -- 女
        name = "icon_sex_girl_hero_jtdzz.png"
    end
    if name then
        img:show()
        img:loadTexture(name, 1)
    end
end

-- 设置攻击类型icon
function GameTool:setAtkTypeImg(atkIdx, img)
    local name = ""
    if atkIdx == 1 then
        -- 陆
        name = "mark_ground_hero_jtdzz.png"
    elseif atkIdx == 2 then
        -- 地
        name = "mark_underground_hero_jtdzz.png"
    elseif atkIdx == 3 then
        -- 空
        name = "mark_sky_hero_jtdzz.png"
    end
    img:show()
    img:ignoreContentAdaptWithSize(true)
    img:loadTexture(name, 1)
end

-- 设置英雄五维属性图片
function GameTool:setRoleFiveImg(roleID, img)
    local idxT = { "5", "1", "6", "3", "2", "4" }
    local name = string.format("img_detail%d_hero_combat_hero_jtdzz.png", idxT[roleID])
    img:ignoreContentAdaptWithSize(true)
    img:loadTexture(name, 1)
end

-- 保留两位小数
function GameTool:setTwoFloatNum(num)
    local newNum = math.floor(num * 100) / 100
    return newNum
end

function GameTool:setAutoDotNum(num)
    if math.floor(num) == num then
        return num
    end
    return self:setTwoFloatNum(num)
end

-- 设置技能描述
function GameTool:setTxtSkillTip(roleID, txt1, txt2, v1, v2)
    if not v1 or not v2 then
        return
    end
    v1 = v1 * 100
    local skillCfg = GameTxtCfg.specialSkill[roleID]
    local Name = skillCfg.Name
    local Des = skillCfg.Des
    local Des2 = skillCfg.Des2
    local Des3 = skillCfg.Des3
    local Des4 = skillCfg.Des4
    local str = self:getDesString(roleID)
    txt2:setScale(1)
    txt1:setString(string.format("%s:%s", Name, Des4))
    txt2:setString(string.format("%s%s%%    %s%s%s", Des2, v1, Des3, v2, str))
    ExternalTools:txtAutoWidth(txt2, 381)
end

-- 设置特殊属性文本
function GameTool:setSpecialValue(roleID, value1, value2, txt1, txt2, txt3, txt4)
    local special1, special2 = self:getRoleSpecialValueName(roleID)
    txt1:setString(special1 .. "：")
    txt2:setString(special2 .. "：")
    if roleID == 2 then
        txt3:setString(value1 * 10 .. "秒")
        txt4:setString(value2 .. "码")
    elseif roleID == 4 then
        txt3:setString(value1 .. "码")
        txt4:setString(value2 * 100 .. "%")
    elseif roleID == 6 then
        txt3:setString(value1 .. "个")
        txt4:setString(value2 * 100 .. "%")
    else
        txt3:setString(value1 * 100 .. "%")
        txt4:setString(value2 * 100 .. "%")
    end
end

-- 设置英雄普攻介绍
function GameTool:setAtkTxtInfo(roleID, txt)
    local roleInfo = GameTxtCfg.roleName[roleID]
    txt:setString(roleInfo.attack)
end

-- 设置英雄技能介绍
function GameTool:setSkillTxtInfo(roleID, txt)
    local roleInfo = GameTxtCfg.roleName[roleID]
    txt:setString(roleInfo.superSkill)
end

-- 设置英雄背景介绍
function GameTool:setRoleTxtInfo(roleID, txt)
    local roleInfo = GameTxtCfg.roleName[roleID]
    txt:setString(roleInfo.introduce)
end

-- 获取大招描述词
function GameTool:getDesString(heroType)
    local str = { "支", "码", "次", "秒", "个", "秒" }
    return str[heroType]
end

-- 获取军衔描述词
function GameTool:getRankString(rank)
    return GameTxtCfg.segment[rank]
end

-- 获取装备颜色描述词
function GameTool:getEquipColorStr(rank)
    if rank == 1 then
        return "白色"
    elseif rank <= 3 then
        return "绿色"
    elseif rank <= 6 then
        return "蓝色"
    elseif rank <= 9 then
        return "紫色"
    else
        return "橙色"
    end
end

-- 获取装备等级文本
function GameTool:getEquipLevelStr(rank)
    if rank > 0 and rank <= 10 then
        if rank == 1 then
            return "+1"
        elseif rank <= 3 then
            return "+" .. rank - 1
        elseif rank <= 6 then
            return "+" .. rank - 3
        elseif rank <= 9 then
            return "+" .. rank - 6
        else
            return "+1"
        end
    end
    return "+1"
end

-- 获取技能名称
function GameTool:getSkillName(roleID)
    local skillCfg = GameTxtCfg.specialSkill[roleID]
    return skillCfg.Name
end

-- 获得特殊属性末尾描述词
function GameTool:getSpecialDesStr(id)
    if id == 0 or id == 1 or id == 5 or id == 18 then
        return ""
    elseif id == 10 then
        return "秒"
    elseif id == 11 or id == 14 then
        return "码"
    else
        return "%"
    end
end

-- 获得怪物描述
function GameTool:getEnemyDes(id)
    local cfg = EnemyCfg.EnemyDesCfg[id]
    return cfg
end

-- 获得怪物图鉴信息
function GameTool:getEnemyIllustrated(id)
    for _,v in pairs(IllustratedCfg.MonsterCfg) do
        if v.MonsterIcon == id then
            return v;
        end
    end
    return nil;
end

-- 获取军衔配置数据
function GameTool:getRankData(roleID, rank)
    local data
    local skillData
    for _, v in pairs(SegmentCfg) do
        if v.Role == roleID and v.Rank == rank then
            data = clone(v)
            break
        end
    end
    for _, v in pairs(SkillCfg.Skill_Special) do
        if v.Role == roleID and v.Lv == rank then
            skillData = clone(v)
            break
        end
    end
    local roleInfo = GameTxtCfg.roleName[roleID]
    local valueStr1 = roleInfo.person[1]
    local valueStr2 = roleInfo.person[2]
    local valueStr3 = GameTxtCfg.attributeType[data.ValueType]
    data.value1 = skillData.Param1 / 100
    data.value2 = skillData.Param2
    data.valueStr1 = valueStr1
    data.valueStr2 = valueStr2
    data.valueStr3 = valueStr3 .. ": "
    if roleID == 4 then
        data.value2 = data.value2 / 1000
    elseif roleID == 6 then
        data.value2 = data.value2 / 10
    end
    return data
end

-- 获取阵容战力
function GameTool:getLineUpCombat(roleInfoList)
    local combat = 0
    local allCombat = 0
    for _, v in pairs(roleInfoList) do
        if v.isDispatch == 1 then
            combat = combat + v.combat
        end
        allCombat = allCombat + v.combat
    end
    return combat, allCombat
end

-- 通过装备id获取装备等级
function GameTool:getEquipLevel(equipID)
    local level = equipID % 100
    if level >= 1 and level <= 10 then
        return level
    end
    return 1
end

-- 通过装备id获取装备类型
function GameTool:getEquipType(equipID)
    local equipType = math.floor(equipID / 100) % 10
    if equipType >= 1 and equipType <= 3 then
        return equipType
    end
    return 1
end

-- 通过装备id获取角色id
function GameTool:getRoleIDByEquipID(equipId)
    local roleID = math.floor(equipId / 1000)
    if roleID >= 1 and roleID <= 6 then
        return roleID
    end
    return 1
end

-- 通过等级和装备类型获取装备id
function GameTool:getEquipLevelID(level, idx, roleID)
    local id = 1000 * roleID
    id = id + idx * 100 + level
    return id
end

-- 获取属性名称
function GameTool:getAttribute(id)
    local attributeType = GameTxtCfg.attributeType
    return attributeType[id]
end

-- 获取角色属性描述
function GameTool:getValueDes(id)
    local attributeType = GameTxtCfg.attributeIntroduct
    return attributeType[id]
end

-- 获取角色特有属性描述
function GameTool:getSpValueDes(roleId)
    local data = {
        des_1 = "",
        des_2 = "",
    }
    local id = 8 + (roleId - 1) * 2
    data.des_1 = self:getValueDes(id)
    data.des_2 = self:getValueDes(id + 1)
    return data
end

-- 获取装备属性描述
function GameTool:getEquipDataInfo(equipData)
    if equipData == nil then return nil end
    local data = {}
    data.mainTypeStr = self:getAttribute(equipData.mainType)
    data.subTypeStr = self:getAttribute(equipData.subType)
    data.exValueStr1 = self:getAttribute(equipData.exType1)
    data.exValueStr2 = self:getAttribute(equipData.exType2)
    data.exValueStr3 = self:getAttribute(equipData.exType3)
    return data
end

-- 获取人物文本信息配置
function GameTool:getRoleTxtInfo(roleID)
    local roleInfo = GameTxtCfg.roleName[roleID]
    return roleInfo
end

-- 获取角色攻击类型
function GameTool:getRoleAtkType(roleID)
    local roleInfo = self:getRoleTxtInfo(roleID)
    return roleInfo.canTarget
end

function GameTool:isCanAtk(atkList, enemyAtkType)
    for i, v in pairs(atkList) do
        if v == 1 and i == enemyAtkType then
            return true
        end
    end
    return false
end

-- 是否是角色普攻
function GameTool:isRoleAtk(bulletType)
    if bulletType >= Define.bulletType.atk_1 and bulletType <= Define.bulletType.atk_6 then
        return true
    end
    return false
end

function GameTool:isRoleAtk_1(bulletType)
    return bulletType == Define.bulletType.atk_1
end

function GameTool:isRoleAtk_2(bulletType)
    return bulletType == Define.bulletType.atk_2
end

function GameTool:isRoleAtk_3(bulletType)
    return bulletType == Define.bulletType.atk_3
end

function GameTool:isRoleAtk_4(bulletType)
    return bulletType == Define.bulletType.atk_4
end

function GameTool:isRoleAtk_5(bulletType)
    return bulletType == Define.bulletType.atk_5
end

function GameTool:isRoleAtk_6(bulletType)
    return bulletType == Define.bulletType.atk_6
end

-- 是否是角色技能
function GameTool:isRoleSkill(bulletType)
    if bulletType <= Define.bulletType.ult_1 and bulletType >= Define.bulletType.ult_6 then
        return true
    end
    return false
end

function GameTool:isRoleSkill_1(bulletType)
    return bulletType == Define.bulletType.ult_1
end

function GameTool:isRoleSkill_2(bulletType)
    return bulletType == Define.bulletType.ult_2
end

function GameTool:isRoleSkill_3(bulletType)
    return bulletType == Define.bulletType.ult_3
end

function GameTool:isRoleSkill_4(bulletType)
    return bulletType == Define.bulletType.ult_4
end

function GameTool:isRoleSkill_5(bulletType)
    return bulletType == Define.bulletType.ult_5
end

function GameTool:isRoleSkill_6(bulletType)
    return bulletType == Define.bulletType.ult_6
end

function GameTool:isRoleBullet_1(bulletType)
    if self:isRoleAtk_1(bulletType) or self:isRoleSkill_1(bulletType) then
        return true
    end
    return false
end

function GameTool:isRoleBullet_2(bulletType)
    if self:isRoleAtk_2(bulletType) or self:isRoleSkill_2(bulletType) then
        return true
    end
    return false
end


function GameTool:isRoleBullet_3(bulletType)
    if self:isRoleAtk_3(bulletType) or self:isRoleSkill_3(bulletType) then
        return true
    end
    return false
end

function GameTool:isRoleBullet_4(bulletType)
    if self:isRoleAtk_4(bulletType) or self:isRoleSkill_4(bulletType) then
        return true
    end
    return false
end

function GameTool:isRoleBullet_5(bulletType)
    if self:isRoleAtk_5(bulletType) or self:isRoleSkill_5(bulletType) then
        return true
    end
    return false
end

function GameTool:isRoleBullet_6(bulletType)
    if self:isRoleAtk_6(bulletType) or self:isRoleSkill_6(bulletType) then
        return true
    end
    return false
end

-- 获取装备文本信息配置
function GameTool:getEquipTxtInfo(roleID, equipIdx)
    if roleID == nil or equipIdx == nil then
        return nil;
    end
    local roleStr = GameTxtCfg.roleName[roleID].job
    local equipName = GameTxtCfg.equipName
    local equipType = GameTxtCfg.equipType
    local data = clone(equipName)
    data.equipIdx = equipIdx
    data.roleStr = roleStr
    data.equipStr = equipName[roleID][equipIdx]
    data.typeStr = equipType[equipIdx]
    return data
end

-- 获取英雄特殊属性名称
function GameTool:getRoleSpecialValueName(roleID)
    local attributeType = GameTxtCfg.attributeType
    if roleID == 1 then
        return attributeType[8], attributeType[9]
    elseif roleID == 2 then
        return attributeType[10], attributeType[11]
    elseif roleID == 3 then
        return attributeType[12], attributeType[13]
    elseif roleID == 4 then
        return attributeType[14], attributeType[15]
    elseif roleID == 5 then
        return attributeType[16], attributeType[17]
    elseif roleID == 6 then
        return attributeType[18], attributeType[19]
    end
end

-- 获得章节数量
function GameTool:getSceneNum()
    return #SceneNameCfg
end

-- 获得关卡名称
function GameTool:getSceneInfo(id)
    local sceneInfo = SceneNameCfg[id]
    return sceneInfo
end

function GameTool:getShowTipNode(str)
    local spr = cc.Sprite:createWithSpriteFrameName("bg_tip_hero_intro_jtdzz.png")
    spr:setCascadeOpacityEnabled(true)
    local txt_tip = ccui.Text:create(str, "res/YOUYUAN.TTF", 35)
    txt_tip:enableOutline(cc.c4b(0, 0, 0, 255), 2)
    txt_tip:setString(str)
    local s = spr:getContentSize()
    txt_tip:setPosition(cc.p(s.width / 2, s.height / 2))
    spr:addChild(txt_tip)
    spr.txt_tip = txt_tip
    ExternalTools:txtAutoWidth(txt_tip, 520)
    return spr
end

function GameTool:showTxtTip(str)
    local runningScene = SceneManager.Shared():GetRunningScene()
    local lastSpr = runningScene:getChildByName("sprShowTip")
    if lastSpr then
        lastSpr:removeFromParent(true)
    end
    local spr = self:getShowTipNode(str)
    spr:setName("sprShowTip")
    spr:setPosition(display.center)
    spr:runAction(cc.Sequence:create(
            cc.FadeIn:create(0.15),
            cc.DelayTime:create(1.25),
            cc.Spawn:create(cc.FadeOut:create(0.25), cc.MoveBy:create(0.25, cc.p(0, 80))),
            cc.CallFunc:create(function (node)
                node:removeFromParent(true)
            end)
    ))
    runningScene:addChild(spr, 20000)
end

function GameTool:wordTip(enemy, name, callFun)
    local pos = enemy.pos
    if not enemy.wordTipList[name] then
        local spr_tip = cc.Sprite:createWithSpriteFrameName(name .. ".png")
        spr_tip:setPosition(pos)
        spr_tip:setOpacity(255)
        spr_tip:setScale(0.2)
        local seq = cc.Sequence:create(
                cc.ScaleTo:create(0.2, 1),
                cc.DelayTime:create(0.1),
                cc.Spawn:create(
                        cc.FadeTo:create(0.2, 55),
                        cc.MoveBy:create(0.2, cc.p(math.random(0, 10), 15))
                ),
                cc.CallFunc:create(function(node)
                    if callFun then
                        callFun()
                    end
                    node:removeFromParent(true)
                    if enemy.wordTipList then
                        enemy.wordTipList[name] = nil
                    end
                end)
        )
        spr_tip:runAction(seq)
        enemy.wordTipList[name] = spr_tip
        self.gameView.panel_enemy:addChild(spr_tip, 9999)
        return spr_tip
    end
end

function GameTool:wordTip2(pos, name, parent)
    local spr_tip = cc.Sprite:createWithSpriteFrameName(name .. ".png")
    spr_tip:setPosition(pos)
    spr_tip:setScale(1.2)
    parent:addChild(spr_tip)
end

function GameTool:hitTip(posX, posY, damage, color, name, parent)
    local str = math.floor(damage)
    if name == "huixue" then
        str = "/" .. str
    else
        str = "." .. str
    end
    color = color or cc.c3b(255, 255, 255)
    local x = 40 - math.random(0, 80)
    local txt_damage = ccui.TextAtlas:create(str, "res/JunTuan/font/damage.png", 22, 29, ".")
    txt_damage:setColor(color)
    local w = txt_damage:getContentSize().width
    if name == "huixin" or name == "baoji" or name == "baotou" then
        txt_damage:setOpacity(0)
        txt_damage:setScale(3)
        if "huixin" == name then
            GameTool:wordTip2(cc.p(w / 2, 50), "huixin", txt_damage)
        elseif "baoji" == name then
            GameTool:wordTip2(cc.p(w / 2, 50), "baoji", txt_damage)
        elseif "baotou" == name then
            GameTool:wordTip2(cc.p(w / 2, 50), "baotou", txt_damage)
        end
        posX = posX + x
        posY = posY + 150
        txt_damage:setPosition(cc.p(posX, posY))
        local seq = cc.Sequence:create(
                cc.Spawn:create(
                        cc.FadeTo:create(0.1, 200),
                        cc.ScaleTo:create(0.1, 0.8),
                        cc.MoveBy:create(0.1, cc.p(0, -90))
                ),
                cc.ScaleTo:create(0.05, 1),
                cc.DelayTime:create(0.2),
                cc.Spawn:create(
                        cc.MoveBy:create(0.1, cc.p(0, 10))
                ),
                cc.CallFunc:create(function (node)
                    node:removeFromParent(true)
                end)
        )
        txt_damage:runAction(seq)
    elseif "huixue" == name then
        txt_damage:setScale(1.5)
        txt_damage:setOpacity(255)
        posX = posX + x
        posY = posY
        txt_damage:setPosition(cc.p(posX, posY))
        local seq = cc.Sequence:create(
                cc.Spawn:create(
                        cc.FadeTo:create(0.6, 25),
                        cc.ScaleBy:create(0.6, 0.2)
                ),
                cc.DelayTime:create(1),
                cc.CallFunc:create(function (node)
                    node:removeFromParent(true)
                end)
        )
        txt_damage:runAction(seq)
    else
        txt_damage:setOpacity(255)
        posX = posX + x
        posY = posY + 70
        txt_damage:setPosition(cc.p(posX, posY))
        local act1 = cc.Spawn:create(cc.ScaleTo:create(.2, 1.5, 1.5), cc.MoveBy:create(.2, cc.p(.5 * x, 50)))
        local act2 = cc.Spawn:create(cc.ScaleTo:create(.05, 1.2, 1.2), cc.FadeTo:create(.05, 100))
        local delay = cc.DelayTime:create(.1)
        local call = cc.CallFunc:create(function (node)
            node:removeFromParent(true)
        end)
        local seq = cc.Sequence:create(act1, act2, delay, call)
        txt_damage:runAction(seq)
    end
    self.gameView.panel_enemy:addChild(txt_damage, 9999)
    return txt_damage
end

--通用获取奖励弹窗
function GameTool:showGetRewardWin(panel,data)
    if data == nil then return end
    local rewardView
    --local equipData = data.userEquip
    --if data.rewardType == Define.ENUM_REWARD_TYPE.EQUIPS and equipData then
    --    rewardView = require("JunTuan.src.views.EquipGetView").new(equipData)
    --else
        rewardView = require("JunTuan.src.views.GetRewardView").new(data)
    --end
    rewardView:setAnchorPoint(0.5, 0.5)
    rewardView:setPosition(display.center)
    panel:addChild(rewardView, 10000)
end

-- 创建碎片节点
function GameTool:createChipNode(roleID)
    local node = cc.Node:create()
    local imgBg = cc.Sprite:createWithSpriteFrameName("img_fragment_hero_jtdzz.png")
    local imgIcon = ccui.ImageView:create()
    imgIcon:setScale(0.3)
    imgIcon:setPositionX(-20)
    node:addChild(imgBg)
    node:addChild(imgIcon)
    GameTool:setRoleHeadImg(roleID, imgIcon)
    return node
end

function GameTool:setRewardImg(rewardType, rewardID, img, notReset)
    if rewardType == Define.ENUM_REWARD_TYPE.GEM then
        rewardID = PropID.soul
    elseif rewardType == Define.ENUM_REWARD_TYPE.COINS then
        rewardID = PropID.gold
    elseif rewardType == Define.ENUM_REWARD_TYPE.BOX then
        rewardID = 600 + rewardID
    end
    local imgName = PropImg[rewardID]
    if imgName then
        if not notReset then
            img:ignoreContentAdaptWithSize(true)
        end
        img:loadTexture(imgName, 1)
    end
end

function GameTool:setCommonSprite(imgName,node)
    if imgName then
        -- node:ignoreContentAdaptWithSize(true)
        node:loadTexture(imgName, 1)
    end
end

-- 获得三选二技能描述
function GameTool:getThreeTwoDes(skillID)
    local cfg = SkillCfg.Skill_Three_Two_Des
    return cfg[skillID]
end

-- 获得场景特效配置
function GameTool:getScenePara(id)
    local SceneCfg = SceneLevelCfg.SceneCfg
end

function GameTool:getRoleCfg(roleId)
    return HeroCfg.HeroDataBase[roleId]
end

-- 获取角色特有属性数据
function GameTool:getRolePara(roleId)
    local cfg = HeroCfg.HeroDataBase[roleId]
    return cfg.CustomPart
end

-- 获得关卡提示信息
function GameTool:getGuideTipCfg(scene, level)
    local cfg = GuideTipCfg.gameTip
    for _, v in pairs(cfg) do
        if v.Wrold == scene and v.Level == level then
            return v
        end
    end
end

--n1:精确指定小数点的原数字，n2：精确的位数,格式0.1,0.001,0.0001以此类推
function GameTool:getPreciseDecimal(n1, n2)
	return n1 - n1 % n2;
end

--判断该档奖励是否已领取
function GameTool:checkMileStoneRewardedById(id)
    --local isFound = false;
    --local list = UserData.Shared():getMileStone();
    --if list ~= nil then
    --    for _,v in ipairs(list) do
    --        --无效的奖励类型按照已领取处理
    --        local ifValid = self:checkIfMileStoneIdValidById(id);
    --        if not ifValid or v == id then
    --            isFound = true;
    --            break;
    --        end
    --    end
    --end
    --
    --return isFound;

    local list = UserData.Shared():getMileStone()
    local data = list[id]
    if data then
        return data.hasGet == 1
    end
    return false
end

-- 初始化里程碑配置表
function GameTool:initMileList()
    self.mileList = {}              -- 排序过的数据表
    self.MilepostData = {}          -- 原始数据表
    self.curMileId = nil            -- 我的战力最近的mileId
    --local data = UserData.Shared().gameCfg[Define.ENUM_CFG_KEY.MILEPOST_CFG]
    local data = MilePostCfg.RewardCfg
    for i, v in pairs(data) do
        if v.RewardType ~= Define.ENUM_REWARD_TYPE.PET and v.RewardType ~= Define.ENUM_REWARD_TYPE.PET_EGG then
            if not self.MilepostData[v.Combat] then
                self.MilepostData[v.Combat] = {}
                self.MilepostData[v.Combat].Combat = v.Combat
                table.insert(self.mileList, self.MilepostData[v.Combat])
            end
            self.MilepostData[v.Combat][v.TaskType] = v;
        end
    end
    table.sort(self.mileList, function(a, b)
        return a.Combat < b.Combat;
    end)
end

function GameTool:getTheTopItemIdx()
    local min = UserData.Shared().minMileId
    if min <= 1 then
        return 1
    end
    for i, v in pairs(self.mileList) do
        if v[1].MileId >= min then
            if v[2] then
                if v[2].MileId >= min then
                    return i
                end
            else
                return i
            end
        end
    end
    return 0
end

function GameTool:getMileList()
    return self.mileList, self.MilepostData
end

-- 获取mileId
function GameTool:getCurMileId()
    local count = 0
    local curCombat = UserData.Shared():get_dwCombat()
    for _, v in pairs(self.mileList) do
        if v.Combat <= curCombat then
            count = count + 1
        else
            self.curMileId = v[2].MileId
            break
        end
    end
    if count <= 5 then
        count = 5
    end
    return self.curMileId, count
end

function GameTool:checkIfMileStoneIdValidById(id)
    --local cfgList = MilePostCfg.RewardCfg
    --local v = cfgList[id]
    --if id == v.Id and (v.RewardType == Define.ENUM_REWARD_TYPE.PET or v.RewardType == Define.ENUM_REWARD_TYPE.PET_EGG) then
    --    return false;
    --end
    --return true;
end

--怪物图鉴是否已解锁
function GameTool:checkIfMonsterUnlock(id)
    local isFound = false;
    local unlockList = UserData.Shared():getMonsterBooks();

    for _,v in pairs(unlockList) do
        if v.monsterId == id then
            isFound = true;
            break;
        end
    end

    return isFound;
end

--时间戳格式化年月日
function GameTool:getDateStringFormat(timeStamp)
    local tb = {}
    if timeStamp and timeStamp >= 0 then
        tb.year = tonumber(os.date("%Y",timeStamp))
        tb.month =tonumber(os.date("%m",timeStamp))
        tb.day = tonumber(os.date("%d",timeStamp))
    end
    return string.format("%d-%d-%d",tb.year,tb.month,tb.day)
end

--是否今天可签到
function GameTool:ifHasSignedToday()
    local signData = UserData.Shared():getSignTask()
    for i, v in pairs(signData) do
        if v.isSign == 0 then
            return true
        end
    end
    return false
end

--奖励飞向指定位置
function GameTool:flyItemToAnyWhere(panel,item,posList)
    local startPos = posList.startPos;
    local endPos = panel:convertToNodeSpace(posList.endPos);
    
    local function itemAction(node)
        node:setScale(0);
        local scale_act_big = cc.ScaleTo:create(0.2,1.2);
        local scale_act_normal = cc.ScaleTo:create(0.2,1);
        local scale_act_small = cc.ScaleTo:create(1,0);
        local moveTo_act = cc.MoveTo:create(1,endPos);
        local cbFun = cc.CallFunc:create(function()
            node:removeFromParent(true);
        end)
        local delay_act = cc.DelayTime:create(0.8);
        local spawn_act = cc.Spawn:create(moveTo_act,scale_act_small);
        local seq_act = cc.Sequence:create(
            scale_act_big,
            scale_act_normal,
            delay_act,
            spawn_act,
            cbFun);
        node:runAction(seq_act);
    end
    
    for i = 1,5 do
        local node = item:clone();
        panel:addChild(node);
        node:setVisible(true);
        local newPos_x = startPos.x +( math.random() * 100 - 50)
        local newPos_y = startPos.y +( math.random() * 100 - 50)
        node:setPosition(cc.p(newPos_x,newPos_y));
        itemAction(node);
    end

end

-- 当天可领取奖励动画
function GameTool:curRewardAni(img,ifNeedScale)
    if img.isRewardAni then
        return
    end
    local s = img:getScale()
    local act1 = cc.RotateTo:create(0.07, 15)
    local act2 = cc.RotateTo:create(0.07, 0)
    local act3 = cc.RotateTo:create(0.07, -15)
    local act4 = cc.RotateTo:create(0.07, 0)
    local seq1 = cc.Sequence:create(act1, act2, act3, act4, act1, act2, act3, act4)
    local act5 = cc.ScaleTo:create(0.2, s * 1.2)
    local act6 = cc.ScaleTo:create(0.2, s)
    local act7 = cc.DelayTime:create(0.8);
    local act8 = cc.DelayTime:create(0.2);
    local seq2 = nil;
    if ifNeedScale then
        seq2 = cc.Sequence:create(act5, seq1, act6, act8)
    else
        seq2 = cc.Sequence:create(seq1, act7, seq1)
    end
    local action = cc.RepeatForever:create(seq2)
    action:setTag(666)
    img:stopActionByTag(666)
    --img:setRotation(0)
    --img:setScale(1)
    img:runAction(action)
    img.isRewardAni = true
end

function GameTool:stopActionByTag() end

function GameTool:pauseRewardAni(img)
    if img ~= nil then
        --img:stopAllActions();
        img:stopActionByTag(666);
        img:setRotation(0);
        img.isRewardAni = false
        -- img:setScale(1);
    end
end

-- 更新金币
function GameTool:updateGold(coin)
    local userInfo = {
        coin = coin,
    }
    UserData.Shared():updateUserCurrency(userInfo);
    MessageManager.Shared():postMsg(MsgKeyData.onCurrencyUpdate, {})
    printf("---------- 更新金币 ----------")
    printf("金币变化:%d", coin)
    printf("现有金币:%d", UserData.Shared():get_lGoldBean())
    printf("---------- 更新金币 ----------")
end

-- 更新钻石
function GameTool:updateGem(gem)
    local userInfo = {
        gemCoin = gem,
    }
    UserData.Shared():updateUserCurrency(userInfo);
    MessageManager.Shared():postMsg(MsgKeyData.onCurrencyUpdate, {})
    printf("---------- 更新钻石 ----------")
    printf("钻石变化:%d", gem)
    printf("现有钻石:%d", UserData.Shared():get_lDiamond())
    printf("---------- 更新钻石 ----------")
end

--判断图鉴红点
function GameTool:checkMonsterBookRedTis()
    local list = UserData.Shared():getMonsterBooks();

    for _,v in pairs(list) do
        if v.isFinished == 0 and v.isReward == 1 then
            return true;
        end
    end

    return false;
end

--判断里程碑红点
function GameTool:checkMileStoneRedTis()
    return UserData.Shared():getMileUnGetNum() > 0
end

--判断签到红点
function GameTool:checkSignRedTis()
    return self:ifHasSignedToday();
end

-- 数据简单加密
function GameTool:dataEncrypt(data)
    --if true then
    --    return data
    --end
    local function encrypt(num)
        local newNum = num * 1e4 * 0.5
        return newNum
    end
    if type(data) == "number" then
        return encrypt(data)
    elseif type(data) == "table" then
        local newTable = {}
        for i, v in pairs(data) do
            newTable[i] = self:dataEncrypt(v)
        end
        return newTable
    else
        return data
    end
end

-- 数据简单解密
function GameTool:dataDecrypt(data)
    --if true then
    --    return data
    --end
    local function decrypt(num)
        local newNum = num * 2 / 1e4
        return newNum
    end
    if type(data) == "number" then
        return decrypt(data)
    elseif type(data) == "table" then
        local newTable = {}
        for i, v in pairs(data) do
            newTable[i] = self:dataDecrypt(v)
        end
        return newTable
    else
        return data
    end
end

-- 获取旋转角度(角度值, 不是弧度值)
-- p1 目标位置  p2 开始位置
function GameTool:getRotateInfo(p1, p2)
    local rotation = ExternalTools:getAngleByTowPoint(p1, p2)
    local deg = math.deg(rotation)
    rotation = 90 - deg
    return rotation
end

-- 数字格式化
function GameTool:thousandFormat(num)
    local str = ""
    if num > 1000 then
        local numTmp = num / 1000
        if numTmp == math.floor(numTmp) then
            str = string.format("%dk", numTmp)
        else
            str = string.format("%.1fk", numTmp)
        end
    else
        str = tostring(num)
    end
    return str
end

-- 显示购买钻石界面
function GameTool:showBuyGemView(parent, call)
    if not parent.buyGemView then
        local para = {
            parent = parent
        }
        local view = require("JunTuan.src.views.BuyGemView").new(para)
        ExternalTools:showView(view, parent)
        parent.buyGemView = view
        parent.onRechargeSuc = MessageManager.Shared():addMsg(MsgKeyData.onRechargeSuc, function (data)
            MessageManager.Shared():removeMsg(MsgKeyData.onRechargeSuc, parent.onRechargeSuc)
            if call then
                call()
            end
            if parent.buyGemView then
                parent.buyGemView:removeFromParent(true)
                parent.buyGemView = nil
            end
        end)
    end
end

-- 显示购买金币界面
function GameTool:showBuyGoldView(parent)
    local view = require("JunTuan.src.views.BuyGoldView").new()
    ExternalTools:showView(view, parent)
end

-- 显示购买体力界面
function GameTool:showBuyEnergyView(parent)
    local view = require("JunTuan.src.views.BuyEnergyView").new()
    ExternalTools:showView(view, parent)
end

-- 显示指引界面
function GameTool:showGuideView(parent, para)
    local view = require("JunTuan.src.views.GuideView").new(para)
    ExternalTools:showView(view, parent)
    return view
end

-- 购买特权卡界面
function GameTool:showBuyCardView(parent, flag)
    local data1 = UserData.Shared().gameCfg[Define.ENUM_CFG_KEY.SHOP_CFG]
    local data2 = UserData.Shared().gameCfg[Define.ENUM_CFG_KEY.RECHARGE_INFO]
    local cardData, weekData, monthData
    for _, v in pairs(data1) do
        if v.ptype == 2 then
            local data = {
                money = v.price,
                productid = v.productid,
                productname = v.productname,
                pnum = v.pnum,
                price = v.price,
            }
            if v.productid == Define.CARDS_CFG.WEEK_ID then
                -- 周卡礼包
                weekData = data
            elseif v.productid == Define.CARDS_CFG.MONTH_ID then
                monthData = data
            end
        end
    end
    for _, v in pairs(data2) do
        if v.RewardType == 6 then
            if v.ProductId == Define.CARDS_CFG.WEEK_ID then
                weekData.pnum = v.RewardNums
            elseif v.ProductId == Define.CARDS_CFG.MONTH_ID then
                monthData.pnum = v.RewardNums
            end
        end
    end
    cardData = flag == Define.CARDS_CFG.WEEK_ID and weekData or monthData
    local view = require("JunTuan.src.views.BuyGardView").new(cardData)
    ExternalTools:showView(view, parent)
    return view
end

-- 显示免费特权提示界面
function GameTool:showGameTipView(parent, para, z)
    local view = require("JunTuan.src.views.GameTipView").new(para)
    ExternalTools:showView(view, parent, z)
    return view
end

-- 显示新手礼包界面
function GameTool:showNewUserGiftBag(parent, para, z)
    if (not UserData.Shared().isBuyNewUserBag) then
        local view = require("JunTuan.src.views.giftBag.NewUserGiftBag").new(para)
        ExternalTools:showView(view, parent, z)
        return view
    end
end

-- 获取排行榜奖励数值
function GameTool:getRankReward(rank, rankType)
    if rank > 0 then
        local cfg = UserData.Shared().gameCfg[Define.ENUM_CFG_KEY.RANK_REWARD_INFO]
        for _, v in pairs(cfg) do
            if v.Type == rankType and rank <= v.Rank then
                return v
            end
        end
    end
end

return GameTool