---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by hkc.
--- DateTime: 2021/6/15 14:58
---

-- 购买体力界面
local BuyEnergyView = class("BuyEnergyView", ViewBase)

local buyDataCfg = {}
function BuyEnergyView:ctor(para)
    self:enableNodeEvents()
    self:initData(para)
end

function BuyEnergyView:onEnter()
    local pb = {
        userAct = Define.USER_ACTION.energy_view,
    }
    HttpManager.Shared():sendUserAction(pb)
    self:initView()
    self:addNotify()
end

function BuyEnergyView:initData(para)
    local data = UserData.Shared().gameCfg[Define.ENUM_CFG_KEY.EXCHANGE_BOX]
    for i, v in pairs(data) do
        if v.RewardType == Define.ENUM_REWARD_TYPE.ENERGY then
            buyDataCfg[v.ExBoxId] = {}
            buyDataCfg[v.ExBoxId].num_get = v.RewardNums
            buyDataCfg[v.ExBoxId].gem_cost = v.CostGem
            buyDataCfg[v.ExBoxId].boxId = v.ExBoxId
        end
    end
end

function BuyEnergyView:initView()
    local para = {
        csb = JunTuanCfg.csbCfg.shopView.shop_buy_energy,
        setSize = true
    }
    local ui = ViewBase:createCSB(para)
    self:addChild(ui)

    local panel_black = ui:getChildByName("Panel_black")
    local panel_main = panel_black:getChildByName("Panel_main")
    self:createAni(panel_main)
    self:initPanelEnergy(panel_main)

    local btn_close = panel_main:getChildByName("btn_close")
    ExternalTools:addBtnTouchEventListener(btn_close, function ()
        self:destroyAni(panel_main, function()
            self:removeFromParent(true)
        end)
    end)
end

function BuyEnergyView:initBuyItem(item, data)
    local txt_energy = item:getChildByName("Text_Energy")
    local txt_cost = item:getChildByName("Text_Cost")
    local num_get = data.num_get
    local gem_cost = data.gem_cost
    local boxId = data.boxId
    txt_energy:setString("体力+" .. num_get)
    txt_cost:setString("x" .. gem_cost)
    ExternalTools:txtAutoWidth(txt_energy, 135)
    ExternalTools:txtAutoWidth(txt_cost, 70)
    local function btnCall(btn)
        if UserData.Shared():get_lDiamond() < gem_cost then
            GameTool:showTxtTip("钻石不足")
            GameTool:showBuyGemView(self)
            return
        end

        local body = {
            exBoxId = boxId
        }
        MsgSendMgr:sendExchangeBox(body)
    end
    ExternalTools:addBtnTouchEventListener(item, btnCall)
end

function BuyEnergyView:initPanelEnergy(panel)
    for _, v in pairs(buyDataCfg) do
        local data = v
        local item = panel:getChildByName("Panel_energy")
        self.panel_energy = item
        self:initBuyItem(item, data)
    end
end

function BuyEnergyView:showPayView(data)
    local view = require("JunTuan.src.views.PayView").new(data)
    ExternalTools:showView(view, self)
end

-- 处理宝箱兑换请求
function BuyEnergyView:handleExchangeBox(data)
    local boxId = data.exBoxId
    if buyDataCfg[boxId] then
        local gemCost = buyDataCfg[boxId].gem_cost
        GameTool:updateGem(-gemCost)
        local energyItem = self.panel_energy:getChildByName("img_energy"):getChildByName("img_energy")
        local x,y = self.panel_energy:getChildByName("img_energy"):getPosition()
        local body = {
            startPos = cc.p(x , y),
            endPos = cc.p(50,1325)
        }
        GameTool:flyItemToAnyWhere(self.panel_energy, energyItem, body)
    end
end

function BuyEnergyView:addNotify()
    self.exChangeBoxMsg = MessageManager.Shared():addMsg(MsgKeyData.onExchangeBox, function (data)
        self:handleExchangeBox(data)
    end)
end

function BuyEnergyView:removeNotify()
    MessageManager.Shared():removeMsg(MsgKeyData.onExchangeBox, self.exChangeBoxMsg)
end

function BuyEnergyView:onExit()
    self:removeNotify()
end

return BuyEnergyView