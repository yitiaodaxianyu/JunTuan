---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by hkc.
--- DateTime: 2021/6/17 9:23
---

local GuideView = class("GuideView", ViewBase)

function GuideView:ctor(para)
    self:setEnabled(false)
    self:enableNodeEvents()
    self:initData(para)
end

function GuideView:onEnter()
    self:initView()
end

function GuideView:initData(para)
    self.box = para.box
    self.boundingBox = {}
    self.startPos = para.pos
    self.guideTip = para.guideTip
    self.handleCall = para.handleCall
    self.handActCall = para.handActCall
    self.touchBegan = para.touchBegan
    self.touchMove = para.touchMove
    self.touchEnd = para.touchEnd
end

function GuideView:initView()
    local para = {
        csb = JunTuanCfg.csbCfg.GameView.game_guide,
        setSize = true
    }
    local ui = ViewBase:createCSB(para)
    self:addChild(ui)

    local panel_main = ui:getChildByName("Panel_main")
    panel_main:getChildByName("Image_npc"):hide()
    local txt_title = panel_main:getChildByName("Text_title")
    local img_hand = panel_main:getChildByName("guideHand_1")
    img_hand:setScale(1.5)
    txt_title:setLocalZOrder(100)
    txt_title:setString(self.guideTip)
    self.panel_main = panel_main
    self.img_hand = img_hand

    self:showGuideShade()
    self:handAction()
end

-- 新手指引遮罩
function GuideView:showGuideShade()
    self.boundingBox = {}
    if not self.clippingNode then
        local clippingNode = cc.ClippingNode:create()
        self.clippingNode = clippingNode
        self.panel_main:addChild(clippingNode, 99)
        local guideShade = cc.LayerColor:create(cc.c4b(0,0,0,180))
        clippingNode:addChild(guideShade)

        local function onTouchBegan(touch)
            local p = touch:getLocation()
            local pos = self:convertToNodeSpace(p)
            if self.boundingBox then
                for i, v in ipairs(self.boundingBox) do
                    if cc.rectContainsPoint(v,pos) then
                        if self.touchBegan then
                            self.touchBegan(p)
                        end
                        return true
                    end
                end
            end
            return false
        end
        local function onTouchMove(touch)
            local p = touch:getLocation()
            local pos = self:convertToNodeSpace(p)
            if self.boundingBox then
                for i, v in ipairs(self.boundingBox) do
                    if cc.rectContainsPoint(v,pos) then
                        if self.touchMove then
                            self.touchMove(p)
                        end
                    end
                end
            end
        end
        local function onTouchEnd(touch)
            local p = touch:getLocation()
            local pos = self:convertToNodeSpace(p)
            if self.boundingBox then
                for i, v in ipairs(self.boundingBox) do
                    if cc.rectContainsPoint(v,pos) then
                        if self.touchEnd then
                            self.touchEnd(p)
                        end
                        --self:handleGuide()
                    end
                end
            end
        end
        local listener = cc.EventListenerTouchOneByOne:create()
        listener:registerScriptHandler(onTouchBegan, cc.Handler.EVENT_TOUCH_BEGAN)
        listener:registerScriptHandler(onTouchMove, cc.Handler.EVENT_TOUCH_MOVED)
        listener:registerScriptHandler(onTouchEnd, cc.Handler.EVENT_TOUCH_ENDED)
        local eventDispatcher = guideShade:getEventDispatcher()
        listener:setSwallowTouches(false)
        eventDispatcher:addEventListenerWithSceneGraphPriority(listener, guideShade)
    end
    local clippingNode = self.clippingNode:show()
    local box = self.box
    local parent = self.panel_main
    table.insert(self.boundingBox, box)
    local pos = parent:convertToWorldSpace(cc.p(box.x, box.y))
    box.x, box.y = pos.x, pos.y
    clippingNode:removeChildByName("dNode")
    if self.boundingBox then
        local dNode = cc.DrawNode:create()
        for i, v in ipairs(self.boundingBox) do
            local posAry = {}
            posAry[1] = cc.p(v.x, v.y)
            posAry[2] = cc.p(v.x + v.width, v.y)
            posAry[3] = cc.p(v.x + v.width, v.y + v.height)
            posAry[4] = cc.p(v.x, v.y + v.height)
            dNode:drawPolygon(posAry, 4, cc.c4f(0, 0, 0, 0), 1, cc.c4f(0, 0, 0, 0))
        end
        clippingNode:addChild(dNode)
        dNode:setName("dNode")
        clippingNode:setInverted(true)
        clippingNode:setStencil(dNode)
    end
end

function GuideView:handAction()
    if self.img_hand and self.handActCall then
        self.img_hand:stopAllActions()
        self.img_hand:setPosition(self.startPos)
        self.handActCall(self.img_hand)
    end
end

function GuideView:handleGuide()
    self.img_hand:stopAllActions()
    if self.handleCall then
        self.handleCall()
    end
    performWithDelay(self, function ()
        self:removeFromParent(true)
    end, 1)
end

function GuideView:onExit()

end

return GuideView