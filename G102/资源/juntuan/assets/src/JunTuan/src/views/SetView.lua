---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by huangkecheng.
--- DateTime: 2021/5/9 9:21
---

-- 设置界面
local SetView = class("SetView", ViewBase)
function SetView:ctor()
    self:enableNodeEvents()
    self:initData()
end

function SetView:onEnter()
    self:initView()
end

function SetView:initData()
    self.isSound = AudioManager:isSound()
    self.isMusic = AudioManager:isMusic()
end

function SetView:initView()
    local para = {
        csb = JunTuanCfg.csbCfg.homeView.set_scene,
        setSize = true
    }
    local ui = ViewBase:createCSB(para)
    self:addChild(ui)

    local panel_black = ui:getChildByName("Panel_black")
    local panel_main = panel_black:getChildByName("Panel_main")
    panel_main:setBackGroundImage("res/JunTuan/img/bg_pop_set_jtdzz.png", ccui.TextureResType.localType)
    self:createAni(panel_main)

    local panel_id = panel_main:getChildByName("Panel_id")
    local txt_id = panel_id:getChildByName("Text_id")
    txt_id:setString(UserData.Shared().dwUserID)

    local btn_close = panel_main:getChildByName("btn_close")
    local btn_sound = panel_main:getChildByName("btn_sound")
    local btn_music = panel_main:getChildByName("btn_music")
    local btn_feedback = panel_main:getChildByName("btn_feedback")      -- 反馈
    local btn_policy = panel_main:getChildByName("btn_policy")          -- 服务条款和隐私政策
    local btn_bind = panel_main:getChildByName("btn_bind")              -- 手机号绑定
    local btn_loginout = panel_main:getChildByName("btn_loginout")      -- 登出

    -- 还没有服务条款和隐私政策，此按钮改为【返回登录界面】
    local txt_btn_login = btn_policy:getChildByName("Text_btn")
    txt_btn_login:setString("返回登录界面")

    self.btn_bind = btn_bind
    self.btn_loginout = btn_loginout
    self:setBtnShow()

    local txt_sound = btn_sound:getChildByName("Text_sound")
    local txt_music = btn_music:getChildByName("Text_sound")
    btn_sound.txt = txt_sound
    btn_music.txt = txt_music
    self.btn_sound = btn_sound
    self.btn_music = btn_music
    self:refreshMusicBtn()
    self:refreshSoundBtn()

    local function btnCall(btn)
        if btn == btn_close then
            self:destroyAni(panel_main, function ()
                self:removeFromParent()
            end)
        elseif btn == btn_sound then
            self.isSound = not self.isSound
            self:refreshSoundBtn()
        elseif btn == btn_music then
            self.isMusic = not self.isMusic
            self:refreshMusicBtn()
        elseif btn == btn_feedback then
            self:showFeedback()
        elseif btn == btn_policy then
            self:showPolicy()
        elseif btn == btn_bind then
            self:showPhoneView()
        elseif btn == btn_loginout then
            self:loginOut()
        end
    end
    ExternalTools:addBtnTouchEventListener(btn_close, btnCall)
    ExternalTools:addBtnTouchEventListener(btn_sound, btnCall)
    ExternalTools:addBtnTouchEventListener(btn_music, btnCall)
    ExternalTools:addBtnTouchEventListener(btn_feedback, btnCall)
    ExternalTools:addBtnTouchEventListener(btn_policy, btnCall)
    ExternalTools:addBtnTouchEventListener(btn_bind, btnCall)
    ExternalTools:addBtnTouchEventListener(btn_loginout, btnCall)
end

function SetView:setBtnShow()
    --local bindPhone = UserData.Shared().szBindingMobile
    if UserData.Shared().loginType == LOGIN_TYPE_ACCOUNT then
        self.btn_bind:hide()
        self.btn_loginout:show()
    elseif UserData.Shared().loginType == LOGIN_TYPE_VISITOR then
        self.btn_bind:show()
        self.btn_loginout:hide()
    end
end

-- 反馈
function SetView:showFeedback()
    GameTool:showTxtTip("暂未开放")
end

-- 用户协议
function SetView:showPolicy()
    confirm("确定返回登录界面？", function ()
        self:toLoginScene(false)
    end)
end

-- 绑定手机
function SetView:showPhoneView()
    local para = {
        parent = self,
        title = "绑定手机",
        btnStr = "绑    定",
        flag = 2
    }
    local view = require("JunTuan.src.views.PhoneView").new(para)
    ExternalTools:showView(view, self)
end

-- 返回登录界面
-- isDel: 是否删除账号信息
function SetView:toLoginScene(isDel)
    if isDel then
        AccountDB.DeleteAccount(UserData.Shared().account)
    end
    GameDB.SetValueForKey("isLoginOut", 1)
    GameManager.Shared():setLoginSuc(false)
    GameManager.Shared():CloseServer()
    UserData.Shared():setLoginType(nil)
    UserData.Shared():setUserAccountPassword(nil, nil)
    showWaiting("正在退出")
    performWithDelay(self, function ()
        removeWaiting()
        SceneManager.Shared():EnterJunLoading()
    end, 1)
end

-- 登出
function SetView:loginOut()
    confirm("确定退出当前账号吗？", function ()
        self:toLoginScene(true)
    end)
end

function SetView:refreshSoundBtn()
    if self.isSound then
        AudioManager:setVoiceVolume(100)
        --self.btn_sound.icon:loadTexture("icon_sound_open_set_jtdzz.png", 1)
        self.btn_sound.txt:setString("开启")
    else
        AudioManager:setVoiceVolume(0)
        --self.btn_sound.icon:loadTexture("icon_sound_close_set_jtdzz.png", 1)
        self.btn_sound.txt:setString("关闭")
    end
end

function SetView:refreshMusicBtn()
    if self.isMusic then
        AudioManager:setMusicVolume(100)
        --self.btn_music.icon:loadTexture("icon_sound_open_set_jtdzz.png", 1)
        self.btn_music.txt:setString("开启")
    else
        AudioManager:setMusicVolume(0)
        --self.btn_music.icon:loadTexture("icon_sound_close_set_jtdzz.png", 1)
        self.btn_music.txt:setString("关闭")
    end
end

function SetView:onExit()

end

return SetView