---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by hkc.
--- DateTime: 2021/5/18 12:56
---

-- 游戏加载界面
local GameLoadingView = class("GameLoadingView", ViewBase)

function GameLoadingView:ctor(para)
    self:enableNodeEvents()
    self:initData(para)
end

function GameLoadingView:initData(para)
    self.curTime = 0
    self.allTime = para.time
    self.okCall = para.overCall
    self.delayOverCall = para.delayOverCall
    self.from = para.from
end

function GameLoadingView:onEnter()
    self:initView()
    self:startPress()
end

function GameLoadingView:initView()
    local para = {
        csb = JunTuanCfg.csbCfg.GameView.loading,
        setSize = true
    }
    local ui = self:createCSB(para)
    ui:setAnchorPoint(0.5, 0.5)
    ui:setPosition(display.center)
    self.csbNode = ui
    self:addChild(ui)

    local img_bg = ui:getChildByName("img_bg")
    if self.from == "load" then
        img_bg:loadTexture("res/JunTuan/img/loadingSceneBg.jpg")
    else
        img_bg:loadTexture("res/JunTuan/img/bg_loading_jtdzz.jpg")
    end
    local panel_root = ui:getChildByName("Panel_root")
    local panel_press = panel_root:getChildByName("Panel_press")
    local press_bar = panel_press:getChildByName("press_bar")
    self.press_bar = press_bar:setPercent(0)

    local str = "正在加载中，请稍候"
    local txt_press = panel_press:getChildByName("Text_press")
    txt_press:setString(str)
    ExternalTools:loadingTxtDotAni(txt_press, str)
end

function GameLoadingView:loadOver()
    if self.okCall then
        self.okCall()
    end
    performWithDelay(self, function ()
        if self.delayOverCall then
            self.delayOverCall()
        end
        self:removeFromParent()
        if self.from == "home" then
            MessageManager.Shared():postMsg(MsgKeyData.onRemoveLoading)
        end
    end, 1)
end

function GameLoadingView:startPress()
    local function update(dt)
        self.curTime = self.curTime + dt
        if self.curTime >= self.allTime then
            self.press_bar:setPercent(100)
            self:stopPress()
            self:loadOver()
        else
            local p = self.curTime / self.allTime * 100
            self.press_bar:setPercent(p)
        end
    end
    if not self.mainScheduler then
        local scheduler = cc.Director:getInstance():getScheduler()
        self.mainScheduler = scheduler:scheduleScriptFunc(update, 0.1, false)
    end
end

function GameLoadingView:stopPress()
    if self.mainScheduler then
        local scheduler = cc.Director:getInstance():getScheduler()
        scheduler:unscheduleScriptEntry(self.mainScheduler)
        self.mainScheduler = nil
    end
end

function GameLoadingView:onExit()
    self:stopPress()
end

return GameLoadingView