---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by hkc.
--- DateTime: 2021/5/8 19:38
---

-- 7天签到
local SignView = class("SignView", ViewBase)

function SignView:ctor()
    self:enableNodeEvents()
    self:initData()
end

function SignView:onEnter()
    self:addNotify()
    self:initView();
end

function SignView:initData()
    -- self.signData = {
    --     { rewardID = PropID.gold, rewardNum = 1000, flag = 1 },
    --     { rewardID = PropID.gold, rewardNum = 2000, flag = 0 },
    --     { rewardID = PropID.soul, rewardNum = 50, flag = 1 },
    --     { rewardID = PropID.box_1, rewardNum = 1, flag = 2 },
    --     { rewardID = PropID.box_2, rewardNum = 1, flag = 4 },
    --     { rewardID = PropID.box_3, rewardNum = 1, flag = 4 },
    --     { rewardID = 1105, rewardNum = 1, flag = 4 },
    -- }
    self.signData,self.signDays = UserData.Shared():getSignTask();
    self.panelMain = nil;
end

function SignView:initView()
    local para = {
        csb = JunTuanCfg.csbCfg.homeView.sign_week,
        setSize = true
    }
    local ui = ViewBase:createCSB(para)
    self:addChild(ui)

    local panel_black = ui:getChildByName("Panel_black")
    self.panelMain = panel_black:getChildByName("Panel_main")
    self:createAni(self.panelMain)
    for i = 1, 7 do
        local data = self.signData[i]
        local panel = self.panelMain:getChildByName("Panel_day_" .. i)
        panel:getChildByName("Panel_equip"):hide()
        self:initRewardItem(panel, data, i)
    end
    local btn_close = self.panelMain:getChildByName("btn_close")
    local function btnCall(btn)
        self:destroyAni(self.panelMain, function ()
            self:removeFromParent(true)
        end)
    end
    ExternalTools:addBtnTouchEventListener(btn_close, btnCall)
end

function SignView:refreshView()
    for i = 1, 7 do
        local data = self.signData[i]
        local panel = self.panelMain:getChildByName("Panel_day_" .. i)
        self:initRewardItem(panel, data, i)
    end
end

-- -- 当天可领取奖励动画
-- function SignView:curRewardAni(img)
--     local s = img:getScale()
--     local act1 = cc.RotateTo:create(0.07, 15)
--     local act2 = cc.RotateTo:create(0.07, 0)
--     local act3 = cc.RotateTo:create(0.07, -15)
--     local act4 = cc.RotateTo:create(0.07, 0)
--     local seq1 = cc.Sequence:create(act1, act2, act3, act4)
--     local act5 = cc.ScaleTo:create(0.2, s * 1.2)
--     local act6 = cc.ScaleTo:create(0.2, s)
--     local seq2 = cc.Sequence:create(act5, seq1, seq1, act6)
--     local action = cc.RepeatForever:create(seq2)
--     img:runAction(action)
-- end

-- function SignView:pauseRewardAni(img)
--     if img ~= nil then
--         img:stopAllActions();
--     end
-- end

function SignView:imgLoadTexture(i, name, img_bg)
    if i ~= 7 then
        img_bg:loadTexture(name, 1)
    end
end

function SignView:onClickHandler(item)
    ExternalTools:addBtnTouchEventListener(item, function ()
        if not self.curDayIdx then
            self.curDayIdx = item.dayIdx
        end
        self:sendGetReward(item.signId)
    end)
end

function SignView:initItem(item, img_prize, data, i)
    item.signId = data.id
    item.dayIdx = i
    local img_bg = item:getChildByName("img_bg")
    img_bg:ignoreContentAdaptWithSize(true)
    local img_mark = item:getChildByName("img_mark"):hide()
    local flag  = data.isSign;
    if flag == 0 then
        -- 当前可领取
        GameTool:curRewardAni(img_prize,true);
        self:onClickHandler(item)
        self:imgLoadTexture(i, "sign_week_select_jtdzz.png", img_bg)
    elseif flag == 1 then
        -- 已领取，已过期
        GameTool:pauseRewardAni(img_prize);
        img_mark:show()
        self:imgLoadTexture(i, "sign_week_bg1_jtdzz.png", img_bg)
    elseif flag == 2 then
        -- 不可领取
        self:imgLoadTexture(i, "sign_week_bg2_jtdzz.png", img_bg)
    end
end

function SignView:initRewardItem(item, data, i)
    local rewardType = data.rewardType
    if rewardType == Define.ENUM_REWARD_TYPE.EQUIPS then
        self:initEquipItem(item, data)
    else
        local img_prize = item:getChildByName("img_prize")
        if rewardType == Define.ENUM_REWARD_TYPE.BOX then
            img_prize:setScale(0.6)
        else
            img_prize:setScale(1)
        end
        self:initItem(item, img_prize, data, i)
        GameTool:setRewardImg(rewardType, data.rewardId, img_prize)
        local txt_num = item:getChildByName("Text_num")
        txt_num:setString("x" .. data.rewardNums)
    end
end

function SignView:initEquipItem(item, data)
    local equipID = data.rewardId
    local num = data.rewardNums
    item:getChildByName("img_prize"):hide()
    local panel_equip = item:getChildByName("Panel_equip"):show()
    self:initItem(item, panel_equip, data, 7)
    GameTool:setEquipImgById(equipID, panel_equip)
    local txt_num = item:getChildByName("Text_num")
    txt_num:setString("x" .. num)
end

function SignView:sendGetReward(signId)
    local body = {
        id = signId
    }
    MsgSendMgr:sendRoleSignReq(body);
end

function SignView:addNotify()
    self.onSignRewardedMsg = MessageManager.Shared():addMsg(MsgKeyData.onSignRewarded, function (data)
        self:onRewardedHandle(data);
    end);
end

function SignView:removeNotify()
    MessageManager.Shared():removeMsg(MsgKeyData.onSignRewarded,self.onSignRewardedMsg);
end

function SignView:onRewardedHandle(data)
    GameTool:showGetRewardWin(self,data[1]);
    self.signDays  = self.signDays;

    for i = 1, 7 do
        if self.curDayIdx == i then
            self.signData[i].isSign = 1;
            self.curDayIdx = nil
        end
        local panel = self.panelMain:getChildByName("Panel_day_" .. i)
        local data = self.signData[i]
        self:initRewardItem(panel, data, i)
    end
end

function SignView:onExit()
    self:removeNotify()
end

return SignView