---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by hkc.
--- DateTime: 2021/6/15 17:07
---

-- 购买周卡、月卡界面
local BuyGardView = class("BuyGardView", ViewBase)

function BuyGardView:ctor(para)
    self:enableNodeEvents()
    self:initData(para)
end

function BuyGardView:onEnter()
    if self.data.productid == Define.CARDS_CFG.WEEK_ID then
        local pb = {
            userAct = Define.USER_ACTION.weedCard_view,
        }
        HttpManager.Shared():sendUserAction(pb)
    else
        local pb = {
            userAct = Define.USER_ACTION.monthCard_view,
        }
        HttpManager.Shared():sendUserAction(pb)
    end
    self:initView()
    self:addNotify()
end

function BuyGardView:initData(para)
    self.data = para
end

function BuyGardView:initView()
    local csbFile = ""
    if self.data.productid == PropID.week_card then
        csbFile = JunTuanCfg.csbCfg.shopView.shop_week_card
    else
        csbFile = JunTuanCfg.csbCfg.shopView.shop_month_card
    end
    local para = {
        csb = csbFile,
        setSize = true
    }
    local ui = ViewBase:createCSB(para)
    self:addChild(ui)

    local panel_black = ui:getChildByName("Panel_black")
    local panel_main = panel_black:getChildByName("Panel_main")
    self:createAni(panel_main)
    self:initPanelMain(panel_main)

    local btn_close = panel_main:getChildByName("btn_close")
    ExternalTools:addBtnTouchEventListener(btn_close, function ()
        self:destroyAni(panel_main, function()
            self:removeFromParent(true)
        end)
    end)
end

function BuyGardView:initPanelMain(panel)
    local panel_diamond = panel:getChildByName("Panel_diamond")
    local panel_tip = panel:getChildByName("Panel_tip")
    local btn_buy = panel:getChildByName("btn_buy")
    local scrollView = panel_tip:getChildByName("ScrollView")
    local txt_gem_get = panel_diamond:getChildByName("Text_num")        -- 获得钻石文本
    local txt_tip = scrollView:getChildByName("Text_tip_2")             -- 特权文本
    local txt_price = btn_buy:getChildByName("Text_btn")                -- 价格文本
    self.txt_special = txt_tip
    self:setCardTxt()
    txt_gem_get:setString(string.format("%d钻石", self.data.pnum))
    txt_price:setString(string.format("%d元购买", self.data.price))
    ExternalTools:txtAutoWidth(txt_gem_get, 183)
    ExternalTools:txtAutoWidth(txt_price, 206)
    if self.data.productid == PropID.week_card then
        if UserData.Shared().days_week > 0 then
            txt_price:setString("已购买")
            return
        end
    else
        if UserData.Shared().days_month > 0 then
            txt_price:setString("已购买")
            return
        end
    end
    ExternalTools:addBtnTouchEventListener(btn_buy, function ()
        self:showPayView(self.data)
    end)
end

-- 设置特权文本
function BuyGardView:setCardTxt()
    local cardPrivilege
    if self.data.productid == PropID.week_card then
        cardPrivilege = Define.CardPrivilegeWeek
    else
        cardPrivilege = Define.CardPrivilegeMonth
    end
    local cfg = Define.CardTxtCfg
    local str = ""
    local idx = 1
    for i, v in pairs(cfg) do
        if ExternalTools:isTableHaveData(cardPrivilege, i) then
            if i ~= #cfg then
                str = str .. string.format("%d.%s", idx, v) .. "\n"
            else
                str = str .. string.format("%d.%s", idx, v)
            end
            idx = idx + 1
        end
    end
    self.txt_special:setFontSize(30)
    self.txt_special:setString(str)
end

function BuyGardView:showPayView(data)
    local view = require("JunTuan.src.views.PayView").new(data)
    ExternalTools:showView(view, self)
end

function BuyGardView:addNotify()
    self.onRechargeSuc = MessageManager.Shared():addMsg(MsgKeyData.onRechargeSuc, function (data)
        self:removeFromParent(true)
    end)
end

function BuyGardView:removeNotify()
    MessageManager.Shared():removeMsg(MsgKeyData.onRechargeSuc, self.onRechargeSuc)
end

function BuyGardView:onExit()
    self:removeNotify()
end

return BuyGardView