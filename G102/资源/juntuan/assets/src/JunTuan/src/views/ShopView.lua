---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by hkc.
--- DateTime: 2021/5/7 11:05
---

local ShopView = class("ShopView", ViewBase)
local shopCfg = require("JunTuan.src.configs.ShopCfg")
local CARDS_CFG = Define.CARDS_CFG
function ShopView:ctor()
    self:enableNodeEvents()
end

function ShopView:onEnter()
    self:initData()
    self:initView()
    self:addNotify()
end

function ShopView:initData()
    self.boxInfoList = UserData:Shared():getBoxList();
    self.panelBoxList = {}
    self.curBoxId = 1
end

function ShopView:initView()
    local para = {
        csb = JunTuanCfg.csbCfg.shopView.shop_main,
        setSize = true
    }
    local ui = self:createCSB(para)
    ui:setAnchorPoint(0.5, 0.5)
    ui:setPosition(display.center)
    self.csbNode = ui
    self:addChild(ui)

    local panel_main = ui:getChildByName("Panel_main")
    self.panel_box_1 = panel_main:getChildByName("Panel_box_1")
    self.panel_box_2 = panel_main:getChildByName("Panel_box_2")
    self.panel_box_3 = panel_main:getChildByName("Panel_box_3")

    if self.boxInfoList == nil then
        return;
    end

    self:initPanelBox_1(self.panel_box_1)
    self:initPanelBox_2(self.panel_box_2)
    self:initPanelBox_3(self.panel_box_3)
    self:initPanelBox_3_Ex()
    self:startTimeCountDown()
end

function ShopView:refreshView()
    self.boxInfoList = UserData:Shared():getBoxList();
    for _,v in ipairs(self.panelBoxList) do
        local boxId = v.boxInfo.boxId;
        v.boxInfo = self:getBoxInfoByID(boxId);
        v.countDown = v.boxInfo.countDown;
    end
    self:initPanelBox_1(self.panel_box_1)
    self:initPanelBox_2(self.panel_box_2)
    --self:initPanelBox_3(self.panel_box_3)
    self:initPanelBox_3_Ex()
    self:startTimeCountDown()
end

function ShopView:sendOpenBox(boxId)
    if boxId > 1 then
        if UserData.Shared().sceneInfo.sceneId <= Define.ShopUnlock then
            GameTool:showTxtTip(string.format("通关世界%d解锁", Define.ShopUnlock))
            return
        end
    end
    self.curBoxId = boxId
    MsgSendMgr:sendOpenBox(boxId)
    local info = self:getBoxInfoByID(boxId)
    self.isOpenFree = info.countDown == 0
end

function ShopView:initPanelBox_1(panel)
    local function btnCall(btn)
        local boxId = btn.boxId
        if btn.boxInfo.countDown > 0 and UserData.Shared():get_lDiamond() < btn.boxInfo.costGem then
            GameTool:showTxtTip("钻石不足")
            GameTool:showBuyGemView(self)
            return
        end
        self:sendOpenBox(boxId)
    end
    for i = 1, 3 do
        local item = panel:getChildByName("Panel_" .. i)
        item.boxId = i
        item.boxInfo = self:getBoxInfoByID(item.boxId)
        if item.boxInfo ~= nil then
            item.icon_soul = item:getChildByName("icon_soul")
            item.icon_time = item:getChildByName("icon_count_down")
            item.txt_soul = item:getChildByName("Text_num")
            item.txt_time = item:getChildByName("Text_count_down")
            item.txt_free = item:getChildByName("Text_free"):hide()
            item.boxType = 0;
            item:setEnabled(false)
            self.panelBoxList[i] = item
            self:refreshBoxByInfo(item)
            ExternalTools:addBtnTouchEventListener(item, btnCall, true)
        end
    end
end

function ShopView:initPanelBox_2(panel)
    local curBoxId = 3--#self.panelBoxList
    local panel_1 = panel:getChildByName("Panel_1");
    local item = panel_1:getChildByName("btn_reward");
    item.boxId = self.boxInfoList[4].boxId
    item.boxInfo = self:getBoxInfoByID(item.boxId)
    if item.boxInfo ~= nil then
        item.icon_soul = item:getChildByName("icon_soul")
        item.icon_time = item:getChildByName("icon_count_down")
        item.txt_soul = item:getChildByName("Text_num")
        item.txt_time = item:getChildByName("Text_count_down")
        item.txt_free = item:getChildByName("Text_free"):hide()
        item.boxType = 0;
        self.panelBoxList[curBoxId + 1] = item
        local function btnCall(btn)
            local boxId = btn.boxId
            if btn.boxInfo.countDown > 0 and UserData.Shared():get_lDiamond() < btn.boxInfo.costGem then
                GameTool:showTxtTip("钻石不足")
                GameTool:showBuyGemView(self)
                return
            end
            self:sendOpenBox(boxId)
        end
        self:refreshBoxByInfo(item)
        ExternalTools:addBtnTouchEventListener(item, btnCall, true)
    end
end

function ShopView:initPanelBox_3(panel)
    local function btnCall(btn)
        if UserData.Shared():get_lDiamond() < btn.costGem then
            GameTool:showTxtTip("钻石不足")
            GameTool:showBuyGemView(self)
            return
        end
        --体力兑换次数检测
        if btn.boxId == 2 then
            local leftTimes = UserData.Shared():getEnergyExLeft();
            if leftTimes <= 0 then
                GameTool:showTipText("每日购买次数已用完");
                return;
            end
        end
        local body = {
            exBoxId = btn.boxId
        }
        MsgSendMgr:sendExchangeBox(body)
    end
    panel:getChildByName("Panel_2"):hide();
    local boxIdList = {1,3};
    for _,v in pairs(boxIdList) do
        local item = panel:getChildByName("Panel_" .. v)
        item:setVisible(true);
        local boxId = v == 3 and 2 or v;
        item.boxId = boxId
        item.boxType = 1;
        item.costGem = shopCfg.ExArr[item.boxId].cost;
        if boxId == 2 then
            local txt_leftTime = item:getChildByName("Text_num");
            item:getChildByName("icon_video"):hide();
            local leftTimes = UserData.Shared():getEnergyExLeft();
            txt_leftTime:setString(string.format("%d/%d",leftTimes,shopCfg.EnergyExTimesMax));
            item.txt_soul = item:getChildByName("btn_num"):getChildByName("Text_num");
        else
            item.txt_soul = item:getChildByName("Text_num")
        end
        item.txt_soul:setString(string.format("x%d",item.costGem))
        ExternalTools:addBtnTouchEventListener(item, btnCall, true)
        -- self:refreshBoxByInfo(item)
        item:setEnabled(true);
        item:setVisible(true);
    end
end

-- 月卡、周卡
function ShopView:initPanelBox_3_Ex()
    local panel = self.panel_box_3
    for i = 1, 3 do
        panel:getChildByName("Panel_" .. i):hide()
    end
    local panel_month = panel:getChildByName("Panel_month")
    local panel_week = panel:getChildByName("Panel_week")
    self.panel_week = panel_week
    self.panel_month = panel_month
    local data1 = UserData.Shared().gameCfg[Define.ENUM_CFG_KEY.SHOP_CFG]
    local data2 = UserData.Shared().gameCfg[Define.ENUM_CFG_KEY.RECHARGE_INFO]
    for _, v in pairs(data1) do
        if v.ptype == 2 then
            local data = {
                money = v.price,
                productid = v.productid,
                productname = v.productname,
                pnum = v.pnum,
                price = v.price,
            }
            if v.productid == CARDS_CFG.WEEK_ID then
                -- 周卡礼包
                self.panel_week.data = data
            elseif v.productid == CARDS_CFG.MONTH_ID then
                self.panel_month.data = data
            end
        end
    end
    for _, v in pairs(data2) do
        if v.RewardType == 6 then
            if v.ProductId == CARDS_CFG.WEEK_ID then
                self.panel_week.data.pnum = v.RewardNums
            elseif v.ProductId == CARDS_CFG.MONTH_ID then
                self.panel_month.data.pnum = v.RewardNums
            end
        end
    end
    self:refreshCard()
    local function btnCall(btn)
        self:showPayView(btn.data)
    end
    ExternalTools:addBtnTouchEventListener(panel_week, btnCall)
    ExternalTools:addBtnTouchEventListener(panel_month, btnCall)
end

function ShopView:showPayView(data)
    local view = require("JunTuan.src.views.BuyGardView").new(data)
    ExternalTools:showView(view, self)
    self.buyGardView = view
end

-- 刷新周卡、月卡视图
function ShopView:refreshCard()
    if self.panel_week and self.panel_month then
        local function initCard(item, days, timeStr)
            local txt_num = item:getChildByName("Text_num")         -- 购买获得的钻石数
            local txt_money = item:getChildByName("Text_money")    -- 购买花费多少钻石/剩余天数
            local data = item.data
            local gemNum = data.pnum
            local price = data.price
            txt_num:setString(string.format("%d钻石", gemNum))
            txt_money.price = price
            if days > 0 then
                txt_money:setString(string.format("剩余%d天", days))
            else
                if timeStr and timeStr > 0 then
                    txt_money:setString("剩余:" .. timeStr2(timeStr, true))
                end
                txt_money:setString(price .. "元")
            end
            if item == self.panel_week then
                self.curTime_week = timeStr
                self.txt_time_week = txt_money
            else
                self.curTime_month = timeStr
                self.txt_time_month = txt_money
            end
        end
        local days_week = UserData.Shared().days_week
        local days_month = UserData.Shared().days_month
        local timeStr_week = UserData.Shared().timeStr_week
        local timeStr_month = UserData.Shared().timeStr_month
        initCard(self.panel_week, days_week, timeStr_week)
        initCard(self.panel_month, days_month, timeStr_month)
    end
end

function ShopView:refreshBoxByInfo(item)
    item:setEnabled(false)
    local boxInfo = self:getBoxInfoByID(item.boxId)
    --local boxInfo = item.boxInfo
    if boxInfo then
        if boxInfo.countDown == 0 then
            item.icon_soul:hide()
            item.txt_soul:hide()
            item.txt_time:setString("00:00:00")
            item.txt_free:show()
            item:setEnabled(true)
        elseif boxInfo.countDown > 0 then
            item.icon_time:show()
            item.txt_time:show()
            if item.boxId == 1 then
                item.txt_free:show()
                item.txt_soul:hide()
                item.icon_soul:hide()
            else
                item.icon_soul:show()
                item.txt_soul:show()
                item.txt_free:hide()
                item.txt_soul:setString("x" .. boxInfo.costGem)
                --item.countDown = boxInfo.countDown
            end
        end
        if not item.countDown or item.countDown == 0 then
            item.countDown = boxInfo.countDown
        end
        --local timeStr = timeStr2(boxInfo.countDown)
        local timeStr = timeStr2(item.countDown)
        item.txt_time:setString(timeStr)
        item:setEnabled(true)
    end
end

function ShopView:getBoxInfoByID(boxId)
    if self.boxInfoList == nil then return nil end

    for _, v in pairs(self.boxInfoList) do
        if v.boxId == boxId then
            return v
        end
    end
end

-- 获得装备
function ShopView:showGetEquip(data)
    local rewardView = require("JunTuan.src.views.GetRewardView").new(data)
    rewardView:setAnchorPoint(0.5, 0.5)
    rewardView:setPosition(display.center)
    self:addChild(rewardView, 999)
    return rewardView
end

-- 获得英雄碎片动画
function ShopView:showGetChipAni(roleId, chipNum)
    --[[local item = self.panelBoxList[self.curBoxId]
    local pos = cc.p(item:getPosition())
    local ani = self:createOpenBoxAni()
    for i = 1, chipNum do
        local node = cc.Node:create()
        local imgBg = cc.Sprite:createWithSpriteFrameName("img_fragment_hero_jtdzz.png")
        local imgIcon = cc.Sprite:createWithSpriteFrameName("img_gunner_hero_jtdzz.png")
        imgIcon:setScale(0.4)
        imgIcon:setPositionX(-25)
        node:addChild(imgBg)
        node:addChild(imgIcon)
        node:setPosition(pos)
        self:addChild(node)
    end]]
end

-- 宝箱倒计时
function ShopView:boxTimeCountDown()
    for _, v in pairs(self.panelBoxList) do
        if v.countDown and v.countDown > 0 then
            v.countDown = v.countDown - 1
            if v.countDown <= 0 then
                v.boxInfo.countDown = 0
                self:refreshBoxByInfo(v)
            else
                local str = timeStr2(v.countDown)
                v.txt_time:setString(str)
            end
        end
    end
end

function ShopView:cardTimeHandle(time, txt, flag)
    if time and time > 0 and txt then
        time = time - 1
        if time > 0 then
            txt:setString("剩余:" .. timeStr2(self.curTime_week, true))
        else
            local price = txt.price
            txt:setString(price .. "元")
            if flag == CARDS_CFG.WEEK_ID then
                UserData.Shared().days_week = 0
            else
                UserData.Shared().days_month = 0
            end
        end
        printf("cardTimeHandle, time is %d", time)
    end
end

-- 月卡倒计时
function ShopView:cardTimeCountDown()
    self:cardTimeHandle(self.curTime_week, self.txt_time_week, CARDS_CFG.WEEK_ID)
    self:cardTimeHandle(self.curTime_month, self.txt_time_month, CARDS_CFG.MONTH_ID)
end

function ShopView:startTimeCountDown()
    local function update(dt)
        self:boxTimeCountDown()
        self:cardTimeCountDown()
    end
    if not self.boxTimeScheduler then
        local scheduler = cc.Director:getInstance():getScheduler()
        self.boxTimeScheduler = scheduler:scheduleScriptFunc(update, 1, false)
    end
end

-- 停止宝箱倒计时
function ShopView:stopBoxTimeCountDown()
    if self.boxTimeScheduler then
        local scheduler = cc.Director:getInstance():getScheduler()
        scheduler:unscheduleScriptEntry(self.boxTimeScheduler)
        self.boxTimeScheduler = nil
    end
end

function ShopView:createOpenBoxAni()
    local info = JunTuanCfg.spineAni.openBoxAni
    local ani = AnimationMgr:createSpine(info.file)
    local name = info.names[self.curBoxId]
    ani:setAnimation(0, name, false)
    self:addChild(ani)
    return ani
end

-- 处理开宝箱请求
function ShopView:handleOpenBox(data)
    GameTool:showGetRewardWin(self,data);

    local item = self.panelBoxList[self.curBoxId]
    self:refreshBoxByInfo(item)
    --self:refreshView();

    if not self.isOpenFree then
        -- 不是免费宝箱扣除钻石
        local info = self:getBoxInfoByID(self.curBoxId)
        GameTool:updateGem(-info.costGem)
    end
end

-- 处理宝箱兑换请求
function ShopView:handleExchangeBox(data)
    self:initPanelBox_3(self.panel_box_3)
    local coinType = data.coinType;
    local costGem = shopCfg.ExArr[coinType].cost;
    GameTool:updateGem(-costGem)
    if coinType == 1 then           --兑换金币
        MessageManager.Shared():postMsg(MsgKeyData.onHeroRedDotCheck)
    elseif coinType == 2 then         --兑换体力
        local panel_3 = self.panel_box_3:getChildByName("Panel_3");
        local energyItem = panel_3:getChildByName("img_energy"):getChildByName("img_energy");
        local x,y = panel_3:getChildByName("img_energy"):getPosition();
        local body = {
            startPos = cc.p(x , y),
            endPos = cc.p(50,1325)
        }
        GameTool:flyItemToAnyWhere(panel_3,energyItem,body);
    end
end

-- 处理充值成功（购买周卡、月卡成功）
function ShopView:handleRechargeSuc(rewards)
    if not tolua.isnull(self.buyGardView) then
        self.buyGardView:removeFromParent()
        self.buyGardView = nil
    end
    self:refreshCard()
end

function ShopView:addNotify()
    self.openBoxMsg = MessageManager.Shared():addMsg(MsgKeyData.onOpenBox, function (data)
        self:handleOpenBox(data)
    end)
    --self.exChangeBoxMsg = MessageManager.Shared():addMsg(MsgKeyData.onExchangeBox, function (data)
    --    self:handleExchangeBox(data)
    --end)
    self.onShopShow = MessageManager.Shared():addMsg(MsgKeyData.onBoxListShow, function ()
        self:refreshView();
    end)
end

function ShopView:removeNotify()
    MessageManager.Shared():removeMsg(MsgKeyData.onOpenBox, self.openBoxMsg)
    --MessageManager.Shared():removeMsg(MsgKeyData.onExchangeBox, self.exChangeBoxMsg)
    MessageManager.Shared():removeMsg(MsgKeyData.onBoxListShow, self.onShopShow)
end

function ShopView:onExit()
    self:removeNotify()
    self:stopBoxTimeCountDown()
end

return ShopView