---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by hkc.
--- DateTime: 2021/5/8 16:21
---

-- 里程碑
local TableViewManager = require("app.Component.TableViewManager")
local MilepostView = class("MilepostView", ViewBase)
local MilepostData = {}             -- 原始数据
local SortData = {}                 -- 排序后的数据

function MilepostView:ctor()
    self:enableNodeEvents()
    self:initData();
end

function MilepostView:onEnter()
    self:addEventListener();
    self:initView();
end

function MilepostView:addEventListener()
    self.mileStoneRewardMsg = MessageManager.Shared():addMsg(MsgKeyData.onMileStoneRewarded, function(data)
        self:onRewardedHandle(data);
    end);
    self.mileStoneShow = MessageManager.Shared():addMsg(MsgKeyData.onMileStoneShow, function()
        --self:createTableView()
        self.minIdx = GameTool:getTheTopItemIdx()
        if self.minIdx <= 1 then
            self.isSendOver = true
        end
        self.isSend = false
    end);
    self.onRechargeSuc = MessageManager.Shared():addMsg(MsgKeyData.onRechargeSuc, function (data)
        self:refreshView()
    end)
end

function MilepostView:refreshView()
    for i, v in pairs(self.itemPool) do
        if not tolua.isnull(v) then
            local data = MilepostData[i]
            local idx = v.idx
            self:initItem(v, data, idx);
        end
    end
end

function MilepostView:initData()
    self.itemPool = {};
    self.rewardMileId = 0;
    self.minIdx = GameTool:getTheTopItemIdx()
    SortData, MilepostData = GameTool:getMileList()
    self:initGotoCellIdx()
end

function MilepostView:initGotoCellIdx()
    local count = 0;
    local curCombat = UserData.Shared():get_dwCombat()
    for _, v in pairs(SortData) do
        if v.Combat <= curCombat then
            count = count + 1;
        else
            break
        end
    end
    if count <= 5 then
        count = 5;
    end
    self.renderItems = count - 4;
end

function MilepostView:initView()
    local para = {
        csb = JunTuanCfg.csbCfg.homeView.milepost,
        setSize = true
    }
    local ui = ViewBase:createCSB(para)
    self.csbNode = ui
    self:addChild(ui)

    local panel_black = ui:getChildByName("Panel_black")
    local panel_main = panel_black:getChildByName("Panel_main")

    local panel_mask = panel_main:getChildByName("Panel_mask")
    local listView = panel_mask:getChildByName("ListView_1"):hide()
    listView:setScrollBarEnabled(false)

    local panel_item = panel_mask:getChildByName("Panel_item"):hide()
    self.listView = listView
    self.panel_main = panel_main
    self.panel_item = panel_item
    self.panel_mask = panel_mask
    self:createAni(panel_main, function ()
        self:createTableView()
        --MsgSendMgr:sendMileStoneReq()
    end)

    local btn_close = panel_main:getChildByName("btn_close")
    ExternalTools:addBtnTouchEventListener(btn_close, function()
        self:destroyAni(panel_main, function()
            --self:removeFromParent(true)
            self:hide()
        end)
    end)
end

function MilepostView:showAni()
    self:show()
    self:createAni(self.panel_main)
    self:refreshView()
    self:initGotoCellIdx()
    self.tableViewMgr:gotoCell(self.renderItems, false);
end

function MilepostView:createTableView()
    if not self.tableView then
        local listView = self.listView
        local panel_item = self.panel_item
        local panel_mask = self.panel_mask
        self.tableViewMgr = TableViewManager.new(listView, #SortData)
        self.tableViewMgr:setData(SortData)
        self.tableViewMgr:setItem(panel_item)
        self.tableViewMgr:setInitItemFunc(function(item, data, idx)
            self:initItem(item, data, idx)
            self.itemPool[data.Combat] = item;
        end)
        self.tableView = self.tableViewMgr:createTableView()
        self.tableView:setPosition(cc.p(listView:getPosition()))
        panel_mask:addChild(self.tableView)
    else
        if self:isVisible() then
            self:refreshView()
        end
    end
    self.tableViewMgr:gotoCell(self.renderItems, false);
end

function MilepostView:setReward(data, panel, idx)
    local isGet = GameTool:checkMileStoneRewardedById(data.MileId)
    local isCardUser = UserData.Shared():isMonthCardUser()
    if not isGet and idx == 2 then
        if not isCardUser then
            panel:getChildByName("icon_video"):show()
            --panel:setColor(cc.c3b(125, 125, 125))
        else
            panel:getChildByName("icon_video"):hide()
            --panel:setColor(cc.c3b(255, 255, 255))
        end
    end
    local rewardID = data.RewardId;
    local rewardType = data.RewardType
    if rewardType == Define.ENUM_REWARD_TYPE.EQUIPS then
        if idx == 1 then
            -- 装备
            panel:getChildByName("Text_value"):hide()
            local roleId = GameTool:getRoleIDByEquipID(rewardID)
            local eType = GameTool:getEquipType(rewardID)
            local level = GameTool:getEquipLevel(rewardID)
            GameTool:setEquipImg(roleId, eType, level, panel)
        end
    elseif rewardType == Define.ENUM_REWARD_TYPE.PET then
        -- 宠物
    else
        local img
        if idx == 2 then
            img = panel:getChildByName("img_gem")
        elseif idx == 1 then
            img = panel:getChildByName("img_equip")
            img:ignoreContentAdaptWithSize(true)
            panel:getChildByName("img_bg"):hide()
            panel:getChildByName("icon_mark"):hide()
            panel:getChildByName("Text_num"):hide()
        end
        if rewardType == Define.ENUM_REWARD_TYPE.BOX then
            img:setScale(0.6);
        elseif rewardType == Define.ENUM_REWARD_TYPE.CHIPS then
            local img_bg = panel:getChildByName("img_bg");
            GameTool:setCommonSprite("img_fragment_hero_jtdzz.png", img_bg);
            img_bg:setContentSize(cc.size(68, 36));

            img_bg:show();
            img_bg:setScale(1.2);
            img:setScale(0.6, 0.6);
            GameTool:setCommonSprite(PropImg[rewardID], img);
            img:setPosition(cc.p(20, 48));
        end

        if rewardType ~= Define.ENUM_REWARD_TYPE.CHIPS then
            GameTool:setRewardImg(data.RewardType, rewardID, img)
        end
    end

    local function btnCall(btn)
        local combat = UserData.Shared():get_dwCombat()
        local rankLimit = btn.rank;
        local mileId = btn.mileId;
        if rankLimit > combat then
            GameTool:showTxtTip("战力未达到");
            return ;
        end

        if isGet then
            GameTool:showTxtTip("已领取");
            return ;
        end

        if idx == 2 and (not isCardUser) then
            local msg = "购买月卡可以免费领取左侧奖励，包含价值300元的钻石、价值68元的宝箱奖励和18.6万金币！！"
            confirm(msg, function ()
                GameTool:showBuyCardView(self, Define.CARDS_CFG.MONTH_ID)
            end)
            return
        end

        local body = {
            mileId = btn.mileId;
        }
        self.rewardMileId = btn.mileId;
        MsgSendMgr:sendMileStoneGetReward(body);
    end
    panel.mileId = data.MileId;
    panel.rank = data.Combat;
    ExternalTools:addBtnTouchEventListener(panel, btnCall);
end

function MilepostView:initItem(item, data, idx)
    local leftData = data[2]
    local rightData = data[1]
    local curCombat = UserData.Shared():get_dwCombat()
    item:show()
    item.idx = idx
    local panel_video = item:getChildByName("Panel_video")
    panel_video:getChildByName("icon_video"):hide()
    local panel_line = item:getChildByName("Panel_line")
    local panel_equip = item:getChildByName("Panel_equip")
    local img_gem = panel_video:getChildByName("img_gem")
    local img_tick_left = panel_video:getChildByName("img_tick");
    local img_tick_right = panel_equip:getChildByName("img_tick")
    local panel_equip_item = panel_equip:getChildByName("Panel_equip")
    local txt_num = panel_video:getChildByName("Text_num")
    local txt_value = panel_equip_item:getChildByName("Text_value")
    local txt_combat = panel_line:getChildByName("Panel_num_1"):getChildByName("Text_num")
    local img_line = item:getChildByName("Panel_line"):getChildByName("img_line");
    img_line:setVisible(rightData.Combat <= curCombat);
    panel_video:hide();
    panel_equip:hide();
    txt_combat:setString(data.Combat)
    if leftData then
        img_tick_left:setVisible(GameTool:checkMileStoneRewardedById(leftData.MileId))
        self:setReward(leftData, panel_video, 2)
        txt_num:setString(leftData.RewardNums)
        panel_video:show();
        local ifGetReward = GameTool:checkMileStoneRewardedById(leftData.MileId);
        if leftData.Combat <= curCombat and not ifGetReward then
            GameTool:curRewardAni(img_gem, false);
        else
            GameTool:pauseRewardAni(img_gem);
        end
    end
    if rightData then
        img_tick_right:setVisible(GameTool:checkMileStoneRewardedById(rightData.MileId))
        self:setReward(rightData, panel_equip_item, 1)
        txt_value:setString(rightData.RewardNums)
        panel_equip:show();

        local ifGetReward = GameTool:checkMileStoneRewardedById(rightData.MileId);
        if rightData.Combat <= curCombat and not ifGetReward then
            GameTool:curRewardAni(panel_equip_item, false);
        else
            GameTool:pauseRewardAni(panel_equip_item);
        end
    end
    if idx <= self.minIdx + 5 and idx >= self.minIdx then
        if not self.isSendOver then
            if not self.isSend then
                self.isSend = true
                local minMileId = UserData.Shared().minMileId
                MsgSendMgr:sendMileStoneReq(minMileId)
                printf("初始化item, idx is %d, min idx is %d", idx, self.minIdx)
            end
        end
    end
end

function MilepostView:onRewardedHandle(data)
    UserData.Shared():pushMileStone(self.rewardMileId);
    GameTool:showGetRewardWin(self, data[1]);

    self:refreshView();
end

function MilepostView:onExit()
    self:removeEventListener();
end

function MilepostView:removeEventListener()
    MessageManager.Shared():removeMsg(MsgKeyData.onMileStoneRewarded, self.mileStoneRewardMsg);
    MessageManager.Shared():removeMsg(MsgKeyData.onMileStoneShow, self.mileStoneShow);
    MessageManager.Shared():removeMsg(MsgKeyData.onRechargeSuc, self.onRechargeSuc)
end

return MilepostView