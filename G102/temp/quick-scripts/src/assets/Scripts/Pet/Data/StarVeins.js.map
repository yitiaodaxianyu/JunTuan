{"version":3,"sources":["assets\\Scripts\\Pet\\Data\\StarVeins.ts"],"names":[],"mappings":";;;;;;;AAAA,yDAAwD;AAGxD;IAAA;QACI,UAAU;QACH,gBAAW,GAAU,CAAC,CAAE;QAC/B,UAAU;QACH,kBAAa,GAAU,CAAC,CAAE;QACjC,QAAQ;QACD,YAAO,GAAU,CAAC,CAAE;QAC3B,UAAU;QACH,YAAO,GAAU,CAAC,CAAE;IAC/B,CAAC;IAAD,oBAAC;AAAD,CATA,AASC,IAAA;AATY,sCAAa;AAW1B;IAAA;QAEI,iBAAiB;QACT,SAAI,GAA2B,IAAI,CAAC;QACpC,sBAAiB,GAAS,KAAK,CAAC;QA4DxC,yBAAyB;IAG7B,CAAC;IA7DiB,4BAAW,GAAzB;QACI,IAAG,IAAI,CAAC,SAAS,IAAE,IAAI,EAAE;YACrB,IAAI,CAAC,SAAS,GAAC,IAAI,gBAAgB,EAAE,CAAC;YACtC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;SACzB;QACD,OAAO,IAAI,CAAC,SAAS,CAAC;IAC1B,CAAC;IACD,SAAS;IACD,+BAAI,GAAZ;QACI,IAAG,CAAC,IAAI,CAAC,IAAI,EAAE;YACX,IAAI,CAAC,QAAQ,EAAE,CAAC;SACnB;IACL,CAAC;IACD,QAAQ;IACA,mCAAQ,GAAhB;QAAA,iBAgBC;QAfG,yBAAW,CAAC,QAAQ,CAAC,WAAW,EAAC,yBAAW,CAAC,SAAS,EAAC,UAAC,KAAY,EAAE,MAAmB;YACrF,IAAG,KAAK,EAAC;gBACL,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACnB,OAAO;aACV;YACD,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;YACjC,KAAI,CAAC,IAAI,GAAC,IAAI,GAAG,EAAE,CAAC;YACpB,IAAI,IAAI,GAAC,MAAM,CAAC,IAAI,CAAC;YACrB,KAAI,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;gBAC5B,IAAI,QAAQ,GAAC,IAAI,aAAa,EAAE,CAAC;gBACjC,QAAQ,GAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACjB,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,WAAW,EAAC,QAAQ,CAAC,CAAC;aAChD;YACD,KAAI,CAAC,iBAAiB,GAAC,IAAI,CAAC;QAChC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,YAAY;IACL,6CAAkB,GAAzB;QACI,OAAO,IAAI,CAAC,iBAAiB,CAAC;IAClC,CAAC;IACD,sBAAsB;IACf,2CAAgB,GAAvB,UAAwB,EAAS;QAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IAC7B,CAAC;IACD,kBAAkB;IACX,2CAAgB,GAAvB,UAAwB,EAAS;QAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,aAAa,CAAC;IAC3C,CAAC;IACD,gBAAgB;IACT,qCAAU,GAAjB,UAAkB,EAAS;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC;IACrC,CAAC;IACD,kBAAkB;IACX,qCAAU,GAAjB,UAAkB,EAAS;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC;IACrC,CAAC;IAED,qBAAqB;IACP,kCAAiB,GAA/B;QACI,OAAO,CAAC,CAAC;IACb,CAAC;IA7Dc,0BAAS,GAAqB,IAAI,CAAC;IAkEtD,uBAAC;CAnED,AAmEC,IAAA;AAnEY,4CAAgB","file":"","sourceRoot":"/","sourcesContent":["import { LoadManager } from \"../../Loading/LoadManager\";\r\n\r\n\r\nexport class JsonStarVeins {\r\n    /**星脉ID */\r\n    public StarVeinsId:number = 0 ;\r\n    /**星脉名称 */\r\n    public StarVeinsName:number = 0 ;\r\n    /**品质 */\r\n    public Quality:number = 0 ;\r\n    /**节点数量 */\r\n    public NodeNum:number = 0 ;\r\n}\r\n\r\nexport class StarVeinsManager {\r\n    private static _instance: StarVeinsManager = null;\r\n    //把json数据转化成map数据\r\n    private data:Map<number,JsonStarVeins>=null;\r\n    private is_load_completed:boolean=false;\r\n\r\n    public static getInstance():StarVeinsManager {\r\n        if(this._instance==null) {\r\n            this._instance=new StarVeinsManager();\r\n            this._instance.init();\r\n        }\r\n        return this._instance;\r\n    }\r\n    //初始化游戏数据\r\n    private init() {\r\n        if(!this.data) {\r\n            this.loadJson();\r\n        }\r\n    }\r\n    //加载json\r\n    private loadJson() {\r\n        LoadManager.loadJson('StarVeins',LoadManager.load_mode,(error: Error, assets:cc.JsonAsset)=> {\r\n            if(error){\r\n                console.log(error);\r\n                return;\r\n            }\r\n            console.log('加载JsonStarVeins成功');\r\n            this.data=new Map();\r\n            let json=assets.json;\r\n            for(let i=0; i<json.length; i++){\r\n                let jsonData=new JsonStarVeins();\r\n                jsonData=json[i];\r\n                this.data.set(jsonData.StarVeinsId,jsonData);\r\n            }\r\n            this.is_load_completed=true;\r\n        });\r\n    }\r\n\r\n    /**加载是否完成 */\r\n    public getIsLoadCompleted(): boolean{\r\n        return this.is_load_completed;\r\n    }\r\n    /**根据id号获取Json的各种数据 */\r\n    public getJsonStarVeins(id:number):JsonStarVeins {\r\n        return this.data.get(id);\r\n    }\r\n    /**根据星脉ID获取星脉名称 */\r\n    public getStarVeinsName(id:number): number {\r\n        return this.data.get(id).StarVeinsName;\r\n    }\r\n    /**根据星脉ID获取品质 */\r\n    public getQuality(id:number): number {\r\n        return this.data.get(id).Quality;\r\n    }\r\n    /**根据星脉ID获取节点数量 */\r\n    public getNodeNum(id:number): number {\r\n        return this.data.get(id).NodeNum;\r\n    }\r\n\r\n    /** 静态方法，获取最大的 星脉ID*/\r\n    public static getMaxStarVeinsId():number {\r\n        return 0;\r\n    }\r\n\r\n    //以上格式统一，以下写每个json数据的特殊需求\r\n\r\n\r\n}\r\n"]}