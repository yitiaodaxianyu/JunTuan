{"version":3,"sources":["assets\\Scripts\\Pet\\Data\\SpiritAttribute.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { LoadManager } from \"../../Loading/LoadManager\";\r\n\r\nexport class JsonSpiritAttribute {\r\n    /**灵宠道具 */\r\n    public SpiritItem:number = 0 ;\r\n    /**灵宠种类 */\r\n    public SpiritType:number = 0 ;\r\n    /**阶段 */\r\n    public Stage:number = 0 ;\r\n    /**品质 */\r\n    public Quality:number = 0 ;\r\n    /**星级 */\r\n    public Star:number = 0 ;\r\n    /**生命值 */\r\n    public Health:number = 0 ;\r\n    /**攻击力 */\r\n    public Attack:number = 0 ;\r\n    /**防御力 */\r\n    public Defense:number = 0 ;\r\n    /**命中值 */\r\n    public Hit:number = 0 ;\r\n    /**闪避值 */\r\n    public Miss:number = 0 ;\r\n    /**暴击值 */\r\n    public Critical:number = 0 ;\r\n    /**暴击增幅 */\r\n    public ExtraCritical:number = 0 ;\r\n    /**防暴值 */\r\n    public AntiCritical:number = 0 ;\r\n    /**暴击抗性 */\r\n    public AntiExtraCritical:number = 0 ;\r\n}\r\n\r\nexport class SpiritAttributeManager {\r\n    private static _instance: SpiritAttributeManager = null;\r\n    //把json数据转化成map数据\r\n    private data:Map<number,JsonSpiritAttribute>=null;\r\n    private is_load_completed:boolean=false;\r\n\r\n    public static getInstance():SpiritAttributeManager {\r\n        if(this._instance==null) {\r\n            this._instance=new SpiritAttributeManager();\r\n            this._instance.init();\r\n        }\r\n        return this._instance;\r\n    }\r\n    //初始化游戏数据\r\n    private init() {\r\n        if(!this.data) {\r\n            this.loadJson();\r\n        }\r\n    }\r\n    //加载json\r\n    private loadJson() {\r\n        LoadManager.loadJson('SpiritAttribute',LoadManager.load_mode,(error: Error, assets:cc.JsonAsset)=> {\r\n            if(error){\r\n                console.log(error);\r\n                return;\r\n            }\r\n            console.log('加载JsonSpiritAttribute成功');\r\n            this.data=new Map();\r\n            let json=assets.json;\r\n            for(let i=0; i<json.length; i++){\r\n                let jsonData=new JsonSpiritAttribute();\r\n                jsonData=json[i];\r\n                this.data.set(jsonData.SpiritItem,jsonData);\r\n            }\r\n            this.is_load_completed=true;\r\n        });\r\n    }\r\n\r\n    /**加载是否完成 */\r\n    public getIsLoadCompleted(): boolean{\r\n        return this.is_load_completed;\r\n    }\r\n    /**根据id号获取Json的各种数据 */\r\n    public getJsonSpiritAttribute(id:number):JsonSpiritAttribute {\r\n        return this.data.get(id);\r\n    }\r\n    /**根据灵宠道具获取灵宠种类 */\r\n    public getSpiritType(id:number): number {\r\n        return this.data.get(id).SpiritType;\r\n    }\r\n    /**根据灵宠道具获取阶段 */\r\n    public getStage(id:number): number {\r\n        return this.data.get(id).Stage;\r\n    }\r\n    /**根据灵宠道具获取品质 */\r\n    public getQuality(id:number): number {\r\n        return this.data.get(id).Quality;\r\n    }\r\n    /**根据灵宠道具获取星级 */\r\n    public getStar(id:number): number {\r\n        return this.data.get(id).Star;\r\n    }\r\n    /**根据灵宠道具获取生命值 */\r\n    public getHealth(id:number): number {\r\n        return this.data.get(id).Health;\r\n    }\r\n    /**根据灵宠道具获取攻击力 */\r\n    public getAttack(id:number): number {\r\n        return this.data.get(id).Attack;\r\n    }\r\n    /**根据灵宠道具获取防御力 */\r\n    public getDefense(id:number): number {\r\n        return this.data.get(id).Defense;\r\n    }\r\n    /**根据灵宠道具获取命中值 */\r\n    public getHit(id:number): number {\r\n        return this.data.get(id).Hit;\r\n    }\r\n    /**根据灵宠道具获取闪避值 */\r\n    public getMiss(id:number): number {\r\n        return this.data.get(id).Miss;\r\n    }\r\n    /**根据灵宠道具获取暴击值 */\r\n    public getCritical(id:number): number {\r\n        return this.data.get(id).Critical;\r\n    }\r\n    /**根据灵宠道具获取暴击增幅 */\r\n    public getExtraCritical(id:number): number {\r\n        return this.data.get(id).ExtraCritical;\r\n    }\r\n    /**根据灵宠道具获取防暴值 */\r\n    public getAntiCritical(id:number): number {\r\n        return this.data.get(id).AntiCritical;\r\n    }\r\n    /**根据灵宠道具获取暴击抗性 */\r\n    public getAntiExtraCritical(id:number): number {\r\n        return this.data.get(id).AntiExtraCritical;\r\n    }\r\n\r\n    /** 静态方法，获取最大的 灵宠道具*/\r\n    public static getMaxSpiritItem():number {\r\n        return 70413;\r\n    }\r\n\r\n    //以上格式统一，以下写每个json数据的特殊需求\r\n\r\n    getTypeFirstJsonData(type:number):JsonSpiritAttribute{\r\n        let info:JsonSpiritAttribute = null\r\n        this.data.forEach((v,k)=>{\r\n            if(type == v.SpiritType && v.Stage == 1){\r\n                info = v;\r\n            }\r\n        })\r\n        return info;\r\n    }\r\n\r\n}\r\n"]}