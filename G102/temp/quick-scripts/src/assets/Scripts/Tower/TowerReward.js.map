{"version":3,"sources":["assets\\Scripts\\Tower\\TowerReward.ts"],"names":[],"mappings":";;;;;;;AAAA,2DAAuD;AACvD,sDAAqD;AACrD,iDAA4C;AAE5C;IAAA;QACI,QAAQ;QACD,UAAK,GAAU,CAAC,CAAE;QACzB,QAAQ;QACD,SAAI,GAAU,CAAC,CAAE;QACxB,UAAU;QACH,YAAO,GAAU,CAAC,CAAE;QAC3B,QAAQ;QACD,QAAG,GAAU,CAAC,CAAE;QACvB,WAAW;QACJ,iBAAY,GAAU,CAAC,CAAE;QAChC,WAAW;QACJ,aAAQ,GAAU,CAAC,CAAE;QAC5B,WAAW;QACJ,iBAAY,GAAU,CAAC,CAAE;QAChC,WAAW;QACJ,aAAQ,GAAU,CAAC,CAAE;QAC5B,WAAW;QACJ,iBAAY,GAAU,CAAC,CAAE;QAChC,WAAW;QACJ,aAAQ,GAAU,CAAC,CAAE;IAChC,CAAC;IAAD,sBAAC;AAAD,CArBA,AAqBC,IAAA;AArBY,0CAAe;AAuB5B;IAAA;QAEI,iBAAiB;QACT,SAAI,GAA6B,IAAI,CAAC;QACtC,sBAAiB,GAAS,KAAK,CAAC;IA0H5C,CAAC;IAxHiB,8BAAW,GAAzB;QACI,IAAG,IAAI,CAAC,SAAS,IAAE,IAAI,EAAE;YACrB,IAAI,CAAC,SAAS,GAAC,IAAI,kBAAkB,EAAE,CAAC;YACxC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;SACzB;QACD,OAAO,IAAI,CAAC,SAAS,CAAC;IAC1B,CAAC;IACD,SAAS;IACD,iCAAI,GAAZ;QACI,IAAG,CAAC,IAAI,CAAC,IAAI,EAAE;YACX,IAAI,CAAC,QAAQ,EAAE,CAAC;SACnB;IACL,CAAC;IACD,QAAQ;IACA,qCAAQ,GAAhB;QAAA,iBAgBC;QAfG,yBAAW,CAAC,QAAQ,CAAC,aAAa,EAAC,yBAAW,CAAC,SAAS,EAAC,UAAC,KAAY,EAAE,MAAmB;YACvF,IAAG,KAAK,EAAC;gBACL,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACnB,OAAO;aACV;YACD,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;YACnC,KAAI,CAAC,IAAI,GAAC,IAAI,GAAG,EAAE,CAAC;YACpB,IAAI,IAAI,GAAC,MAAM,CAAC,IAAI,CAAC;YACrB,KAAI,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;gBAC5B,IAAI,QAAQ,GAAC,IAAI,eAAe,EAAE,CAAC;gBACnC,QAAQ,GAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACjB,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAK,EAAC,QAAQ,CAAC,CAAC;aAC1C;YACD,KAAI,CAAC,iBAAiB,GAAC,IAAI,CAAC;QAChC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,YAAY;IACL,+CAAkB,GAAzB;QACI,OAAO,IAAI,CAAC,iBAAiB,CAAC;IAClC,CAAC;IACD,sBAAsB;IACf,+CAAkB,GAAzB,UAA0B,EAAS;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IAC7B,CAAC;IACD,cAAc;IACP,oCAAO,GAAd,UAAe,EAAS;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC;IAClC,CAAC;IACD,gBAAgB;IACT,uCAAU,GAAjB,UAAkB,EAAS;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC;IACrC,CAAC;IACD,cAAc;IACP,mCAAM,GAAb,UAAc,EAAS;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC;IACjC,CAAC;IACD,iBAAiB;IACV,4CAAe,GAAtB,UAAuB,EAAS;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,YAAY,CAAC;IAC1C,CAAC;IACD,iBAAiB;IACV,wCAAW,GAAlB,UAAmB,EAAS;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC;IACtC,CAAC;IACD,iBAAiB;IACV,4CAAe,GAAtB,UAAuB,EAAS;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,YAAY,CAAC;IAC1C,CAAC;IACD,iBAAiB;IACV,wCAAW,GAAlB,UAAmB,EAAS;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC;IACtC,CAAC;IACD,iBAAiB;IACV,4CAAe,GAAtB,UAAuB,EAAS;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,YAAY,CAAC;IAC1C,CAAC;IACD,iBAAiB;IACV,wCAAW,GAAlB,UAAmB,EAAS;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC;IACtC,CAAC;IAED,mBAAmB;IACL,8BAAW,GAAzB;QACI,OAAO,GAAG,CAAC;IACf,CAAC;IAED,yBAAyB;IAEzB,2CAAc,GAAd,UAAe,KAAY;QACvB,IAAI,aAAa,GAAC,IAAI,KAAK,EAAc,CAAC;QAC1C,IAAI,QAAQ,GAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;QAC5C,KAAI,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,IAAE,CAAC,EAAE,CAAC,EAAE,EAAC;YACnB,IAAG,QAAQ,CAAC,aAAa,GAAC,CAAC,CAAC,GAAC,CAAC,IAAI,QAAQ,CAAC,SAAS,GAAC,CAAC,CAAC,GAAC,CAAC,EAAC;gBACtD,IAAI,EAAE,GAAC,IAAI,0BAAU,EAAE,CAAC;gBACxB,EAAE,CAAC,SAAS,GAAC,QAAQ,CAAC,aAAa,GAAC,CAAC,CAAC,CAAC;gBACvC,EAAE,CAAC,UAAU,GAAC,QAAQ,CAAC,SAAS,GAAC,CAAC,CAAC,CAAC;gBACpC,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;aAC1B;SACJ;QAED,MAAM;QACN,IAAG,QAAQ,CAAC,OAAO,GAAC,CAAC,EAAC;YAClB,IAAI,EAAE,GAAC,IAAI,0BAAU,EAAE,CAAC;YACxB,EAAE,CAAC,SAAS,GAAC,mBAAM,CAAC,OAAO,CAAC;YAC5B,EAAE,CAAC,UAAU,GAAC,QAAQ,CAAC,OAAO,CAAC;YAC/B,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SAC1B;QACD,MAAM;QACN,IAAG,QAAQ,CAAC,IAAI,GAAC,CAAC,EAAC;YACf,IAAI,EAAE,GAAC,IAAI,0BAAU,EAAE,CAAC;YACxB,EAAE,CAAC,SAAS,GAAC,mBAAM,CAAC,IAAI,CAAC;YACzB,EAAE,CAAC,UAAU,GAAC,QAAQ,CAAC,IAAI,CAAC;YAC5B,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SAC1B;QACD,IAAI;QACJ,IAAG,QAAQ,CAAC,GAAG,GAAC,CAAC,EAAC;YACd,IAAI,EAAE,GAAC,IAAI,0BAAU,EAAE,CAAC;YACxB,EAAE,CAAC,SAAS,GAAC,mBAAM,CAAC,GAAG,CAAC;YACxB,EAAE,CAAC,UAAU,GAAC,QAAQ,CAAC,GAAG,CAAC;YAC3B,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SAC1B;QACD,OAAO,aAAa,CAAC;IACzB,CAAC;IA3Hc,4BAAS,GAAuB,IAAI,CAAC;IA6HxD,yBAAC;CA9HD,AA8HC,IAAA;AA9HY,gDAAkB","file":"","sourceRoot":"/","sourcesContent":["import { RewardData } from \"../JsonData/LevelJsonData\";\r\nimport { LoadManager } from \"../Loading/LoadManager\";\r\nimport { PropId } from \"../Prop/PropConfig\";\r\n\r\nexport class JsonTowerReward {\r\n    /**层数 */\r\n    public Floor:number = 0 ;\r\n    /**金币 */\r\n    public Coin:number = 0 ;\r\n    /**英雄经验 */\r\n    public HeroExp:number = 0 ;\r\n    /**钻石 */\r\n    public Gem:number = 0 ;\r\n    /**奖励道具1 */\r\n    public ItemReward_1:number = 0 ;\r\n    /**奖励数量1 */\r\n    public Reward_1:number = 0 ;\r\n    /**奖励道具2 */\r\n    public ItemReward_2:number = 0 ;\r\n    /**奖励数量2 */\r\n    public Reward_2:number = 0 ;\r\n    /**奖励道具3 */\r\n    public ItemReward_3:number = 0 ;\r\n    /**奖励数量3 */\r\n    public Reward_3:number = 0 ;\r\n}\r\n\r\nexport class TowerRewardManager {\r\n    private static _instance: TowerRewardManager = null;\r\n    //把json数据转化成map数据\r\n    private data:Map<number,JsonTowerReward>=null;\r\n    private is_load_completed:boolean=false;\r\n\r\n    public static getInstance():TowerRewardManager {\r\n        if(this._instance==null) {\r\n            this._instance=new TowerRewardManager();\r\n            this._instance.init();\r\n        }\r\n        return this._instance;\r\n    }\r\n    //初始化游戏数据\r\n    private init() {\r\n        if(!this.data) {\r\n            this.loadJson();\r\n        }\r\n    }\r\n    //加载json\r\n    private loadJson() {\r\n        LoadManager.loadJson('TowerReward',LoadManager.load_mode,(error: Error, assets:cc.JsonAsset)=> {\r\n            if(error){\r\n                console.log(error);\r\n                return;\r\n            }\r\n            console.log('加载JsonTowerReward成功');\r\n            this.data=new Map();\r\n            let json=assets.json;\r\n            for(let i=0; i<json.length; i++){\r\n                let jsonData=new JsonTowerReward();\r\n                jsonData=json[i];\r\n                this.data.set(jsonData.Floor,jsonData);\r\n            }\r\n            this.is_load_completed=true;\r\n        });\r\n    }\r\n\r\n    /**加载是否完成 */\r\n    public getIsLoadCompleted(): boolean{\r\n        return this.is_load_completed;\r\n    }\r\n    /**根据id号获取Json的各种数据 */\r\n    public getJsonTowerReward(id:number):JsonTowerReward {\r\n        return this.data.get(id);\r\n    }\r\n    /**根据层数获取金币 */\r\n    public getCoin(id:number): number {\r\n        return this.data.get(id).Coin;\r\n    }\r\n    /**根据层数获取英雄经验 */\r\n    public getHeroExp(id:number): number {\r\n        return this.data.get(id).HeroExp;\r\n    }\r\n    /**根据层数获取钻石 */\r\n    public getGem(id:number): number {\r\n        return this.data.get(id).Gem;\r\n    }\r\n    /**根据层数获取奖励道具1 */\r\n    public getItemReward_1(id:number): number {\r\n        return this.data.get(id).ItemReward_1;\r\n    }\r\n    /**根据层数获取奖励数量1 */\r\n    public getReward_1(id:number): number {\r\n        return this.data.get(id).Reward_1;\r\n    }\r\n    /**根据层数获取奖励道具2 */\r\n    public getItemReward_2(id:number): number {\r\n        return this.data.get(id).ItemReward_2;\r\n    }\r\n    /**根据层数获取奖励数量2 */\r\n    public getReward_2(id:number): number {\r\n        return this.data.get(id).Reward_2;\r\n    }\r\n    /**根据层数获取奖励道具3 */\r\n    public getItemReward_3(id:number): number {\r\n        return this.data.get(id).ItemReward_3;\r\n    }\r\n    /**根据层数获取奖励数量3 */\r\n    public getReward_3(id:number): number {\r\n        return this.data.get(id).Reward_3;\r\n    }\r\n\r\n    /** 静态方法，获取最大的 层数*/\r\n    public static getMaxFloor():number {\r\n        return 480;\r\n    }\r\n\r\n    //以上格式统一，以下写每个json数据的特殊需求\r\n\r\n    getRewardDatas(level:number):Array<RewardData>{\r\n        let allRewardData=new Array<RewardData>();\r\n        let jsonData=this.getJsonTowerReward(level);\r\n        for(let i=1; i<=3; i++){\r\n            if(jsonData['ItemReward_'+i]>0 && jsonData['Reward_'+i]>0){\r\n                let rd=new RewardData();\r\n                rd.reward_id=jsonData['ItemReward_'+i];\r\n                rd.reward_num=jsonData['Reward_'+i];\r\n                allRewardData.push(rd);\r\n            }\r\n        }\r\n        \r\n        //英雄经验\r\n        if(jsonData.HeroExp>0){\r\n            let rd=new RewardData();\r\n            rd.reward_id=PropId.HeroExp;\r\n            rd.reward_num=jsonData.HeroExp;\r\n            allRewardData.push(rd);\r\n        }\r\n        //玩家经验\r\n        if(jsonData.Coin>0){\r\n            let rd=new RewardData();\r\n            rd.reward_id=PropId.Coin;\r\n            rd.reward_num=jsonData.Coin;\r\n            allRewardData.push(rd);\r\n        }\r\n        //钻石\r\n        if(jsonData.Gem>0){\r\n            let rd=new RewardData();\r\n            rd.reward_id=PropId.Gem;\r\n            rd.reward_num=jsonData.Gem;\r\n            allRewardData.push(rd);\r\n        }   \r\n        return allRewardData;    \r\n    }\r\n    \r\n}\r\n"]}