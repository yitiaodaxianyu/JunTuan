{"version":3,"sources":["assets\\Scripts\\Hero\\Game\\BingNv\\BingNvWall.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { GameState, IsDebug } from \"../../../Constants\";\r\nimport { GameEffectId, GameEffectsManager } from \"../../../Game/GameEffectsManager\";\r\nimport SkillManager from \"../../../Game/SkillManager\";\r\nimport GameManager from \"../../../GameManager\";\r\nimport Monster from \"../../../Monster/Monster\";\r\nimport MonsterManager from \"../../../Monster/MonsterManager\";\r\nimport Wall from \"../../../Wall/Wall\";\r\nimport { WallType } from \"../../../Wall/WallConfig\";\r\nimport WallManager from \"../../../Wall/WallManager\";\r\nimport { GongJiData } from \"../../Data/HeroData\";\r\nimport { BuffData } from \"../BuffData\";\r\nimport GongJi from \"../GongJi\";\r\nimport { BuffId, BuffType, SkillType } from \"../HeroConfig\";\r\n\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class BingNvWall extends Wall {\r\n\r\n    gongji_data:GongJiData=null;\r\n\r\n    is_destroy:boolean=false;\r\n    private self_rect:cc.Rect=null;\r\n    wall_id:WallType=WallType.BingNvWall;\r\n\r\n    /**城墙持续时间，针对除了主城墙之外的城墙 */\r\n    remain_time:number=0;\r\n\r\n    init(gjData:GongJiData,pos:cc.Vec2,remainTime:number,wallId:WallType=WallType.BingNvWall)\r\n    {\r\n        gjData.hero_data.Health=gjData.hero_data.total_hp*(gjData.hero_data.getSkillValue2(SkillType.Active));\r\n        this.gongji_data=gjData;\r\n        this.node.setPosition(cc.v2(0,pos.y));\r\n        this.node.zIndex=(Math.round(8000-this.node.y*10));\r\n        this.is_destroy=false;\r\n        this.remain_time=remainTime;\r\n        this.wall_id=wallId;\r\n        this.node.getComponent(cc.Collider).enabled=false;\r\n        if(this.checkJiTui(pos)){\r\n            this.node.getComponent(cc.Collider).enabled=true;\r\n            super.initWall(this.gongji_data.hero_data,WallType.BingNvWall);\r\n            super.setWallDieListen(this.onWallDie.bind(this));\r\n            super.setDamageListen(this.onDamage.bind(this));\r\n            this.scheduleOnce(this.destroySelf,this.gongji_data.hero_data.getSkillValue1(SkillType.Active));\r\n        }\r\n    }\r\n\r\n    /*检测能被击退的敌人*/\r\n    checkJiTui(pos:cc.Vec2):boolean{        \r\n        this.self_rect=cc.rect(-cc.winSize.width/2,pos.y-120/2,cc.winSize.width,120);\r\n        super.setWallRect(this.self_rect);\r\n        //击退专用范围\r\n        let jituiRect=cc.rect(-cc.winSize.width/2,pos.y-200/2,cc.winSize.width,200);\r\n        let bnWall=MonsterManager.getInstance().getMonstersForBingNvWallRect(jituiRect);\r\n        //专武造成伤害\r\n        let exDamage=0;\r\n        let ex1=this.gongji_data.hero_data.ExclusiveWeaponSkillValue_1;\r\n        if(ex1&&ex1>0){\r\n            exDamage=ex1;\r\n        }\r\n        // if(IsDebug){\r\n        //     exDamage=100;\r\n        // }\r\n        if(bnWall.boss_ts){\r\n            //销毁\r\n            this.destroySelf();\r\n            if(exDamage>0){\r\n                let exData=cc.instantiate(this.gongji_data);\r\n                exData.skill_damage_rate=exDamage;\r\n                bnWall.boss_ts.beFlashInjured(exData);\r\n            }\r\n            return false            \r\n        }else{\r\n            //击退\r\n            let allMonsters=bnWall.back_monsters;\r\n            let jituiAct=0.15;\r\n            for(let i=0; i<allMonsters.length; i++){\r\n                let monsterTs=allMonsters[i].getComponent(Monster);\r\n                cc.tween(monsterTs.node).to(jituiAct,{y:pos.y+120/2+Math.random()*70}).start();\r\n                let buffData=new BuffData();\r\n                buffData.buff_id=BuffId.Hero_XuanYun;\r\n                buffData.buff_type=BuffType.Vertigo;\r\n                buffData.buff_value=[0];\r\n                buffData.remain_time=jituiAct+0.2;\r\n                buffData.game_effect_id=GameEffectId.xuanyun;\r\n                monsterTs.addDeBuff(buffData,this.gongji_data);\r\n                if(exDamage>0){\r\n                    let exData=cc.instantiate(this.gongji_data);\r\n                    exData.skill_damage_rate=exDamage;\r\n                    monsterTs.beFlashInjured(exData);\r\n                }\r\n            }\r\n            this.node.getComponent(sp.Skeleton).setAnimation(0,'BingNv_Skill_Start',false);\r\n            WallManager.getInstance().addWall(this.wall_id,this);\r\n            return true;\r\n        }        \r\n    }\r\n    /**城墙受到普通攻击时，反弹伤害 */\r\n    onDamage(monsterTs:Monster){\r\n        let fantanData=cc.instantiate(this.gongji_data);\r\n        fantanData.skill_damage_rate=this.gongji_data.hero_data.getSkillValue3(SkillType.Active);\r\n        monsterTs.beFlashInjured(this.gongji_data);\r\n    }\r\n\r\n    destroySelf(){\r\n        //播放动画\r\n        if(this.is_destroy){\r\n            return;\r\n        }\r\n        this.node.getComponent(cc.Collider).enabled=false;\r\n        this.is_destroy=true;\r\n        let spine=this.node.getComponent(sp.Skeleton);\r\n        spine.setAnimation(0,'BingNv_Skill_End',false);\r\n        spine.setCompleteListener(()=>{\r\n            spine.setCompleteListener(null);\r\n            GameEffectsManager.getInstance().destroyGameEffectById(GameEffectId.bing_nv_active_skill_wall,this.node);\r\n        });\r\n        WallManager.getInstance().removeWall(this.wall_id);\r\n        this.unschedule(this.destroySelf);\r\n    }\r\n\r\n    getRect():cc.Rect{\r\n        return this.self_rect;\r\n    }\r\n\r\n    onWallDie(){\r\n        this.destroySelf();\r\n    }\r\n\r\n    ////--------------------------------------碰撞开始----------------------------------------------------\r\n    onCollisionEnter(other:cc.Collider,self:cc.Collider) {\r\n        let gm=GameManager.getInstance();\r\n        let group=other.node.group;\r\n        switch(group){\r\n            case 'boss_body':{\r\n                //一碰就会碎\r\n                this.destroySelf();\r\n            }break;\r\n        }\r\n    }\r\n}\r\n"]}