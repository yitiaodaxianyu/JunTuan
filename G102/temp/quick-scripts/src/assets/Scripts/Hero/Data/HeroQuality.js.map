{"version":3,"sources":["assets\\Scripts\\Hero\\Data\\HeroQuality.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { LoadManager } from \"../../Loading/LoadManager\";\r\n\r\nexport class JsonHeroQuality {\r\n    /**星级养成ID */\r\n    public StarCultivateID:number = 0 ;\r\n    /**英雄品质 */\r\n    public Quality:number = 0 ;\r\n    /**阶段 */\r\n    public Stage:number = 0 ;\r\n    /**星级 */\r\n    public Star:number = 0 ;\r\n    /**当前阶段 */\r\n    public CurrentStage:number = 0 ;\r\n    /**消耗碎片数量 */\r\n    public CostFragment:number = 0 ;\r\n}\r\n\r\nexport class HeroQualityManager {\r\n    private static _instance: HeroQualityManager = null;\r\n    //把json数据转化成map数据\r\n    private data:Map<number,JsonHeroQuality>=null;\r\n    private is_load_completed:boolean=false;\r\n\r\n    public static getInstance():HeroQualityManager {\r\n        if(this._instance==null) {\r\n            this._instance=new HeroQualityManager();\r\n            this._instance.init();\r\n        }\r\n        return this._instance;\r\n    }\r\n    //初始化游戏数据\r\n    private init() {\r\n        if(!this.data) {\r\n            this.loadJson();\r\n        }\r\n    }\r\n    //加载json\r\n    private loadJson() {\r\n        LoadManager.loadJson('HeroQuality',LoadManager.load_mode,(error: Error, assets:cc.JsonAsset)=> {\r\n            if(error){\r\n                console.log(error);\r\n                return;\r\n            }\r\n            console.log('加载JsonHeroQuality成功');\r\n            this.data=new Map();\r\n            let json=assets.json;\r\n            for(let i=0; i<json.length; i++){\r\n                let jsonData=new JsonHeroQuality();\r\n                jsonData=json[i];\r\n                this.data.set(jsonData.StarCultivateID,jsonData);\r\n            }\r\n            this.is_load_completed=true;\r\n        });\r\n    }\r\n\r\n    /**加载是否完成 */\r\n    public getIsLoadCompleted(): boolean{\r\n        return this.is_load_completed;\r\n    }\r\n    /**根据id号获取Json的各种数据 */\r\n    public getJsonHeroQuality(id:number):JsonHeroQuality {\r\n        return this.data.get(id);\r\n    }\r\n    /**根据星级养成ID获取英雄品质 */\r\n    public getQuality(id:number): number {\r\n        return this.data.get(id).Quality;\r\n    }\r\n    /**根据星级养成ID获取阶段 */\r\n    public getStage(id:number): number {\r\n        return this.data.get(id).Stage;\r\n    }\r\n    /**根据星级养成ID获取星级 */\r\n    public getStar(id:number): number {\r\n        return this.data.get(id).Star;\r\n    }\r\n    /**根据星级养成ID获取当前阶段 */\r\n    public getCurrentStage(id:number): number {\r\n        return this.data.get(id).CurrentStage;\r\n    }\r\n    /**根据星级养成ID获取消耗碎片数量 */\r\n    public getCostFragment(id:number): number {\r\n        return this.data.get(id).CostFragment;\r\n    }\r\n\r\n    /** 静态方法，获取最大的 星级养成ID*/\r\n    public static getMaxStarCultivateID():number {\r\n        return 6029;\r\n    }\r\n\r\n    //以上格式统一，以下写每个json数据的特殊需求\r\n\r\n        /**通过英雄类型和英雄阶段获取英雄升星的消耗道具数量 */\r\n        getCostDebrisByHeroQualityAndStage(heroQuality:number,heroStage:number):number{\r\n            let info:JsonHeroQuality = null;\r\n            this.data.forEach((v,k) =>{\r\n                if(v.Quality == heroQuality && v.Stage == heroStage){\r\n                    info = v;\r\n                }\r\n            });\r\n            if(info == null) return 0;\r\n            return info.CostFragment;\r\n        }\r\n\r\n}\r\n"]}