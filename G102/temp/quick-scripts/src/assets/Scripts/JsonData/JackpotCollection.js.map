{"version":3,"sources":["assets\\Scripts\\JsonData\\JackpotCollection.ts"],"names":[],"mappings":";;;;;;;AAAA,sDAAqD;AAErD;IAAA;QACI,UAAU;QACH,cAAS,GAAU,CAAC,CAAE;QAC7B,UAAU;QACH,eAAU,GAAU,CAAC,CAAE;QAC9B,UAAU;QACH,eAAU,GAAY,EAAE,CAAE;QACjC,UAAU;QACH,aAAQ,GAAY,EAAE,CAAE;QAC/B,UAAU;QACH,WAAM,GAAY,EAAE,CAAE;IACjC,CAAC;IAAD,4BAAC;AAAD,CAXA,AAWC,IAAA;AAXY,sDAAqB;AAalC;IAAA;QAEI,iBAAiB;QACT,SAAI,GAAmC,IAAI,CAAC;QAC5C,sBAAiB,GAAS,KAAK,CAAC;IA4H5C,CAAC;IA1HiB,oCAAW,GAAzB;QACI,IAAG,IAAI,CAAC,SAAS,IAAE,IAAI,EAAE;YACrB,IAAI,CAAC,SAAS,GAAC,IAAI,wBAAwB,EAAE,CAAC;YAC9C,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;SACzB;QACD,OAAO,IAAI,CAAC,SAAS,CAAC;IAC1B,CAAC;IACD,SAAS;IACD,uCAAI,GAAZ;QACI,IAAG,CAAC,IAAI,CAAC,IAAI,EAAE;YACX,IAAI,CAAC,QAAQ,EAAE,CAAC;SACnB;IACL,CAAC;IACD,QAAQ;IACA,2CAAQ,GAAhB;QAAA,iBAgBC;QAfG,yBAAW,CAAC,QAAQ,CAAC,mBAAmB,EAAC,yBAAW,CAAC,SAAS,EAAC,UAAC,KAAY,EAAE,MAAmB;YAC7F,IAAG,KAAK,EAAC;gBACL,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACnB,OAAO;aACV;YACD,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;YACzC,KAAI,CAAC,IAAI,GAAC,IAAI,GAAG,EAAE,CAAC;YACpB,IAAI,IAAI,GAAC,MAAM,CAAC,IAAI,CAAC;YACrB,KAAI,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;gBAC5B,IAAI,QAAQ,GAAC,IAAI,qBAAqB,EAAE,CAAC;gBACzC,QAAQ,GAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACjB,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,SAAS,EAAC,QAAQ,CAAC,CAAC;aAC9C;YACD,KAAI,CAAC,iBAAiB,GAAC,IAAI,CAAC;QAChC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,YAAY;IACL,qDAAkB,GAAzB;QACI,OAAO,IAAI,CAAC,iBAAiB,CAAC;IAClC,CAAC;IACD,sBAAsB;IACf,2DAAwB,GAA/B,UAAgC,EAAS;QACrC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IAC7B,CAAC;IACD,kBAAkB;IACX,gDAAa,GAApB,UAAqB,EAAS;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC;IACxC,CAAC;IACD,kBAAkB;IACX,gDAAa,GAApB,UAAqB,EAAS;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC;IACxC,CAAC;IACD,kBAAkB;IACX,8CAAW,GAAlB,UAAmB,EAAS;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC;IACtC,CAAC;IACD,kBAAkB;IACX,4CAAS,GAAhB,UAAiB,EAAS;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC;IACpC,CAAC;IAED,qBAAqB;IACP,wCAAe,GAA7B;QACI,OAAO,OAAO,CAAC;IACnB,CAAC;IAED,yBAAyB;IACzB;;;;OAIG;IACI,qDAAkB,GAAzB,UAA0B,gBAAuB,EAAC,SAAgB;QAE9D,IAAI,IAAI,GAAC,CAAC,CAAC;QACX,IAAI,EAAE,GAAC,IAAI,CAAC,wBAAwB,CAAC,gBAAgB,CAAC,CAAC;QACvD,IAAI,WAAW,GAAC,EAAE,CAAC,UAAU,CAAC;QAC9B,IAAI,MAAM,GAAC,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC;QAC5B,eAAe;QACf,IAAG,WAAW,IAAE,CAAC,EACjB;YACI,KAAI,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,MAAM,EAAE,CAAC,EAAE,EAC1B;gBACI,IAAI,SAAS,GAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBAC3B,WAAW,IAAE,SAAS,CAAC;aAC1B;SACJ;QACD,IAAI,KAAK,GAAC,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QAC3C,IAAG,KAAK,IAAE,CAAC,CAAC,EAAC;YACT,IAAI,GAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,GAAC,WAAW,CAAC;SACrC;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,sBAAsB;IACf,qDAAkB,GAAzB,UAA0B,EAAS;QAE/B,IAAI,GAAG,GAAC,CAAC,CAAC;QACV,IAAI,EAAE,GAAC,IAAI,CAAC,wBAAwB,CAAC,EAAE,CAAC,CAAC;QACzC,QAAQ;QACR,IAAI,WAAW,GAAC,EAAE,CAAC,UAAU,CAAC;QAC9B,IAAI,MAAM,GAAC,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC;QAC5B,eAAe;QACf,IAAG,WAAW,IAAE,CAAC,EACjB;YACI,KAAI,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,MAAM,EAAE,CAAC,EAAE,EAC1B;gBACI,IAAI,SAAS,GAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBAC3B,WAAW,IAAE,SAAS,CAAC;aAC1B;SACJ;QACD,IAAI,UAAU,GAAC,IAAI,CAAC,MAAM,EAAE,GAAC,WAAW,CAAC;QACzC,IAAI,SAAS,GAAC,CAAC,CAAC;QAChB,YAAY;QACZ,KAAI,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,MAAM,EAAE,CAAC,EAAE,EAC1B;YACI,IAAI,SAAS,GAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;YAC1B,SAAS,IAAE,SAAS,CAAC;YACrB,IAAG,UAAU,GAAC,SAAS,EACvB;gBACI,GAAG,GAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;gBACrB,MAAM;aACT;SACJ;QACD,OAAO,GAAG,CAAC;IACf,CAAC;IA9Hc,kCAAS,GAA6B,IAAI,CAAC;IA+H9D,+BAAC;CAhID,AAgIC,IAAA;AAhIY,4DAAwB","file":"","sourceRoot":"/","sourcesContent":["import { LoadManager } from \"../Loading/LoadManager\";\r\n\r\nexport class JsonJackpotCollection {\r\n    /**奖池ID */\r\n    public JackpotID:number = 0 ;\r\n    /**总权重数 */\r\n    public Weight_Sum:number = 0 ;\r\n    /**掉落组列 */\r\n    public Drop_Array:number[] = [] ;\r\n    /**掉落数量 */\r\n    public Drop_Num:number[] = [] ;\r\n    /**各个权重 */\r\n    public Weight:number[] = [] ;\r\n}\r\n\r\nexport class JackpotCollectionManager {\r\n    private static _instance: JackpotCollectionManager = null;\r\n    //把json数据转化成map数据\r\n    private data:Map<number,JsonJackpotCollection>=null;\r\n    private is_load_completed:boolean=false;\r\n\r\n    public static getInstance():JackpotCollectionManager {\r\n        if(this._instance==null) {\r\n            this._instance=new JackpotCollectionManager();\r\n            this._instance.init();\r\n        }\r\n        return this._instance;\r\n    }\r\n    //初始化游戏数据\r\n    private init() {\r\n        if(!this.data) {\r\n            this.loadJson();\r\n        }\r\n    }\r\n    //加载json\r\n    private loadJson() {\r\n        LoadManager.loadJson('JackpotCollection',LoadManager.load_mode,(error: Error, assets:cc.JsonAsset)=> {\r\n            if(error){\r\n                console.log(error);\r\n                return;\r\n            }\r\n            console.log('加载JsonJackpotCollection成功');\r\n            this.data=new Map();\r\n            let json=assets.json;\r\n            for(let i=0; i<json.length; i++){\r\n                let jsonData=new JsonJackpotCollection();\r\n                jsonData=json[i];\r\n                this.data.set(jsonData.JackpotID,jsonData);\r\n            }\r\n            this.is_load_completed=true;\r\n        });\r\n    }\r\n\r\n    /**加载是否完成 */\r\n    public getIsLoadCompleted(): boolean{\r\n        return this.is_load_completed;\r\n    }\r\n    /**根据id号获取Json的各种数据 */\r\n    public getJsonJackpotCollection(id:number):JsonJackpotCollection {\r\n        return this.data.get(id);\r\n    }\r\n    /**根据奖池ID获取总权重数 */\r\n    public getWeight_Sum(id:number): number {\r\n        return this.data.get(id).Weight_Sum;\r\n    }\r\n    /**根据奖池ID获取掉落组列 */\r\n    public getDrop_Array(id:number): number[] {\r\n        return this.data.get(id).Drop_Array;\r\n    }\r\n    /**根据奖池ID获取掉落数量 */\r\n    public getDrop_Num(id:number): number[] {\r\n        return this.data.get(id).Drop_Num;\r\n    }\r\n    /**根据奖池ID获取各个权重 */\r\n    public getWeight(id:number): number[] {\r\n        return this.data.get(id).Weight;\r\n    }\r\n\r\n    /** 静态方法，获取最大的 奖池ID*/\r\n    public static getMaxJackpotID():number {\r\n        return 1010002;\r\n    }\r\n\r\n    //以上格式统一，以下写每个json数据的特殊需求\r\n    /**\r\n     * \r\n     * @param jackpotCollectID 奖池集id\r\n     * @param jackpotID 奖池id\r\n     */\r\n    public getRateByJackpotId(jackpotCollectID:number,jackpotID:number):number{\r\n\r\n        let rate=0;\r\n        let jj=this.getJsonJackpotCollection(jackpotCollectID);\r\n        let totalWeight=jj.Weight_Sum;\r\n        let arrLen=jj.Weight.length;\r\n        //如果总权重为0，就自己算算\r\n        if(totalWeight<=0)\r\n        {\r\n            for(let w=0; w<arrLen; w++)\r\n            {\r\n                let weightNum=jj.Weight[w];\r\n                totalWeight+=weightNum;\r\n            }\r\n        }\r\n        let index=jj.Drop_Array.indexOf(jackpotID);\r\n        if(index!=-1){\r\n            rate=jj.Weight[index]/totalWeight;\r\n        }\r\n        return rate;\r\n    }\r\n\r\n    /** 根据奖池集id 随机获取奖池id*/\r\n    public getJackpotIdByJCId(id:number):number\r\n    {\r\n        let jId=0;\r\n        let jj=this.getJsonJackpotCollection(id);\r\n        //根据权重随机\r\n        let totalWeight=jj.Weight_Sum;\r\n        let arrLen=jj.Weight.length;\r\n        //如果总权重为0，就自己算算\r\n        if(totalWeight<=0)\r\n        {\r\n            for(let w=0; w<arrLen; w++)\r\n            {\r\n                let weightNum=jj.Weight[w];\r\n                totalWeight+=weightNum;\r\n            }\r\n        }\r\n        let randWeight=Math.random()*totalWeight;                \r\n        let curWeight=0;\r\n        //判断权重在哪个奖品上\r\n        for(let w=0; w<arrLen; w++)\r\n        {\r\n            let weightNum=jj.Weight[w]\r\n            curWeight+=weightNum;\r\n            if(randWeight<curWeight)\r\n            {\r\n                jId=jj.Drop_Array[w];\r\n                break;\r\n            }\r\n        }\r\n        return jId;\r\n    }\r\n}\r\n"]}