{"version":3,"sources":["assets\\Scripts\\Store\\DrawCardProbability.ts"],"names":[],"mappings":";;;;;;;AAAA,sDAAqD;AAErD;IAAA;QACI,WAAW;QACJ,kBAAa,GAAU,CAAC,CAAE;QACjC,UAAU;QACH,qBAAgB,GAAU,CAAC,CAAE;QACpC,UAAU;QACH,oBAAe,GAAU,CAAC,CAAE;IACvC,CAAC;IAAD,8BAAC;AAAD,CAPA,AAOC,IAAA;AAPY,0DAAuB;AASpC;IAAA;QAEI,iBAAiB;QACT,SAAI,GAAqC,IAAI,CAAC;QAC9C,sBAAiB,GAAS,KAAK,CAAC;IAiE5C,CAAC;IA/DiB,sCAAW,GAAzB;QACI,IAAG,IAAI,CAAC,SAAS,IAAE,IAAI,EAAE;YACrB,IAAI,CAAC,SAAS,GAAC,IAAI,0BAA0B,EAAE,CAAC;YAChD,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;SACzB;QACD,OAAO,IAAI,CAAC,SAAS,CAAC;IAC1B,CAAC;IACD,SAAS;IACD,yCAAI,GAAZ;QACI,IAAG,CAAC,IAAI,CAAC,IAAI,EAAE;YACX,IAAI,CAAC,QAAQ,EAAE,CAAC;SACnB;IACL,CAAC;IACD,QAAQ;IACA,6CAAQ,GAAhB;QAAA,iBAgBC;QAfG,yBAAW,CAAC,QAAQ,CAAC,qBAAqB,EAAC,yBAAW,CAAC,SAAS,EAAC,UAAC,KAAY,EAAE,MAAmB;YAC/F,IAAG,KAAK,EAAC;gBACL,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACnB,OAAO;aACV;YACD,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;YAC3C,KAAI,CAAC,IAAI,GAAC,IAAI,GAAG,EAAE,CAAC;YACpB,IAAI,IAAI,GAAC,MAAM,CAAC,IAAI,CAAC;YACrB,KAAI,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;gBAC5B,IAAI,QAAQ,GAAC,IAAI,uBAAuB,EAAE,CAAC;gBAC3C,QAAQ,GAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACjB,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,EAAC,QAAQ,CAAC,CAAC;aAClD;YACD,KAAI,CAAC,iBAAiB,GAAC,IAAI,CAAC;QAChC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,YAAY;IACL,uDAAkB,GAAzB;QACI,OAAO,IAAI,CAAC,iBAAiB,CAAC;IAClC,CAAC;IACD,sBAAsB;IACf,+DAA0B,GAAjC,UAAkC,EAAS;QACvC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IAC7B,CAAC;IACD,mBAAmB;IACZ,wDAAmB,GAA1B,UAA2B,EAAS;QAChC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,gBAAgB,CAAC;IAC9C,CAAC;IACD,mBAAmB;IACZ,uDAAkB,GAAzB,UAA0B,EAAS;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,eAAe,CAAC;IAC7C,CAAC;IAED,sBAAsB;IACR,8CAAmB,GAAjC;QACI,OAAO,EAAE,CAAC;IACd,CAAC;IAED,yBAAyB;IAEzB,4CAAO,GAAP;QACI,IAAI,IAAI,GAAG,EAAE,CAAC;QACd,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,UAAC,CAAC,EAAC,CAAC;YAClB,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACjB,CAAC,CAAC,CAAC;QACH,OAAO,IAAI,CAAC;IAChB,CAAC;IAnEc,oCAAS,GAA+B,IAAI,CAAC;IAoEhE,iCAAC;CArED,AAqEC,IAAA;AArEY,gEAA0B","file":"","sourceRoot":"/","sourcesContent":["import { LoadManager } from \"../Loading/LoadManager\";\r\n\r\nexport class JsonDrawCardProbability {\r\n    /**概率行ID */\r\n    public ProbabilityID:number = 0 ;\r\n    /**概率文本 */\r\n    public PropbabilityText:number = 0 ;\r\n    /**概率参数 */\r\n    public PropbabilityNum:number = 0 ;\r\n}\r\n\r\nexport class DrawCardProbabilityManager {\r\n    private static _instance: DrawCardProbabilityManager = null;\r\n    //把json数据转化成map数据\r\n    private data:Map<number,JsonDrawCardProbability>=null;\r\n    private is_load_completed:boolean=false;\r\n\r\n    public static getInstance():DrawCardProbabilityManager {\r\n        if(this._instance==null) {\r\n            this._instance=new DrawCardProbabilityManager();\r\n            this._instance.init();\r\n        }\r\n        return this._instance;\r\n    }\r\n    //初始化游戏数据\r\n    private init() {\r\n        if(!this.data) {\r\n            this.loadJson();\r\n        }\r\n    }\r\n    //加载json\r\n    private loadJson() {\r\n        LoadManager.loadJson('DrawCardProbability',LoadManager.load_mode,(error: Error, assets:cc.JsonAsset)=> {\r\n            if(error){\r\n                console.log(error);\r\n                return;\r\n            }\r\n            console.log('加载JsonDrawCardProbability成功');\r\n            this.data=new Map();\r\n            let json=assets.json;\r\n            for(let i=0; i<json.length; i++){\r\n                let jsonData=new JsonDrawCardProbability();\r\n                jsonData=json[i];\r\n                this.data.set(jsonData.ProbabilityID,jsonData);\r\n            }\r\n            this.is_load_completed=true;\r\n        });\r\n    }\r\n\r\n    /**加载是否完成 */\r\n    public getIsLoadCompleted(): boolean{\r\n        return this.is_load_completed;\r\n    }\r\n    /**根据id号获取Json的各种数据 */\r\n    public getJsonDrawCardProbability(id:number):JsonDrawCardProbability {\r\n        return this.data.get(id);\r\n    }\r\n    /**根据概率行ID获取概率文本 */\r\n    public getPropbabilityText(id:number): number {\r\n        return this.data.get(id).PropbabilityText;\r\n    }\r\n    /**根据概率行ID获取概率参数 */\r\n    public getPropbabilityNum(id:number): number {\r\n        return this.data.get(id).PropbabilityNum;\r\n    }\r\n\r\n    /** 静态方法，获取最大的 概率行ID*/\r\n    public static getMaxProbabilityID():number {\r\n        return 10;\r\n    }\r\n\r\n    //以上格式统一，以下写每个json数据的特殊需求\r\n\r\n    getData():JsonDrawCardProbability[]{\r\n        let info = [];\r\n        this.data.forEach((v,k)=>{\r\n            info.push(v);\r\n        });\r\n        return info;\r\n    }\r\n}\r\n"]}