{"version":3,"sources":["assets\\Scripts\\Maze\\Data\\MazeRoad.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { LoadManager } from \"../../Loading/LoadManager\";\r\n\r\n\r\nexport class JsonMazeRoad {\r\n    /**ID */\r\n    public rId:number = 0 ;\r\n    /**第2列 */\r\n    public c1:number = 0 ;\r\n    /**第3列 */\r\n    public c2:number = 0 ;\r\n    /**第4列 */\r\n    public c3:number = 0 ;\r\n}\r\n\r\nexport class MazeRoadManager {\r\n    private static _instance: MazeRoadManager = null;\r\n    //把json数据转化成map数据\r\n    private data:Map<number,JsonMazeRoad>=null;\r\n    private is_load_completed:boolean=false;\r\n\r\n    public static getInstance():MazeRoadManager {\r\n        if(this._instance==null) {\r\n            this._instance=new MazeRoadManager();\r\n            this._instance.init();\r\n        }\r\n        return this._instance;\r\n    }\r\n    //初始化游戏数据\r\n    private init() {\r\n        if(!this.data) {\r\n            this.loadJson();\r\n        }\r\n    }\r\n    //加载json\r\n    private loadJson() {\r\n        LoadManager.loadJson('MazeRoad',LoadManager.load_mode,(error: Error, assets:cc.JsonAsset)=> {\r\n            if(error){\r\n                console.log(error);\r\n                return;\r\n            }\r\n            console.log('加载JsonMazeRoad成功');\r\n            this.data=new Map();\r\n            let json=assets.json;\r\n            for(let i=0; i<json.length; i++){\r\n                let jsonData=new JsonMazeRoad();\r\n                jsonData=json[i];\r\n                this.data.set(jsonData.rId,jsonData);\r\n            }\r\n            this.is_load_completed=true;\r\n        });\r\n    }\r\n\r\n    /**加载是否完成 */\r\n    public getIsLoadCompleted(): boolean{\r\n        return this.is_load_completed;\r\n    }\r\n    /**根据id号获取Json的各种数据 */\r\n    public getJsonMazeRoad(id:number):JsonMazeRoad {\r\n        return this.data.get(id);\r\n    }\r\n    /**根据ID获取第2列 */\r\n    public getc1(id:number): number {\r\n        return this.data.get(id).c1;\r\n    }\r\n    /**根据ID获取第3列 */\r\n    public getc2(id:number): number {\r\n        return this.data.get(id).c2;\r\n    }\r\n    /**根据ID获取第4列 */\r\n    public getc3(id:number): number {\r\n        return this.data.get(id).c3;\r\n    }\r\n\r\n    /** 静态方法，获取最大的 ID*/\r\n    public static getMaxrId():number {\r\n        return 1;\r\n    }\r\n\r\n    //以上格式统一，以下写每个json数据的特殊需求\r\n    public getMazeRoad() :Array<Array<number>>{\r\n        let arr =new Array<Array<number>>();\r\n        let len=this.data.size;\r\n        for(let r=1; r<=len; r++){\r\n            let jsonData=this.data.get(r)\r\n            let nums=new Array();\r\n            for(let i=1; i<=3; i++){\r\n                nums.push(jsonData[\"c\"+i]);\r\n            }\r\n            arr.push(nums);\r\n        }\r\n        cc.log(arr);\r\n        return arr;\r\n    }\r\n\r\n}\r\n"]}