{"version":3,"sources":["assets\\Scripts\\Turntable\\PublicMethods.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["const {ccclass, property} = cc._decorator;\r\n\r\n/**\r\n * Predefined variables\r\n * Name = NewComponent\r\n * DateTime = Thu Dec 23 2021 14:07:24 GMT+0800 (中国标准时间)\r\n * Author = ZQYZ\r\n * FileBasename = NewComponent.ts\r\n * FileBasenameNoExtension = NewComponent\r\n * URL = db://assets/script/WZ/NewComponent.ts\r\n * ManualUrl = https://docs.cocos.com/creator/3.3/manual/zh/\r\n *\r\n */\r\n @ccclass\r\n export default class PublicMethods extends cc.Component {\r\n\r\n        public static timeconversions(currenttime){//时间转换(把秒换算成分和秒(比如300秒转换成05:00))\r\n            let currenttimeint=currenttime;\r\n            let day=currenttimeint/24/3600\r\n            day=Math.floor(day)\r\n            let hour=currenttimeint/3600%24;\r\n            hour=Math.floor(hour)\r\n            let minutes=(currenttimeint%3600)/60;\r\n            let seconds=currenttimeint%60;\r\n            minutes=Math.floor(minutes)\r\n\r\n\r\n            let daystr\r\n            if(day<10){\r\n                daystr='0'+day;\r\n            }\r\n            else{\r\n                daystr=day;\r\n            }\r\n\r\n            let hourstr\r\n            if(hour<10){\r\n                hourstr='0'+hour;\r\n            }\r\n            else{\r\n                hourstr=hour;\r\n            }\r\n\r\n            let minutesstr;\r\n            if(minutes<10){\r\n                minutesstr='0'+minutes;\r\n            }\r\n            else{\r\n                minutesstr=minutes;\r\n            }\r\n            let secondsstr;\r\n            if(seconds<10){\r\n                secondsstr='0'+seconds;\r\n            }\r\n            else{\r\n                secondsstr=seconds;\r\n            }\r\n        \r\n            return hourstr+':'+minutesstr+':'+secondsstr;\r\n        }\r\n        public static timeconversion(currenttime){//时间转换(把秒换算成分和秒(比如300秒转换成05:00))\r\n            let currenttimeint=currenttime;\r\n            let day=currenttimeint/24/3600\r\n            day=Math.floor(day)\r\n            let hour=currenttimeint/3600%24;\r\n            hour=Math.floor(hour)\r\n            let minutes=(currenttimeint%3600)/60;\r\n            let seconds=currenttimeint%60;\r\n            minutes=Math.floor(minutes)\r\n\r\n\r\n            let daystr\r\n            if(day<10){\r\n                daystr='0'+day;\r\n            }\r\n            else{\r\n                daystr=day;\r\n            }\r\n\r\n            let hourstr\r\n            if(hour<10){\r\n                hourstr='0'+hour;\r\n            }\r\n            else{\r\n                hourstr=hour;\r\n            }\r\n\r\n            let minutesstr;\r\n            if(minutes<10){\r\n                minutesstr='0'+minutes;\r\n            }\r\n            else{\r\n                minutesstr=minutes;\r\n            }\r\n            let secondsstr;\r\n            if(seconds<10){\r\n                secondsstr='0'+seconds;\r\n            }\r\n            else{\r\n                secondsstr=seconds;\r\n            }\r\n           \r\n            return daystr+':'+hourstr+':'+minutesstr+':'+secondsstr;\r\n        }\r\n        //保存当前时间\r\n        public static setCurrentTime(){//保存当前时间(单位秒)\r\n            PublicMethods.setValueInLocal('LastTime',PublicMethods.getCurrentLocalTime());\r\n        }\r\n        public static getLastTime(){//得到上一次保存的时间(单位秒)\r\n            let time=PublicMethods.getValueWithLocal('LastTime',PublicMethods.getCurrentLocalTime());\r\n            return Number(time);\r\n        }\r\n        public static getCurrentLocalTime(){//得到本地时间并且转换成秒\r\n            let a = Date.now();\r\n            let b=a/1000;\r\n            return b;\r\n        }\r\n        /////////////////\r\n        ///////存储本地数据\r\n        public static setValueInLocal(key, value) {//数据存储到本地\r\n            try {\r\n                cc.sys.localStorage.setItem(key, String(value));\r\n            }\r\n            catch (err) {\r\n                console.log('---------------------- 卧槽，存文件的时候炸裂了！')\r\n            }\r\n        }\r\n        //读取本地数据\r\n        public static getValueWithLocal(key, defaultValue) {\r\n            var value = cc.sys.localStorage.getItem(key);\r\n            if (!value) {\r\n                return defaultValue;\r\n            }\r\n            return value;\r\n        }\r\n}\r\n\r\n/**\r\n * [1] Class member could be defined like this.\r\n * [2] Use `property` decorator if your want the member to be serializable.\r\n * [3] Your initialization goes here.\r\n * [4] Your update function goes here.\r\n *\r\n * Learn more about scripting: https://docs.cocos.com/creator/3.3/manual/zh/scripting/\r\n * Learn more about CCClass: https://docs.cocos.com/creator/3.3/manual/zh/scripting/ccclass.html\r\n * Learn more about life-cycle callbacks: https://docs.cocos.com/creator/3.3/manual/zh/scripting/life-cycle-callbacks.html\r\n */\r\n"]}