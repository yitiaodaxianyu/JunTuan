{"version":3,"sources":["assets\\Scripts\\Task\\Data\\TaskInformation.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { AccessName, HttpManager } from \"../.././NetWork/HttpManager\";\r\nimport { LevelManager } from \"../../Level/LevelManager\";\r\nimport { LoadManager } from \"../../Loading/LoadManager\";\r\nimport { StorageKey } from \"../../Storage/StorageConfig\";\r\nimport { TheStorageManager } from \"../../Storage/StorageManager\";\r\nimport MyTool from \"../../Tools/MyTool\";\r\nimport UserData from \"../../UserData\";\r\nimport { UserInfo } from \"../../UserInfo/UserInfo\";\r\n\r\nexport class JsonTaskInformation {\r\n    /**任务ID */\r\n    public TaskID:number = 0 ;\r\n    /**任务类型 */\r\n    public TaskType:number = 0 ;\r\n    /**解锁关卡 */\r\n    public Unlocklevel:number = 0 ;\r\n    /**任务描述文本 */\r\n    public TaskDescription:number = 0 ;\r\n    /**任务参数 */\r\n    public TaskParameters:number = 0 ;\r\n    /**奖励道具ID */\r\n    public RewardPropID:number = 0 ;\r\n    /**奖励积分 */\r\n    public RewardPropNum:number = 0 ;\r\n    /**权重 */\r\n    public weights:number = 0 ;\r\n}\r\n\r\nexport class TaskInformationManager {\r\n    private static _instance: TaskInformationManager = null;\r\n    //把json数据转化成map数据\r\n    private data:Map<number,JsonTaskInformation>=null;\r\n    private is_load_completed:boolean=false;\r\n\r\n    public static getInstance():TaskInformationManager {\r\n        if(this._instance==null) {\r\n            this._instance=new TaskInformationManager();\r\n            this._instance.init();\r\n        }\r\n        return this._instance;\r\n    }\r\n    //初始化游戏数据\r\n    private init() {\r\n        if(!this.data) {\r\n            this.loadJson();\r\n        }\r\n    }\r\n    //加载json\r\n    private loadJson() {\r\n        LoadManager.loadJson('TaskInformation',LoadManager.load_mode,(error: Error, assets:cc.JsonAsset)=> {\r\n            if(error){\r\n                console.log(error);\r\n                return;\r\n            }\r\n            console.log('加载JsonTaskInformation成功');\r\n            this.data=new Map();\r\n            let json=assets.json;\r\n            for(let i=0; i<json.length; i++){\r\n                let jsonData=new JsonTaskInformation();\r\n                jsonData=json[i];\r\n                this.data.set(jsonData.TaskID,jsonData);\r\n            }\r\n            this.is_load_completed=true;\r\n        });\r\n    }\r\n\r\n    /**加载是否完成 */\r\n    public getIsLoadCompleted(): boolean{\r\n        return this.is_load_completed;\r\n    }\r\n    /**根据id号获取Json的各种数据 */\r\n    public getJsonTaskInformation(id:number):JsonTaskInformation {\r\n        return this.data.get(id);\r\n    }\r\n    /**根据任务ID获取任务类型 */\r\n    public getTaskType(id:number): number {\r\n        return this.data.get(id).TaskType;\r\n    }\r\n    /**根据任务ID获取解锁关卡 */\r\n    public getUnlocklevel(id:number): number {\r\n        return this.data.get(id).Unlocklevel;\r\n    }\r\n    /**根据任务ID获取任务描述文本 */\r\n    public getTaskDescription(id:number): number {\r\n        return this.data.get(id).TaskDescription;\r\n    }\r\n    /**根据任务ID获取任务参数 */\r\n    public getTaskParameters(id:number): number {\r\n        return this.data.get(id).TaskParameters;\r\n    }\r\n    /**根据任务ID获取奖励道具ID */\r\n    public getRewardPropID(id:number): number {\r\n        return this.data.get(id).RewardPropID;\r\n    }\r\n    /**根据任务ID获取奖励积分 */\r\n    public getRewardPropNum(id:number): number {\r\n        return this.data.get(id).RewardPropNum;\r\n    }\r\n    /**根据任务ID获取权重 */\r\n    public getweights(id:number): number {\r\n        return this.data.get(id).weights;\r\n    }\r\n\r\n    /** 静态方法，获取最大的 任务ID*/\r\n    public static getMaxTaskID():number {\r\n        return 44004;\r\n    }\r\n\r\n    //以上格式统一，以下写每个json数据的特殊需求\r\n\r\n    // 根据通过关卡拿到对应的每日任务列表\r\n    getUnlockJsonData():JsonTaskInformation[]{\r\n        let info = [];\r\n        let nowLevel = LevelManager.getInstance().finish_level;\r\n        this.data.forEach((v,k)=>{\r\n            if(v.Unlocklevel <= nowLevel){\r\n                info.push(v);\r\n            }\r\n        });\r\n        return info;\r\n    }\r\n\r\n    // 获取当日的任务列表\r\n    getDailyTaskData():JsonTaskInformation[]{\r\n        let info = [];\r\n        // if(TheStorageManager.getInstance().getNumber(StorageKey.TaskId + 0,0) == 0){\r\n        if(UserInfo.getInstance().dailyTaskList.length == 0){\r\n            let weight:number[] = [];\r\n            let dataList = this.getUnlockJsonData();\r\n            for(let i = 0;i<dataList.length;i++){\r\n                weight.push(dataList[i].weights);\r\n            }\r\n            let result = MyTool.getWeightIndexs(weight,12);\r\n            for(let i = 0;i<result.length;i++){\r\n                info.push(dataList[result[i]]);\r\n                // 重置每日任务id\r\n                TheStorageManager.getInstance().setItem(StorageKey.TaskId + i,dataList[result[i]].TaskID);\r\n                // 重置每日任务状态\r\n                TheStorageManager.getInstance().setItem(StorageKey.TaskState + dataList[result[i]].TaskID,0);\r\n                // 重置每日任务数据\r\n                TheStorageManager.getInstance().setItem(StorageKey.TaskNum + dataList[result[i]].TaskID,0);\r\n                // 上报新增的每日任务信息\r\n                this.reportDailyTask(dataList[result[i]].TaskID);\r\n            }\r\n        }else{\r\n            for(let i = 0;i<12;i++){\r\n                info.push(this.getJsonTaskInformation(TheStorageManager.getInstance().getNumber(StorageKey.TaskId + i)));\r\n            }\r\n        }\r\n        return info;\r\n    }\r\n\r\n    reportDailyTask(id:number){\r\n        HttpManager.post(AccessName.saveGameAchievementTask,this.getTaskInfoJsonString(id));\r\n    }\r\n    // 获取每日任务的上报json数据\r\n    private getTaskInfoJsonString(id:number):string{\r\n        let uid=UserData.getInstance().getUserID();\r\n        let time = UserInfo.getInstance().getNowDay();\r\n        return JSON.stringify({\r\n            uid:uid,\r\n            today:time,\r\n            dimension:1,\r\n            taskId:id,\r\n            status:0,\r\n            emit:0,\r\n        });\r\n    }\r\n\r\n}\r\n"]}