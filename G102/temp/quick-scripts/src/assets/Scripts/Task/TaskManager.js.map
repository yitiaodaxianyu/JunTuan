{"version":3,"sources":["assets\\Scripts\\Task\\TaskManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["\r\nimport { JsonTaskInformation, TaskInformationManager } from \"./Data/TaskInformation\";\r\nimport { JsonThreadTaskInformation, ThreadTaskInformationManager } from \"./Data/ThreadTaskInformation\";\r\nimport { LevelManager } from \"../Level/LevelManager\";\r\nimport TowerManager from \"../Tower/TowerManager\";\r\nimport { TaskItem,TaskState } from \"./TaskEnum\";\r\nimport { StorageKey } from \"../Storage/StorageConfig\";\r\nimport { TheStorageManager } from \"../Storage/StorageManager\";\r\nimport { AchievenmentTaskManager, JsonAchievenmentTask } from \"./Data/AchievenmentTask\";\r\nimport { EventManager, RedEventString, RedEventType } from \"../Tools/EventManager\";\r\nimport { AccumulatedInformationManager } from \"./Data/AccumulatedInformation\";\r\nimport { HttpManager, AccessName } from \".././NetWork/HttpManager\";\r\nimport { UserInfo } from \"../UserInfo/UserInfo\";\r\nimport UserData from \"../UserData\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class TaskManager {\r\n\r\n    // 日常任务数据\r\n    private daily_task_list:JsonTaskInformation[] = null;\r\n    // 主线任务数据\r\n    private main_task_data:JsonThreadTaskInformation = null;\r\n    // 成就任务数据\r\n    private achievement_task_list:JsonAchievenmentTask[] = null;\r\n\r\n    private static _instance: TaskManager = null;\r\n    public static getInstance():TaskManager\r\n    {\r\n        if(this._instance==null)\r\n        {\r\n            this._instance=new TaskManager();\r\n            this._instance.init();\r\n        }\r\n        return this._instance;\r\n    }\r\n\r\n    private init()\r\n    {\r\n        // 初始化日常任务\r\n        this.daily_task_list = TaskInformationManager.getInstance().getDailyTaskData();\r\n        // 初始化主线任务\r\n        this.main_task_data = ThreadTaskInformationManager.getInstance().getMainTaskData();\r\n        // 初始化成就任务\r\n        this.achievement_task_list = AchievenmentTaskManager.getInstance().getAchievenmentTaskData();\r\n\r\n        this.daily_task_list.forEach((v,k)=>{\r\n            if(v!= null){\r\n                this.checkTask(v.TaskID);\r\n            }\r\n        });\r\n        this.achievement_task_list.forEach((v,k)=>{\r\n            if(v != null){\r\n                this.checkTask(v.TaskID);\r\n            }\r\n        })\r\n    }\r\n\r\n    getDailyTaskIsCanGet():boolean{\r\n        // 初始化日常任务\r\n        let list =  this.daily_task_list;\r\n        for(let i=0; i<list.length; i++){\r\n            let num = TheStorageManager.getInstance().getNumber(StorageKey.TaskState + list[i].TaskID,0);\r\n            if(num==1){\r\n                return true\r\n            }\r\n        }\r\n        let weekActivityNum = TheStorageManager.getInstance().getNumber(StorageKey.TaskWeekActivityNum, 0);\r\n        let dailyActivityNum = TheStorageManager.getInstance().getNumber(StorageKey.TaskDailyActivityNum, 0);\r\n        // 处理累计积分奖励\r\n        let weekAccumulateData = AccumulatedInformationManager.getInstance().getRewardByTaskType(2);\r\n        let dailyAccumulateData = AccumulatedInformationManager.getInstance().getRewardByTaskType(1);\r\n        let isCan=false;        \r\n        weekAccumulateData.forEach((v, k) => {\r\n            if (isCan==false && weekActivityNum >= v.AccumulatedPoints\r\n                && TheStorageManager.getInstance().getNumber(StorageKey.TaskWeeklyActivityState + v.AccumulatedPoints, 0) == 0) {\r\n                    isCan=true;\r\n                }\r\n        });\r\n        if(isCan==false){\r\n            dailyAccumulateData.forEach((v, k) => {\r\n                if (isCan==false && dailyActivityNum >= v.AccumulatedPoints\r\n                    && TheStorageManager.getInstance().getNumber(StorageKey.TaskDailyActivityState + v.AccumulatedPoints, 0) == 0) {\r\n                        isCan=true;\r\n                    }\r\n            });\r\n        }\r\n        \r\n        return isCan;\r\n    }\r\n\r\n    getMainTaskIsCanGet():boolean{\r\n        // 初始化日常任务\r\n        let num = TheStorageManager.getInstance().getNumber(StorageKey.TaskState + this.main_task_data.ThreadTaskID,0);\r\n        return num==1;\r\n    }\r\n\r\n    getAchievenmentTaskIsCanGet():boolean{\r\n        let list =  this.achievement_task_list;\r\n        for(let i=0; i<list.length; i++){\r\n            if(list[i] == null) continue;\r\n            let num = TheStorageManager.getInstance().getNumber(StorageKey.TaskState + list[i].TaskID,0);\r\n            if(num==1){\r\n                return true\r\n            }\r\n        }\r\n        return false\r\n    }\r\n\r\n    // 获取日常任务列表\r\n    getDailyTaskList():JsonTaskInformation[]{\r\n        return this.daily_task_list;\r\n    }\r\n    // 获取主线任务列表\r\n    getMainTaskData():JsonThreadTaskInformation{\r\n        return this.main_task_data;\r\n    }\r\n    // 获取成就任务\r\n    getAchievementTaskData(){\r\n        return this.achievement_task_list;\r\n    }\r\n\r\n    /**\r\n     * 触发任务目标\r\n     * 这里的事件触发是根据任务枚举进行触发的，\r\n     * 这意味着所有任务即使出现或者未出现都会被触发到。\r\n     * 在日常任务中我做了处理，当天刷的任务会对数据进行清空\r\n     * @param taskItem 任务Id\r\n     */\r\n\r\n    emitTask(taskItem:TaskItem){\r\n        if(taskItem< 100000){\r\n            // 日常\r\n            let num = TheStorageManager.getInstance().getNumber(StorageKey.TaskNum + taskItem,0);\r\n            num++;\r\n            TheStorageManager.getInstance().setItem(StorageKey.TaskNum + taskItem,num);\r\n            HttpManager.post(AccessName.changeGameAchievementTask,this.getChangeDailyTaskInfoEmitJsonString(taskItem,num));\r\n            if(num >= TaskInformationManager.getInstance().getJsonTaskInformation(taskItem).TaskParameters\r\n                && TheStorageManager.getInstance().getNumber(StorageKey.TaskState + taskItem,0) == 0){\r\n                // 将任务状态设置为可领取\r\n                TheStorageManager.getInstance().setItem(StorageKey.TaskState + taskItem,1);\r\n                HttpManager.post(AccessName.changeGameAchievementTask,this.getChangeDailyTaskInfoStatusJsonString(taskItem,1));\r\n            }\r\n            EventManager.postRedEvent(RedEventString.RED_CHECK,RedEventType.Btn_Task_Daily);\r\n        }else if(taskItem< 1000000){\r\n            // 成就\r\n            let type = Math.floor(taskItem / 100000);\r\n            // let id = type * 100000 + 1;\r\n            let info = AchievenmentTaskManager.getInstance().getAchievenmentTaskDataByTypeAndIndex(type,TheStorageManager.getInstance().getNumber(StorageKey.TaskAchievementIndex + type,0) + 1);\r\n            if(info == null) return;\r\n            let num = TheStorageManager.getInstance().getNumber(StorageKey.TaskAchievementNum + info.AchievenmentTaskType,0);\r\n            num++;\r\n            TheStorageManager.getInstance().setItem(StorageKey.TaskAchievementNum + info.AchievenmentTaskType,num);\r\n            HttpManager.post(AccessName.changeGameAchievementTask,this.getChangeAchievementTaskInfoEmitJsonString(type,num));\r\n            if(num >= info.TaskParameters\r\n                && TheStorageManager.getInstance().getNumber(StorageKey.TaskState + info.TaskID,0) == 0){\r\n                // 将任务状态设置为可领取\r\n                TheStorageManager.getInstance().setItem(StorageKey.TaskState + info.TaskID,1);\r\n                HttpManager.post(AccessName.changeGameAchievementTask,this.getChangeAchievementTaskInfoStatusJsonString(type,1));\r\n            }\r\n            EventManager.postRedEvent(RedEventString.RED_CHECK,RedEventType.Btn_Task_Achievenment);\r\n        }else{\r\n            // 主线\r\n            let type = Math.floor(taskItem / 10000000);\r\n            // let id = type * 1000000 + TheStorageManager.getInstance().getNumber(StorageKey.TaskMainIndex + type,0) + 1;\r\n            let info = ThreadTaskInformationManager.getInstance().getMainTaskDataByTypeAndIndex(type,TheStorageManager.getInstance().getNumber(StorageKey.TaskMainIndex + type,0) + 1);\r\n            if(info == null) return;\r\n            let num = TheStorageManager.getInstance().getNumber(StorageKey.TaskMainNum + info.TaskType,0);\r\n            num++;\r\n            TheStorageManager.getInstance().setItem(StorageKey.TaskMainNum + info.TaskType,num);\r\n            HttpManager.post(AccessName.changeGameAchievementTask,this.getChangeMainTaskInfoEmitJsonString(info.TaskType,num));\r\n            if(num >= info.TaskParameters\r\n                && TheStorageManager.getInstance().getNumber(StorageKey.TaskState + info.ThreadTaskID,0) == 0){\r\n                // 将任务状态设置为可领取\r\n                TheStorageManager.getInstance().setItem(StorageKey.TaskState + info.ThreadTaskID,1);\r\n                HttpManager.post(AccessName.changeGameAchievementTask,this.getChangeMainTaskInfoStageJsonString(info.TaskType,1));\r\n            } \r\n        }\r\n    }\r\n    /**获取到对应任务节点的当前进度 */\r\n    getTaskNowProgress(taskItem:TaskItem):number{\r\n        let nowNum = 0;\r\n        if(taskItem< 100000){\r\n            // 日常\r\n        }else if(taskItem< 1000000){\r\n            // 成就\r\n            let type = Math.floor(taskItem / 100000);\r\n            // let id = type * 100000 + TheStorageManager.getInstance().getNumber(StorageKey.TaskAchievementIndex + type,0) + 1;\r\n            // let info = AchievenmentTaskManager.getInstance().getJsonAchievenmentTask(id);\r\n            // if(info == null) return nowNum;\r\n            nowNum = TheStorageManager.getInstance().getNumber(StorageKey.TaskAchievementNum + type,0);\r\n        }else{\r\n            // 主线\r\n            let type = Math.floor(taskItem / 10000000);\r\n            // let id = type * 1000000 + TheStorageManager.getInstance().getNumber(StorageKey.TaskMainIndex + type,0) + 1;\r\n            // let info = ThreadTaskInformationManager.getInstance().getJsonThreadTaskInformation(id);\r\n            // let info = ThreadTaskInformationManager.getInstance().getMainTaskDataByTypeAndIndex(type,TheStorageManager.getInstance().getNumber(StorageKey.TaskMainIndex + type,0) + 1);\r\n            // if(info == null) return nowNum;\r\n            nowNum = TheStorageManager.getInstance().getNumber(StorageKey.TaskMainNum + type,0);\r\n        }\r\n        return nowNum\r\n    }\r\n    \r\n    overTask(taskItem:TaskItem){\r\n        if(taskItem< 100000){\r\n            // 日常\r\n            TheStorageManager.getInstance().setItem(StorageKey.TaskState + taskItem,2);\r\n            HttpManager.post(AccessName.changeGameAchievementTask,this.getChangeDailyTaskInfoStatusJsonString(taskItem,2));\r\n            let info = TaskInformationManager.getInstance().getJsonTaskInformation(taskItem);\r\n            let num1 = TheStorageManager.getInstance().getNumber(StorageKey.TaskDailyActivityNum,0);\r\n            let num2 = TheStorageManager.getInstance().getNumber(StorageKey.TaskWeekActivityNum,0);\r\n            let num3 = TheStorageManager.getInstance().getNumber(StorageKey.AllActivityNum,0);\r\n            num1 += info.RewardPropNum;\r\n            num2 += info.RewardPropNum;\r\n            num3 += info.RewardPropNum;\r\n            TheStorageManager.getInstance().setItem(StorageKey.TaskDailyActivityNum,num1);\r\n            TheStorageManager.getInstance().setItem(StorageKey.TaskWeekActivityNum,num2);\r\n            TheStorageManager.getInstance().setItem(StorageKey.AllActivityNum,num3);\r\n            this.emitTask(TaskItem.完成X次每日任务);\r\n            HttpManager.post(AccessName.saveGameTask,UserInfo.getInstance().getSaveGameTaskJsonString(num1,8));\r\n            HttpManager.post(AccessName.saveGameTask,UserInfo.getInstance().getSaveGameTaskJsonString(num2,9));\r\n        }else  if(taskItem< 1000000){\r\n            // 成就\r\n            TheStorageManager.getInstance().setItem(StorageKey.TaskState + taskItem,2);\r\n            let info = AchievenmentTaskManager.getInstance().getJsonAchievenmentTask(taskItem);\r\n            let index = TheStorageManager.getInstance().getNumber(StorageKey.TaskAchievementIndex + info.AchievenmentTaskType,0);\r\n            index++;\r\n            TheStorageManager.getInstance().setItem(StorageKey.TaskAchievementIndex + info.AchievenmentTaskType,index);\r\n            HttpManager.post(AccessName.changeGameAchievementTask,this.getChangeAchievementTaskInfoStageJsonString(info.AchievenmentTaskType,index))\r\n            HttpManager.post(AccessName.changeGameAchievementTask,this.getChangeAchievementTaskInfoStatusJsonString(info.AchievenmentTaskType,0));\r\n            // 初始化成就任务\r\n            this.achievement_task_list = AchievenmentTaskManager.getInstance().getAchievenmentTaskData();\r\n            this.emitTask(TaskItem.完成X次成就任务);\r\n        }else{\r\n            // 主线\r\n            TheStorageManager.getInstance().setItem(StorageKey.TaskState + taskItem,2);\r\n            let num = TheStorageManager.getInstance().getNumber(StorageKey.TaskMainShowIndex,0);\r\n            num++;\r\n            TheStorageManager.getInstance().setItem(StorageKey.TaskMainShowIndex,num);\r\n            // 刷新任务数据\r\n            let info = ThreadTaskInformationManager.getInstance().getJsonThreadTaskInformation(taskItem);\r\n            let index = TheStorageManager.getInstance().getNumber(StorageKey.TaskMainIndex + info.TaskType,0);\r\n            HttpManager.post(AccessName.changeGameAchievementTask,this.getChangeMainTaskInfoProgressJsonString(num));\r\n            index++;\r\n            TheStorageManager.getInstance().setItem(StorageKey.TaskMainIndex + info.TaskType,index);\r\n            HttpManager.post(AccessName.changeGameAchievementTask,this.getChangeMainTaskInfoStageJsonString(info.TaskType,index));\r\n            HttpManager.post(AccessName.changeGameAchievementTask,this.getChangeMainTaskInfoStatusJsonString(info.TaskType,0));\r\n            // 初始化主线任务\r\n            this.main_task_data = ThreadTaskInformationManager.getInstance().getMainTaskData();\r\n        }\r\n        this.checkTask(taskItem);\r\n    }\r\n\r\n    checkTask(taskItem:TaskItem){\r\n        if(taskItem< 100000){\r\n            // 日常\r\n            let num = TheStorageManager.getInstance().getNumber(StorageKey.TaskNum + taskItem,0);\r\n            if(num >= TaskInformationManager.getInstance().getJsonTaskInformation(taskItem).TaskParameters\r\n                && TheStorageManager.getInstance().getNumber(StorageKey.TaskState + taskItem,0) == 0){\r\n                // 将任务状态设置为可领取\r\n                TheStorageManager.getInstance().setItem(StorageKey.TaskState + taskItem,1);\r\n                HttpManager.post(AccessName.changeGameAchievementTask,this.getChangeDailyTaskInfoStatusJsonString(taskItem,1));\r\n            }\r\n        }else  if(taskItem<1000000){\r\n            // 成就\r\n            let info = AchievenmentTaskManager.getInstance().getJsonAchievenmentTask(taskItem);\r\n            let nowInfo = AchievenmentTaskManager.getInstance().getNowAchievenmentTaskDataByType(info.AchievenmentTaskType);\r\n            if(nowInfo == null)\r\n                return\r\n            let num = TheStorageManager.getInstance().getNumber(StorageKey.TaskAchievementNum + info.AchievenmentTaskType,0);\r\n            if(num >= nowInfo.TaskParameters\r\n                && TheStorageManager.getInstance().getNumber(StorageKey.TaskState + nowInfo.TaskID,0) == 0){\r\n                // 将任务状态设置为可领取\r\n                TheStorageManager.getInstance().setItem(StorageKey.TaskState + nowInfo.TaskID,1);\r\n                HttpManager.post(AccessName.changeGameAchievementTask,this.getChangeAchievementTaskInfoStatusJsonString(info.AchievenmentTaskType,1));\r\n            }\r\n        }else{\r\n            // 主线\r\n            if(this.main_task_data == null) return;\r\n            let nowNum = TheStorageManager.getInstance().getNumber(StorageKey.TaskMainNum + this.main_task_data.TaskType,0);\r\n            if(nowNum >= this.main_task_data.TaskParameters\r\n                && TheStorageManager.getInstance().getNumber(StorageKey.TaskState + this.main_task_data.ThreadTaskID,0) == 0){\r\n                    // 将任务状态设置为可领取\r\n                    TheStorageManager.getInstance().setItem(StorageKey.TaskState + this.main_task_data.ThreadTaskID,1);\r\n                    HttpManager.post(AccessName.changeGameAchievementTask,this.getChangeMainTaskInfoStatusJsonString(this.main_task_data.TaskType,1));\r\n            }\r\n        }\r\n    }\r\n\r\n    sortDailyTask(){\r\n        // this.daily_task_list.sort((a:JsonTaskInformation,b:JsonTaskInformation):number=>{\r\n        //     // return TheStorageManager.getInstance().getNumber(StorageKey.TaskState + a.TaskID) - TheStorageManager.getInstance().getNumber(StorageKey.TaskState + b.TaskID);\r\n        //     if(TheStorageManager.getInstance().getNumber(StorageKey.TaskState + a.TaskID) == 1) return -1;\r\n        //     if(TheStorageManager.getInstance().getNumber(StorageKey.TaskState + a.TaskID) == 0) return -1;\r\n        //     if(TheStorageManager.getInstance().getNumber(StorageKey.TaskState + a.TaskID) == 2) return 1;\r\n        // });\r\n        let finishTask = [];\r\n        let goingTask = [];\r\n        let receiveTask = [];\r\n        this.daily_task_list.forEach((v,k)=>{\r\n            if(TheStorageManager.getInstance().getNumber(StorageKey.TaskState + v.TaskID) == 1){\r\n                finishTask.push(v);\r\n            } else if(TheStorageManager.getInstance().getNumber(StorageKey.TaskState + v.TaskID) == 2){\r\n                receiveTask.push(v);\r\n            }else{\r\n                goingTask.push(v);\r\n            }\r\n        });\r\n        let temp = [];\r\n        temp = temp.concat(finishTask,goingTask,receiveTask);\r\n        this.daily_task_list = temp;\r\n    }\r\n\r\n    sortAchievementTask(){\r\n        // this.daily_task_list.sort((a:JsonTaskInformation,b:JsonTaskInformation):number=>{\r\n        //     // return TheStorageManager.getInstance().getNumber(StorageKey.TaskState + a.TaskID) - TheStorageManager.getInstance().getNumber(StorageKey.TaskState + b.TaskID);\r\n        //     if(TheStorageManager.getInstance().getNumber(StorageKey.TaskState + a.TaskID) == 1) return -1;\r\n        //     if(TheStorageManager.getInstance().getNumber(StorageKey.TaskState + a.TaskID) == 0) return -1;\r\n        //     if(TheStorageManager.getInstance().getNumber(StorageKey.TaskState + a.TaskID) == 2) return 1;\r\n        // });\r\n        let finishTask = [];\r\n        let goingTask = [];\r\n        let receiveTask = [];\r\n        let nullTask = [];\r\n        this.achievement_task_list.forEach((v,k)=>{\r\n            if(v == null){\r\n                nullTask.push(v);\r\n                return;\r\n            }\r\n            if(TheStorageManager.getInstance().getNumber(StorageKey.TaskState + v.TaskID) == 1){\r\n                finishTask.push(v);\r\n            } else if(TheStorageManager.getInstance().getNumber(StorageKey.TaskState + v.TaskID) == 2){\r\n                receiveTask.push(v);\r\n            }else{\r\n                goingTask.push(v);\r\n            }\r\n        });\r\n        let temp = [];\r\n        temp = temp.concat(finishTask,goingTask,receiveTask);\r\n        this.achievement_task_list = temp;\r\n    }\r\n\r\n    /**获取修改日常任务触发次数json */\r\n    private getChangeDailyTaskInfoEmitJsonString(taskId: number,emit:number): string {\r\n        let uid = UserData.getInstance().getUserID();\r\n        let time = UserInfo.getInstance().getNowDay();\r\n        return JSON.stringify({\r\n            uid: uid,\r\n            today:time,\r\n            dimension: 1,\r\n            taskId:taskId,\r\n            emit:emit,\r\n        });\r\n    }\r\n\r\n    /**获取修改日常任务状态json */\r\n    private getChangeDailyTaskInfoStatusJsonString(taskId: number,status:number): string {\r\n        let uid = UserData.getInstance().getUserID();\r\n        let time = UserInfo.getInstance().getNowDay();\r\n        return JSON.stringify({\r\n            uid: uid,\r\n            today:time,\r\n            dimension: 1,\r\n            taskId:taskId,\r\n            status:status,\r\n        });\r\n    }\r\n\r\n    /**获取修改成就任务阶段json */   \r\n    private getChangeAchievementTaskInfoStageJsonString(type: number,stage:number): string {\r\n        let uid = UserData.getInstance().getUserID();\r\n        return JSON.stringify({\r\n            uid: uid,\r\n            dimension: 2,\r\n            taskType:type,\r\n            taskId:type*100000+1,\r\n            stage:stage,\r\n        });\r\n    }\r\n\r\n    /**获取修改成就任务触发次数json */   \r\n    private getChangeAchievementTaskInfoEmitJsonString(type: number,emit:number): string {\r\n        let uid = UserData.getInstance().getUserID();\r\n        return JSON.stringify({\r\n            uid: uid,\r\n            dimension: 2,\r\n            taskType:type,\r\n            taskId:type*100000+1,\r\n            emit:emit,\r\n        });\r\n    }\r\n\r\n    /**获取修改成就任务状态json */   \r\n    private getChangeAchievementTaskInfoStatusJsonString(type: number,status:number): string {\r\n        let uid = UserData.getInstance().getUserID();\r\n        return JSON.stringify({\r\n            uid: uid,\r\n            dimension: 2,\r\n            taskType:type,\r\n            taskId:type*100000+1,\r\n            status:status,\r\n        });\r\n    }\r\n\r\n\r\n    /**获取修改主线任务显示顺序json */   \r\n    private getChangeMainTaskInfoProgressJsonString(progress:number): string {\r\n        let uid = UserData.getInstance().getUserID();\r\n        return JSON.stringify({\r\n            uid: uid,\r\n            dimension: 3,\r\n            progress:progress,\r\n        });\r\n    }\r\n\r\n    /**获取修改主线任务状态json */   \r\n    private getChangeMainTaskInfoStatusJsonString(type: number,status:number): string {\r\n        let uid = UserData.getInstance().getUserID();\r\n        return JSON.stringify({\r\n            uid: uid,\r\n            dimension: 3,\r\n            taskType:type,\r\n            taskId:type*10000000+1,\r\n            status:status,\r\n        });\r\n    }\r\n\r\n    /**获取修改主线任务阶段json */   \r\n    private getChangeMainTaskInfoStageJsonString(type: number,stage:number): string {\r\n        let uid = UserData.getInstance().getUserID();\r\n        return JSON.stringify({\r\n            uid: uid,\r\n            dimension: 3,\r\n            taskType:type,\r\n            taskId:type*10000000+1,\r\n            stage:stage,\r\n        });\r\n    }\r\n\r\n    /**获取修改主线任务触发次数json */   \r\n    private getChangeMainTaskInfoEmitJsonString(type: number,emit:number): string {\r\n        let uid = UserData.getInstance().getUserID();\r\n        return JSON.stringify({\r\n            uid: uid,\r\n            dimension: 3,\r\n            taskType:type,\r\n            taskId:type*10000000+1,\r\n            emit:emit,\r\n        });\r\n    }\r\n}"]}