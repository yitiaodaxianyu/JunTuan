{"version":3,"sources":["assets\\Scripts\\Game\\TouchPlane\\TouchPlane.ts"],"names":[],"mappings":";;;;;AAAA,oBAAoB;AACpB,wEAAwE;AACxE,mBAAmB;AACnB,kFAAkF;AAClF,8BAA8B;AAC9B,kFAAkF;;;;;;;;;;;;;;;;;;;;;;AAElF,iDAA4C;AAEtC,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAC5C;;GAEG;AACU,QAAA,QAAQ,GAAG,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;AAE7C;;GAEG;AACH,IAAY,aAGX;AAHD,WAAY,aAAa;IACrB,iDAAI,CAAA;IACJ,mDAAK,CAAA;AACT,CAAC,EAHW,aAAa,GAAb,qBAAa,KAAb,qBAAa,QAGxB;AAED;IAAwC,8BAAY;IAApD;;IAyDA,CAAC;IApDG,0BAAK,GAAL;IAEA,CAAC;IACS,2BAAM,GAAhB;QACI,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IACD;;KAEC;IACD,oCAAe,GAAf;QACI,iDAAiD;QACjD,4EAA4E;QAC5E,0EAA0E;QAC1E,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;QACrE,2EAA2E;IAC/E,CAAC;IACS,8BAAS,GAAnB;QACI,IAAI,CAAC,cAAc,EAAE,CAAC;IAC1B,CAAC;IACD;;IAEA;IACA,mCAAc,GAAd;QACI,iDAAiD;QACjD,6EAA6E;QAC7E,2EAA2E;QAC3E,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;QACtE,4EAA4E;IAChF,CAAC;IACD;;;KAGC;IACD,mCAAc,GAAd,UAAe,KAA0B;QACrC,IAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC;QAErE,IAAI,aAAa,GAAG,aAAa,CAAC,IAAI,CAAC;QACvC,IAAI,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE;YAChB,aAAa,GAAG,aAAa,CAAC,KAAK,CAAC;YACpC,IAAI,qBAAW,CAAC,WAAW,EAAE,CAAC,OAAO,GAAG,CAAC,EAAE;gBACvC,qBAAW,CAAC,WAAW,EAAE,CAAC,OAAO,EAAE,CAAC;aACvC;SACJ;aAAM;YACH,IAAI,qBAAW,CAAC,WAAW,EAAE,CAAC,OAAO,GAAG,CAAC,EAAE;gBACvC,qBAAW,CAAC,WAAW,EAAE,CAAC,OAAO,EAAE,CAAC;aACvC;SACJ;QAED,gBAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,KAAK,EAAE;YAC9C,aAAa,EAAE,aAAa;SAC/B,CAAC,CAAC;IACP,CAAC;IAxDgB,UAAU;QAD9B,OAAO;OACa,UAAU,CAyD9B;IAAD,iBAAC;CAzDD,AAyDC,CAzDuC,EAAE,CAAC,SAAS,GAyDnD;kBAzDoB,UAAU","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nimport GameManager from \"../../GameManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n/**\r\n * 全局事件监听实例\r\n */\r\nexport const instance = new cc.EventTarget();\r\n\r\n/**\r\n * 点击左边或者右边\r\n */\r\nexport enum DirectionType {\r\n    LEFT,\r\n    RIGHT\r\n}\r\n@ccclass\r\nexport default class TouchPlane extends cc.Component {\r\n\r\n\r\n\r\n\r\n    start() {\r\n\r\n    }\r\n    protected onLoad(): void {\r\n        this._initTouchEvent();\r\n    }\r\n    /**\r\n   * 初始化触摸事件\r\n   */\r\n    _initTouchEvent() {\r\n        // set the size of joystick node to control scale\r\n        // this.node.on(cc.Node.EventType.TOUCH_START, this._touchStartEvent, this);\r\n        // this.node.on(cc.Node.EventType.TOUCH_MOVE, this._touchMoveEvent, this);\r\n        this.node.on(cc.Node.EventType.TOUCH_END, this._touchEndEvent, this);\r\n        // this.node.on(cc.Node.EventType.TOUCH_CANCEL, this._touchEndEvent, this);\r\n    }\r\n    protected onDestroy(): void {\r\n        this._offTouchEvent();\r\n    }\r\n    /**\r\n  * 初始化触摸事件\r\n  */\r\n    _offTouchEvent() {\r\n        // set the size of joystick node to control scale\r\n        // this.node.off(cc.Node.EventType.TOUCH_START, this._touchStartEvent, this);\r\n        // this.node.off(cc.Node.EventType.TOUCH_MOVE, this._touchMoveEvent, this);\r\n        this.node.off(cc.Node.EventType.TOUCH_END, this._touchEndEvent, this);\r\n        // this.node.off(cc.Node.EventType.TOUCH_CANCEL, this._touchEndEvent, this);\r\n    }\r\n    /**\r\n   * 触摸结束回调函数\r\n   * @param event\r\n   */\r\n    _touchEndEvent(event: cc.Event.EventTouch) {\r\n        const touchPos = this.node.convertToNodeSpaceAR(event.getLocation());\r\n       \r\n        let directiontype = DirectionType.LEFT;\r\n        if (touchPos.x > 0) {\r\n            directiontype = DirectionType.RIGHT;\r\n            if (GameManager.getInstance().aniType < 4) {\r\n                GameManager.getInstance().aniType++;\r\n            }\r\n        } else {\r\n            if (GameManager.getInstance().aniType > 0) {\r\n                GameManager.getInstance().aniType--;\r\n            }\r\n        }\r\n\r\n        instance.emit(cc.Node.EventType.TOUCH_END, event, {\r\n            directionType: directiontype,\r\n        });\r\n    }\r\n}\r\n"]}