{"version":3,"sources":["assets\\Scripts\\Level\\TutorialLevel.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { FightingInfo } from \"../Constants\";\r\nimport { LoadManager } from \"../Loading/LoadManager\";\r\nimport { MonsterGroupConfigureManager } from \"../Monster/Data/MonsterGroupConfigure\";\r\nimport LanguageManager from \"../multiLanguage/LanguageManager\";\r\nimport { MissionLevelManager, TableMonsterData } from \"./MissionLevel\";\r\n\r\nexport class JsonTutorialLevel {\r\n    /**关卡数id */\r\n    public LevelId:number = 0 ;\r\n    /**关卡类型 */\r\n    public LevelTypes:number = 0 ;\r\n    /**章节 */\r\n    public Chapter:number = 0 ;\r\n    /**小关编号 */\r\n    public LevelNum:number = 0 ;\r\n    /**x轴 */\r\n    public PosX:number = 0 ;\r\n    /**y轴 */\r\n    public PosY:number = 0 ;\r\n    /**怪物组配置 */\r\n    public MonsterGroupConfigure:number[] = [] ;\r\n    /**最大波次 */\r\n    public MaxWave:number = 0 ;\r\n    /**怪潮波次 */\r\n    public MonsterTideWave:number[] = [] ;\r\n    /**每波时间间隔 */\r\n    public TimeInterval:number[] = [] ;\r\n    /**怪物等级 */\r\n    public MonsterLevel:number[] = [] ;\r\n    /**血量系数 */\r\n    public HpCoefficient:number[] = [] ;\r\n    /**金币总数量 */\r\n    public PassReward_Coin:number = 0 ;\r\n    /**推荐战力 */\r\n    public RecommendedCombatPower:number = 0 ;\r\n}\r\n\r\nexport class TutorialLevelManager {\r\n    private static _instance: TutorialLevelManager = null;\r\n    //把json数据转化成map数据\r\n    private data:Map<number,JsonTutorialLevel>=null;\r\n    private is_load_completed:boolean=false;\r\n\r\n    public static getInstance():TutorialLevelManager {\r\n        if(this._instance==null) {\r\n            this._instance=new TutorialLevelManager();\r\n            this._instance.init();\r\n        }\r\n        return this._instance;\r\n    }\r\n    //初始化游戏数据\r\n    private init() {\r\n        if(!this.data) {\r\n            this.loadJson();\r\n        }\r\n    }\r\n    //加载json\r\n    private loadJson() {\r\n        // LoadManager.loadJson('TutorialLevel',LoadManager.load_mode,(error: Error, assets:cc.JsonAsset)=> {\r\n        //     if(error){\r\n        //         console.log(error);\r\n        //         return;\r\n        //     }\r\n        //     console.log('加载JsonTutorialLevel成功');\r\n        //     this.data=new Map();\r\n        //     let json=assets.json;\r\n        //     for(let i=0; i<json.length; i++){\r\n        //         let jsonData=new JsonTutorialLevel();\r\n        //         jsonData=json[i];\r\n        //         this.data.set(jsonData.LevelId,jsonData);\r\n        //     }\r\n        //     this.is_load_completed=true;\r\n        // });\r\n        LoadManager.loadJson('MissionLevel',LoadManager.load_mode,(error: Error, assets:cc.JsonAsset)=> {\r\n            if(error){\r\n                console.log(error);\r\n                return;\r\n            }\r\n            console.log('加载JsonMissionLevel成功');\r\n            this.data=new Map();\r\n            let json=assets.json;\r\n            for(let i=0; i<json.length; i++){\r\n                let jsonData=new JsonTutorialLevel();\r\n                jsonData=json[i];\r\n                this.data.set(jsonData.LevelId,jsonData);\r\n            }\r\n            this.is_load_completed=true;\r\n        });\r\n    }\r\n\r\n    /**加载是否完成 */\r\n    public getIsLoadCompleted(): boolean{\r\n        return this.is_load_completed;\r\n    }\r\n    /**根据id号获取Json的各种数据 */\r\n    public getJsonTutorialLevel(id:number):JsonTutorialLevel {\r\n        return this.data.get(id);\r\n    }\r\n    /**根据关卡数id获取关卡类型 */\r\n    public getLevelTypes(id:number): number {\r\n        return this.data.get(id).LevelTypes;\r\n    }\r\n    /**根据关卡数id获取章节 */\r\n    public getChapter(id:number): number {\r\n        return this.data.get(id).Chapter;\r\n    }\r\n    /**根据关卡数id获取小关编号 */\r\n    public getLevelNum(id:number): number {\r\n        return this.data.get(id).LevelNum;\r\n    }\r\n    /**根据关卡数id获取x轴 */\r\n    public getPosX(id:number): number {\r\n        return this.data.get(id).PosX;\r\n    }\r\n    /**根据关卡数id获取y轴 */\r\n    public getPosY(id:number): number {\r\n        return this.data.get(id).PosY;\r\n    }\r\n    /**根据关卡数id获取怪物组配置 */\r\n    public getMonsterGroupConfigure(id:number): number[] {\r\n        return this.data.get(id).MonsterGroupConfigure;\r\n    }\r\n    /**根据关卡数id获取最大波次 */\r\n    public getMaxWave(id:number): number {\r\n        return this.data.get(id).MaxWave;\r\n    }\r\n    /**根据关卡数id获取怪潮波次 */\r\n    public getMonsterTideWave(id:number): number[] {\r\n        return this.data.get(id).MonsterTideWave;\r\n    }\r\n    /**根据关卡数id获取每波时间间隔 */\r\n    public getTimeInterval(id:number): number[] {\r\n        return this.data.get(id).TimeInterval;\r\n    }\r\n    /**根据关卡数id获取怪物等级 */\r\n    public getMonsterLevel(id:number): number[] {\r\n        return this.data.get(id).MonsterLevel;\r\n    }\r\n    /**根据关卡数id获取血量系数 */\r\n    public getHpCoefficient(id:number): number[] {\r\n        return this.data.get(id).HpCoefficient;\r\n    }\r\n    /**根据关卡数id获取金币总数量 */\r\n    public getPassReward_Coin(id:number): number {\r\n        return this.data.get(id).PassReward_Coin;\r\n    }\r\n    /**根据关卡数id获取推荐战力 */\r\n    public getRecommendedCombatPower(id:number): number {\r\n        return this.data.get(id).RecommendedCombatPower;\r\n    }\r\n\r\n    /** 静态方法，获取最大的 关卡数id*/\r\n    public static getMaxLevelId():number {\r\n        return ;\r\n    }\r\n\r\n    //以上格式统一，以下写每个json数据的特殊需求\r\n\r\n    /**获得level的关卡数据 */\r\n    public getFightingInfo(level:number):FightingInfo\r\n    {\r\n        let jsonData=this.getJsonTutorialLevel(level);\r\n        let fightingInfo=new FightingInfo();\r\n        \r\n        fightingInfo.title_name=LanguageManager.getInstance().getStrByTextId(130007)+' '+MissionLevelManager.getInstance().getLevelName(level);\r\n        //背景图片名称    \r\n        let bgIndex=1//(this.getChapter(level)%11);\r\n        let bgName='bg/bg'+bgIndex;\r\n        fightingInfo.bg_name=bgName;\r\n        fightingInfo.wall_name=bgName+'_wall';\r\n        fightingInfo.wave_types=jsonData.MonsterTideWave;\r\n        fightingInfo.wave_refresh_time=jsonData.TimeInterval;\r\n        //怪物信息列表\r\n        let monsterDatas=new Array();\r\n        let monsterGroups=jsonData.MonsterGroupConfigure;\r\n        let MGC=MonsterGroupConfigureManager.getInstance();\r\n        for(let i=0; i<monsterGroups.length; i++){\r\n            let dataArr=new Array();\r\n            let groupId=monsterGroups[i];\r\n            let monsterJsonData=MGC.getJsonMonsterGroupConfigure(groupId)\r\n            for(let n=0; n<monsterJsonData.MonsterId.length; n++){\r\n                let tableMonsterData=new TableMonsterData();\r\n                tableMonsterData.id=monsterJsonData.MonsterId[n];\r\n                tableMonsterData.num=monsterJsonData.MonsterNum[n];\r\n                tableMonsterData.refresh_time=monsterJsonData.RefreshInterval[n];\r\n                tableMonsterData.level=jsonData.MonsterLevel[i];\r\n                tableMonsterData.hp_rate=jsonData.HpCoefficient[i];\r\n                dataArr.push(tableMonsterData);\r\n                fightingInfo.total_monster_num+=tableMonsterData.num;\r\n            }\r\n            monsterDatas.push(dataArr);\r\n        }\r\n        fightingInfo.monster_datas=monsterDatas;\r\n        console.log(\"新手教程关卡-\"+level+\"波数:\"+monsterGroups.length);\r\n        return fightingInfo;\r\n    }\r\n}\r\n"]}