{"version":3,"sources":["assets\\Scripts\\Boss\\Boss2\\BossShield2.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { GameState } from \"../../Constants\";\r\nimport GameManager from \"../../GameManager\";\r\nimport { ShieldType, DamageType } from \"../../Hero/Game/HeroConfig\";\r\n\r\n\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class BossShield2 extends cc.Component {\r\n    /**护盾的唯一id */    \r\n    private shield_id:number=0;\r\n    /**剩余的时间 */\r\n    private remain_time:number=0;\r\n    /**剩余的免疫次数 */\r\n    private shield_value:number=0;\r\n    /**护盾类型，可以抵消的伤害类型 */\r\n    private shield_type:ShieldType=ShieldType.Normal;\r\n    /**时间结束或护盾被破时的回调 */\r\n    private destroy_callback:Function=null;\r\n    /**进度条 */\r\n    private progress_bar:cc.ProgressBar=null;\r\n    /**最大值*/\r\n    private max_value:number=0;\r\n    /**最初持续时间 */\r\n    private max_time:number=0;\r\n    //受伤动作\r\n    private injured_action:cc.Tween=null;\r\n    private shield:cc.Node=null;\r\n    /**地表节点 */\r\n    private ground:cc.Node=null;\r\n    /**地表节点 */\r\n    private ground_progress:cc.Node=null;\r\n\r\n    init(id:number,type:ShieldType,remainTime:number,value:number,ground:cc.Node,callback:Function){\r\n        this.progress_bar=this.node.getComponent(cc.ProgressBar);\r\n        this.shield=this.node.getChildByName('shield');\r\n        this.shield_id=id;\r\n        this.remain_time=this.max_time=remainTime;\r\n        this.shield_value=this.max_value=value;\r\n        this.shield_type=type;\r\n        this.destroy_callback=callback;\r\n        this.ground=ground;\r\n        this.ground_progress=ground.getChildByName('progress');\r\n        this.ground_progress.scale=0;\r\n        this.shield.scale=1;\r\n    }\r\n\r\n    startHurt(){\r\n        if(this.injured_action)\r\n        {\r\n            this.injured_action.stop();\r\n        }\r\n        this.shield.color=cc.Color.RED;        \r\n        this.injured_action=cc.tween(this.shield).to(0.18,{color:cc.color(255,255,255)}).start();\r\n    }\r\n\r\n    /**更改护盾值，返回更改后的值值*/\r\n    changeShieldValue(num:number):number{\r\n        let newValue=this.shield_value+num;\r\n        let progress=1-(newValue/this.max_value);;\r\n        this.progress_bar.progress=progress\r\n        if(newValue<0){\r\n            this.shield_value=0;\r\n            this.progress_bar.progress=1;\r\n            this.destroySelf();\r\n        }else{\r\n            this.shield_value=newValue;\r\n        }\r\n        if(num<0){\r\n            this.startHurt();\r\n        }\r\n        return newValue;\r\n    }\r\n\r\n    getShieldValue():number{\r\n        return this.shield_value;\r\n    }\r\n\r\n    getRemainTime():number{\r\n        return this.remain_time;\r\n    }\r\n\r\n    getShieldType():ShieldType{\r\n        return this.shield_type;\r\n    }\r\n\r\n    refreshShield(remainTime:number,value:number){\r\n        this.remain_time=remainTime;\r\n        this.shield_value=value;\r\n    }\r\n\r\n    getIsCanWithstand(type:DamageType):boolean{        \r\n        if(this.shield_type==ShieldType.All || this.shield_type==type.valueOf()){\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private destroySelf(){\r\n        this.ground.removeFromParent();\r\n        this.node.removeFromParent();        \r\n        if(this.destroy_callback){\r\n            //是否自爆\r\n            let isAuto=this.remain_time<=0;\r\n            this.destroy_callback(isAuto);\r\n        }\r\n    }\r\n\r\n    public destoryShield(){\r\n        this.ground.removeFromParent();\r\n        this.node.removeFromParent();\r\n    }\r\n\r\n    protected update(dt: number): void {\r\n        if(GameManager.getInstance().cur_game_state==GameState.Game_Playing){\r\n            if(this.remain_time>0){\r\n                this.remain_time-=dt;\r\n                let scale=1-this.remain_time/this.max_time;\r\n                this.ground_progress.scale=scale;\r\n                this.shield.scale=1+scale;\r\n                if(this.remain_time<0){\r\n                    this.remain_time=0;\r\n                    this.destroySelf();\r\n                }\r\n            }\r\n        }        \r\n    }\r\n}\r\n"]}