{"version":3,"sources":["assets\\Scripts\\Monster\\MonsterIconManager.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,4DAAkE;AAE5D,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAG1C;IAAwC,sCAAY;IAApD;QAAA,qEAgDC;QA9CG,OAAO;QAEP,gBAAU,GAAgB,IAAI,CAAC;QAG/B,eAAS,GAAW,IAAI,CAAC;;IAyC7B,CAAC;2BAhDY,kBAAkB;IASb,8BAAW,GAAzB;QACI,OAAO,IAAI,CAAC,SAAS,CAAC;IAC1B,CAAC;IAES,mCAAM,GAAhB;QACI,oBAAkB,CAAC,SAAS,GAAC,IAAI,CAAC;QAClC,IAAI,CAAC,IAAI,EAAE,CAAC;IAChB,CAAC;IAES,sCAAS,GAAnB;QACI,oBAAkB,CAAC,SAAS,GAAC,IAAI,CAAC;IACtC,CAAC;IAED,SAAS;IACD,iCAAI,GAAZ;IAEA,CAAC;IAEM,wCAAW,GAAlB,UAAmB,IAAW;QAC1B,OAAO,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;IAChD,CAAC;IAEM,6CAAgB,GAAvB,UAAwB,SAAgB;QACpC,IAAI,UAAU,GAAC,iBAAiB,GAAC,SAAS,CAAC;QAC3C,OAAO,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;IACxC,CAAC;IAEM,8CAAiB,GAAxB,UAAyB,SAAgB,EAAC,KAAY;QAClD,IAAI,IAAI,GAAC,0CAAuB,CAAC,WAAW,EAAE,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;QAC1E,IAAI,KAAK,GAAC,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACzC,IAAI,MAAM,GAAC,KAAK,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;QAChE,MAAM,CAAC,WAAW,GAAC,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;QACpD,IAAI,UAAU,GAAC,KAAK,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;QACpE,UAAU,CAAC,MAAM,GAAC,KAAK,GAAC,EAAE,CAAC;QAC3B,KAAK,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,WAAW,GAAC,IAAI,CAAC,WAAW,CAAC,gBAAgB,GAAC,IAAI,CAAC,CAAC;QAClF,OAAO,KAAK,CAAA;IAChB,CAAC;;IA5Cc,4BAAS,GAAuB,IAAI,CAAC;IAGpD;QADC,QAAQ,CAAC,EAAE,CAAC,WAAW,CAAC;0DACM;IAG/B;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;yDACK;IAPhB,kBAAkB;QAD9B,OAAO;OACK,kBAAkB,CAgD9B;IAAD,yBAAC;CAhDD,AAgDC,CAhDuC,EAAE,CAAC,SAAS,GAgDnD;AAhDY,gDAAkB","file":"","sourceRoot":"/","sourcesContent":["import { MonsterConfigureManager } from \"./Data/MonsterConfigure\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport class MonsterIconManager extends cc.Component {\r\n    private static _instance: MonsterIconManager = null;\r\n    //资源-图集\r\n    @property(cc.SpriteAtlas)\r\n    icon_atlas:cc.SpriteAtlas=null;\r\n\r\n    @property(cc.Prefab)\r\n    icon_item:cc.Prefab=null;\r\n\r\n    public static getInstance():MonsterIconManager {\r\n        return this._instance;\r\n    }\r\n\r\n    protected onLoad(): void {\r\n        MonsterIconManager._instance=this;\r\n        this.init();\r\n    }\r\n\r\n    protected onDestroy(): void {\r\n        MonsterIconManager._instance=null;\r\n    }\r\n\r\n    //初始化游戏数据\r\n    private init () {\r\n\r\n    }\r\n\r\n    public getSpByName(name:string):cc.SpriteFrame{\r\n        return this.icon_atlas.getSpriteFrame(name);\r\n    }\r\n\r\n    public getSpByMonsterId(monsterId:number):cc.SpriteFrame{\r\n        let iconSpName=\"Avatar_Monster_\"+monsterId;\r\n        return this.getSpByName(iconSpName);\r\n    }\r\n\r\n    public createMonsterIcon(monsterId:number,level:number):cc.Node{\r\n        let type=MonsterConfigureManager.getInstance().getStrengthType(monsterId);\r\n        let mIcon=cc.instantiate(this.icon_item);\r\n        let iconSp=mIcon.getChildByName('icon').getComponent(cc.Sprite);\r\n        iconSp.spriteFrame=this.getSpByMonsterId(monsterId);\r\n        let levelLabel=mIcon.getChildByName('level').getComponent(cc.Label);\r\n        levelLabel.string=level+'';\r\n        mIcon.getComponent(cc.Sprite).spriteFrame=this.getSpByName('Monster_frame_'+type);\r\n        return mIcon\r\n    }\r\n\r\n\r\n}"]}