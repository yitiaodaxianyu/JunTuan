{"version":3,"sources":["assets\\Scripts\\Monster\\Elite\\NiuSaMan.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { Enemy_State } from \"../../Enemy/EnemyConfig\";\r\nimport { GameEffectsManager, GameEffectId } from \"../../Game/GameEffectsManager\";\r\nimport { DamageType } from \"../../Hero/Game/HeroConfig\";\r\nimport Monster from \"../Monster\";\r\nimport MonsterBullet from \"../MonsterBullet\";\r\nimport { KeyFrameData, MonsterActionName } from \"../MonsterData\";\r\nimport MonsterManager from \"../MonsterManager\";\r\nimport MonsterNewNormal from \"../MonsterNewNormal\";\r\n\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NiuSaMan extends MonsterNewNormal {\r\n\r\n    light:cc.Node=null;\r\n    //halo_data:HaloData=null;\r\n    is_loaded:boolean=false;\r\n    attack_num:number=0;\r\n    \r\n    protected onLoad(): void {\r\n        super.onLoad();\r\n        //super.addMonsterNormalInited(this.onMonsterNormalInited);\r\n        //super.addMonsterNormalDeath(this.onMonsterNormalDeath);\r\n        this.addMonsterNormalAttack(this.onMonsterNormalAttack);\r\n        GameEffectsManager.getInstance().addEffectPoolById(GameEffectId.monster69_niusaman_att);\r\n        GameEffectsManager.getInstance().addEffectPoolById(GameEffectId.monster_zhiliao_halo_hit);        \r\n        // GameEffectsManager.getInstance().addEffectPoolById(GameEffectId.monster69_niusaman_skill,1,()=>{\r\n        //     //添加光环特效\r\n        //     if(!this.light){\r\n        //         this.light=GroundManager.getInstance().createGameEffectById(GameEffectId.monster69_niusaman_skill,this.node.getPosition());\r\n        //     }\r\n        //     this.is_loaded=true;\r\n        // });\r\n    }\r\n\r\n    // onMonsterNormalInited () {        \r\n    //     this.halo_data=new HaloData();\r\n    //     this.halo_data.halo_id=HaloId.Monster69_NiuSaMan_Skill_Halo;\r\n    //     this.halo_data.halo_value=[500];\r\n    //     this.halo_data.halo_source_uuid=this.uuid;\r\n    //     if(this.is_loaded){\r\n    //         if(!this.light){\r\n    //             this.light=GroundManager.getInstance().createGameEffectById(GameEffectId.monster69_niusaman_skill,this.node.getPosition());\r\n    //         }\r\n    //     }\r\n    // }\r\n    \r\n\r\n    /**怪物开始攻击，返回是否截获本次攻击 */\r\n    onMonsterNormalAttack ():boolean {\r\n        //发射\r\n        this.att_jishu=0;\r\n        super.setEnemyState(Enemy_State.att);\r\n        let data=new KeyFrameData();\r\n        data.name='OnDamaging';\r\n        data.callback=()=>{\r\n            if(this.getIsDie()==true){\r\n                return;\r\n            }\r\n            this.att_jishu=0;\r\n            let attPos=super.getAttPos();\r\n            let node=GameEffectsManager.getInstance().createGameEffectById(GameEffectId.monster69_niusaman_att,attPos);\r\n            node.getComponent(MonsterBullet).init(this.getAttData(DamageType.Normal,true),this.monster_far_att,this.monster_far_att_hit,1200,Math.PI*3/2)\r\n            this.attack_num++;\r\n            if(this.attack_num>=this.skill_data.getSkillValue1(1)){\r\n                //恢复\r\n                this.attack_num=0;\r\n                let monsters=MonsterManager.getInstance().getMonstersForMonsterPos(-1,this.node.getPosition(),this.skill_data.getSkillValue2(1));\r\n                if(monsters){\r\n                    for(let i=0; i<monsters.length; i++){                            \r\n                        let monsterTs=monsters[i].getComponent(Monster);\r\n                        if(monsterTs){\r\n                            let isOk=monsterTs.beHeal(this.getMaxHp()*this.skill_data.getSkillValue3(1));\r\n                            if(isOk){\r\n                                //特效\r\n                                GameEffectsManager.getInstance().createGameEffectById(GameEffectId.monster_zhiliao_halo_hit,monsterTs.getCenterPos());\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        super.playSpinAnimaton((this.getAnimaName(MonsterActionName.Attack)),false,data,()=>{\r\n            super.setEnemyState(Enemy_State.move);\r\n            this.startIdle();\r\n            if(this.att_wall){\r\n                this.move_direction=Math.random()>0.5?Math.PI:0;\r\n            }\r\n        })\r\n        return true\r\n    }\r\n\r\n    // onMonsterNormalDeath(){\r\n    //     //以及删除所有光环数据\r\n    //     if(this.light){\r\n    //         GameEffectsManager.getInstance().destroyGameEffectById(GameEffectId.monster69_niusaman_skill,this.light);\r\n    //         this.light=null;\r\n    //     }        \r\n    //     let allMonster=MonsterManager.getInstance().node.children;\r\n    //     let len=allMonster.length;\r\n    //     if(len<=0)\r\n    //     {\r\n    //         return null;\r\n    //     }            \r\n    //     for(let i=0;i<len; i++)\r\n    //     {\r\n    //         let monster=allMonster[i];\r\n    //         let monsterTS=monster.getComponent(Monster);\r\n    //         if(monsterTS && monsterTS.getIsCanCheck())\r\n    //         {\r\n    //             //移除光环效果\r\n    //             monsterTS.subHalo(HaloId.Monster30_BianFu_Skill_Halo,this.uuid);\r\n    //         }\r\n    //     }\r\n    // }    \r\n\r\n    // update (dt) {\r\n    //     if((GameManager.getInstance().cur_game_state!=GameState.Game_Playing)||this.getIsDie())\r\n    //     {\r\n    //         return;\r\n    //     }\r\n    //     super.update(dt);\r\n    //     this.checkSkill();\r\n    //     if(this.light){\r\n    //         this.light.setPosition(this.node.getPosition());\r\n    //     }\r\n    // }\r\n\r\n    // checkSkill(){\r\n    //     let allMonster=MonsterManager.getInstance().node.children;\r\n    //     let len=allMonster.length;\r\n    //     if(len<=0)\r\n    //     {\r\n    //         return null;\r\n    //     }            \r\n    //     for(let i=0;i<len; i++)\r\n    //     {\r\n    //         let monster=allMonster[i];\r\n    //         let monsterTS=monster.getComponent(Monster);\r\n    //         if(monsterTS && monsterTS.getIsCanCheck())\r\n    //         {\r\n    //             let distance=this.getCenterPos().sub(monsterTS.getCenterPos()).mag();\r\n    //             if(distance<=200)\r\n    //             {\r\n    //                 //添加光环效果                    \r\n    //                 monsterTS.addHalo(this.halo_data);\r\n    //             }else{\r\n    //                 //移除光环效果\r\n    //                 monsterTS.subHalo(HaloId.Monster69_NiuSaMan_Skill_Halo,this.uuid);\r\n    //             }\r\n    //         }\r\n    //     }\r\n    // }\r\n}\r\n"]}