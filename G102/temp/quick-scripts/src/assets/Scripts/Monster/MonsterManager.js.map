{"version":3,"sources":["assets\\Scripts\\Monster\\MonsterManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { GameMode, IsDebug } from \"../Constants\";\r\nimport { GameEffectId, GameEffectsManager } from \"../Game/GameEffectsManager\";\r\nimport GameManager from \"../GameManager\";\r\nimport MapNodePool from \"../Game/MapNodePool\";\r\nimport { SoundIndex } from \"../Sound/AudioConstants\";\r\nimport { MonsterConfigureManager } from \"./Data/MonsterConfigure\";\r\nimport Monster from \"./Monster\";\r\nimport { StrengthType } from \"./MonsterData\";\r\nimport GroundManager from \"../Game/GroundManager\";\r\nimport { BingNvWallData } from \"../Hero/Game/HeroConfig\";\r\nimport { JsonMonsterGrowthAttributes } from \"./Data/MonsterGrowthAttributes\";\r\nimport { Enemy_State } from \"../Enemy/EnemyConfig\";\r\n\r\n\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class MonsterManager extends MapNodePool {\r\n\r\n    is_load_ok:boolean=false;\r\n    private ok_num:number=0;\r\n    /**当前关总共有多少敌人 */\r\n    total_monster_num:number=0;\r\n    /**击杀怪物数量 */\r\n    killed_monster_num:number=0;\r\n    /**剩余怪物数量 */\r\n    drop_root:cc.Node=null;\r\n    coin_pos:cc.Vec2=cc.v2();\r\n    \r\n    private static _instance: MonsterManager = null;\r\n\r\n\r\n    public static getInstance():MonsterManager\r\n    {\r\n        return this._instance;\r\n    }\r\n\r\n    onLoad () {\r\n        MonsterManager._instance=this;\r\n        this.drop_root=cc.find('Canvas/Drop_Root');\r\n        let iconBag=cc.find('Canvas/Ui_Root/top_ui/iconBg/iconCoin');\r\n        let worldPos=iconBag.parent.convertToWorldSpaceAR(iconBag.getPosition());\r\n        this.coin_pos=this.drop_root.convertToNodeSpaceAR(worldPos);\r\n        super.onLoad();\r\n    }\r\n\r\n    protected start(): void {\r\n        this.loadData();\r\n    }\r\n\r\n    onDestroy()\r\n    {\r\n        super.onDestroy();\r\n        MonsterManager._instance=null;\r\n    }\r\n\r\n    //加载当前关卡会出现的怪物\r\n    loadData(){\r\n        this.is_load_ok=false;\r\n        this.ok_num=0;\r\n        let fightingInfo=GameManager.getInstance().fighting_info;\r\n        this.killed_monster_num=0;\r\n        this.total_monster_num=fightingInfo.total_monster_num;\r\n        this.prev_uuid=\"\";\r\n        //怪物id数组\r\n        let monsterDataMap=fightingInfo.getOnlyMonsterTypeMap();\r\n        //let MSM=MonsterConfigureManager.getInstance();        \r\n        let len = monsterDataMap.size;\r\n        let bossLoadNum=0;\r\n        // console.log(\"+++++++++\",monsterDataMap)\r\n        monsterDataMap.forEach((v,k)=>{\r\n            super.addNodePool(k,'monster/Monster_'+k,4,(node:cc.Node)=>{                \r\n                this.ok_num++;\r\n\r\n                if(this.ok_num>=len && bossLoadNum<=0){\r\n                    this.is_load_ok=true;\r\n                }\r\n            });\r\n            if(v==StrengthType.Boss){\r\n                if(GameEffectsManager.getInstance().addEffectPoolById(GameEffectId.boss_hp,1,()=>{\r\n                    bossLoadNum--;\r\n                    if(this.ok_num>=len && bossLoadNum<=0){\r\n                        this.is_load_ok=true;\r\n                    }\r\n                })){\r\n                    bossLoadNum++;\r\n                }\r\n                if(GameEffectsManager.getInstance().addEffectPoolById(GameEffectId.boss_coming,1,()=>{\r\n                    bossLoadNum--;\r\n                    if(this.ok_num>=len && bossLoadNum<=0){\r\n                        this.is_load_ok=true;                        \r\n                    }                    \r\n                })){\r\n                    bossLoadNum++;\r\n                }\r\n            }\r\n        })\r\n        GameEffectsManager.getInstance().addEffectPoolById(GameEffectId.drop_coin,16);\r\n        GameEffectsManager.getInstance().addEffectPoolById(GameEffectId.drop_gem,16);\r\n        GameEffectsManager.getInstance().addEffectPoolById(GameEffectId.drop_gem_shadow,16);\r\n        GameEffectsManager.getInstance().addEffectPoolById(GameEffectId.drop_coin_shadow,16);\r\n    }\r\n\r\n    addMonsterPool(id:number,initCount:number,loadCallback?:Function){\r\n        let MSM=MonsterConfigureManager.getInstance();\r\n        let jsonData=MSM.getJsonMonsterConfigure(id);\r\n        let type=jsonData.MonsterClass;\r\n        super.addNodePool(type,'monster/Monster_'+type,initCount,loadCallback);\r\n    }\r\n    /**\r\n     * 根据怪物id创建一个敌人\r\n     * @param id 怪物id\r\n     * @param pos 生成位置\r\n     * @param level 怪物等级\r\n     * @param hpRate 血量比率\r\n     * @param isCanCount 是否可以计数（用于区分召唤物）\r\n     * @returns \r\n     */\r\n    createMonsterById(id:number,pos:cc.Vec2,level:number,hpRate:number,isCanCount:boolean=true):cc.Node\r\n    {\r\n        // console.log(\"_______\",pos.x,pos.y)\r\n        let type=MonsterConfigureManager.getInstance().getMonsterClass(id);\r\n        let node=super.getNodeById(type);\r\n        this.node.addChild(node);\r\n        node.setPosition(pos);\r\n        node.getComponent(Monster).init(id,level,hpRate,isCanCount);        \r\n        return node;\r\n    }\r\n    /**\r\n     * boss创建召唤物\r\n     * @param monsterId 怪物id\r\n     * @param pos 生成位置\r\n     * @param bossAttribute boss的属性\r\n     * @returns \r\n     */\r\n    createSummonMonster(monsterId: number,level:number,pos:cc.Vec2){        \r\n        //召唤特效\r\n        let quan=GroundManager.getInstance().createGameEffectById(GameEffectId.monster_zhaohuan,pos);\r\n        let spine=quan.getComponent(sp.Skeleton);\r\n        let track=spine.setAnimation(0,\"Boss10_Skill2_ZhaoHuan_2\",false);\r\n        spine.setTrackEventListener(track,(entry: sp.spine.TrackEntry, event) =>{\r\n            if(event.data.name==\"ZhaoHuan\"){\r\n                this.createMonsterById(monsterId,pos,level,1,false)\r\n            }\r\n        })\r\n        spine.setCompleteListener(()=>{\r\n            spine.setCompleteListener(null);\r\n            GameEffectsManager.getInstance().destroyGameEffectById(GameEffectId.monster_zhaohuan,quan);\r\n        });        \r\n    }\r\n    prev_uuid:string=\"\";\r\n    /**即将删除敌人，可以在此播放音效 */\r\n    willDestroyMonster(monsterTs:Monster):boolean\r\n    {\r\n        //是否要运行动作后再销毁\r\n        let isActionDie=true;\r\n        GameManager.getInstance().sound_manager.playSound(SoundIndex.YX_Shouji);\r\n        //爆金币\r\n        let pos=monsterTs.node.getPosition();\r\n        if(GameManager.getInstance().cur_game_mode==GameMode.Main){\r\n            this.createDropProp(pos,GameEffectId.drop_coin);\r\n            this.createDropProp(pos,GameEffectId.drop_coin);\r\n            this.createDropProp(pos,GameEffectId.drop_gem);\r\n        }\r\n        return isActionDie;\r\n    }\r\n    /**回收敌人到对象池 */\r\n    destroyMonster(node:cc.Node,type:number,isCanWin:boolean=true)\r\n    {\r\n        node.color=cc.Color.WHITE;\r\n        let monsterTs=node.getComponent(Monster);\r\n        monsterTs.setEnemyState(Enemy_State.die);\r\n        //要区分召唤怪\r\n        if(monsterTs.is_can_count){\r\n            if(monsterTs.uuid==this.prev_uuid){\r\n                //console.error(\"可能重复计数了:\");\r\n                return;\r\n            }\r\n            this.prev_uuid=monsterTs.uuid;            \r\n            this.killed_monster_num++;\r\n            GameManager.getInstance().onEnemyDie(monsterTs.score,monsterTs.is_can_count);            \r\n        }\r\n        if(this.killed_monster_num>=this.total_monster_num){\r\n            if(isCanWin){\r\n                if(this.getRemainMonster()<=0){\r\n                    GameManager.getInstance().showGameWin();\r\n                }\r\n            }\r\n        }\r\n        // //回收前标记可以\r\n        // if(monsterTs){\r\n        //     monsterTs.setIsCanCount(true);\r\n        // }\r\n         \r\n        super.destroyNode(type,node);        \r\n    }\r\n\r\n    private getRemainMonster():number{\r\n        let num=0;\r\n        let len=this.node.childrenCount; \r\n        for(let i=0;i<len; i++)\r\n        {\r\n            let monster=this.node.children[i];\r\n            let monsterTS=monster.getComponent(Monster);\r\n            if(monsterTS&&monsterTS.getIsDie()==false)\r\n            {\r\n                num++;\r\n            }\r\n        }\r\n        return num;\r\n    }\r\n\r\n    createDropProp(pos:cc.Vec2,id:GameEffectId){        \r\n        let prop=GroundManager.getInstance().createGameEffectById(id,pos,2);\r\n        //this.node.getComponent(cc.Sprite).spriteFrame=PropManager.getInstance().getSpByPropId(PropId.Coin);\r\n        prop.opacity=255;\r\n        //prop.scale=0.5;\r\n        let xx=Math.random()*20+30;\r\n        xx*=Math.random()<0.5?1:-1;\r\n        let yy=Math.random()*40-20;\r\n        let height=Math.random()*20+30;\r\n        // cc.tween(prop).then(cc.jumpBy(0.5,xx,yy,height,1)).delay(1).call(()=>{\r\n        //     prop.parent=UIManager.getInstance().node;\r\n        // }).then(MyTool.getBezierAct(prop.getPosition(),this.coin_pos)).call(()=>{\r\n        //     GameEffectsManager.getInstance().destroyGameEffectById(id,prop);\r\n        //     GameManager.getInstance().game.showCoin();\r\n        // }).start();\r\n\r\n        cc.tween(prop).then(cc.jumpBy(0.5,xx,yy,height,1))\r\n        // .call(()=>{\r\n        //     //生成阴影\r\n        //     let shadowId=GameEffectId.drop_gem;\r\n        //     let distXX=0;\r\n        //     let distYY=0;\r\n        //     switch(id){\r\n        //         case GameEffectId.drop_coin:{                    \r\n        //             distXX=prop.x;\r\n        //             distYY=prop.y-9.5;\r\n        //             shadowId=GameEffectId.drop_coin_shadow;\r\n        //         }break;\r\n        //         case GameEffectId.drop_gem:{\r\n        //             shadowId=GameEffectId.drop_gem_shadow;\r\n        //             distXX=prop.x+1;\r\n        //             distYY=prop.y-10;\r\n        //         }break;\r\n        //     }           \r\n        //     let shadow=GroundManager.getInstance().createGameEffectById(shadowId,cc.v2(distXX,distYY),1);\r\n        //     shadow.opacity=100;\r\n        //     cc.tween(shadow).delay(10).to(0.5,{opacity:0}).call(()=>{\r\n        //         GameEffectsManager.getInstance().destroyGameEffectById(shadowId,shadow);\r\n        //     }).start();\r\n        // })\r\n        .delay(10).to(0.5,{opacity:0}).call(()=>{\r\n            GameEffectsManager.getInstance().destroyGameEffectById(id,prop);\r\n        }).start();\r\n    }\r\n\r\n    destroyAllDrop(){\r\n        let drops=this.drop_root.children;\r\n        let len=drops.length;\r\n        for(let i=0; i<len; i++){\r\n            let prop=drops[i];\r\n            let id=parseInt(prop.name);\r\n            if(id){\r\n                cc.tween(prop).to(0.5,{opacity:0}).call(()=>{\r\n                    GameEffectsManager.getInstance().destroyGameEffectById(id,prop);\r\n                }).start();\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    destroyAllMonster(){\r\n        let allMonster=this.node.children;\r\n        let len=allMonster.length;\r\n        for(let i=0; i<len; i++){\r\n            let monster=allMonster[i];\r\n            if(monster){\r\n                let monsterTS=monster.getComponent(Monster);\r\n                if(monsterTS)\r\n                {\r\n                    this.destroyMonster(monster,monsterTS.monster_type);\r\n                }\r\n            }            \r\n        }\r\n    }\r\n\r\n    //--------------------------GET--------------------------------------------------\r\n    /**\r\n     * 获取指定位置targetPos的指定范围fanwei内靠近城墙最近的cheakNum个敌人\r\n     * @param cheakNum 检测数量\r\n     * @param targetPos 指定的位置，一般是自身位置\r\n     * @param fanwei 指定的检测范围，一般是攻击距离\r\n     * @returns 所有满足条件的敌人\r\n     */\r\n    getMonstersForNearest(cheakNum:number,targetPos:cc.Vec2,fanwei:number):cc.Node[]\r\n    {\r\n        if(cheakNum==0)\r\n        {\r\n            return null;\r\n        }\r\n        let len=this.node.childrenCount;\r\n        if(len<=0)\r\n        {\r\n            return null;\r\n        }\r\n        //1.先检测在攻击范围内符合攻击单位的敌人\r\n        let attMonsters:cc.Node[]=[];        \r\n        for(let i=0;i<len; i++)\r\n        {\r\n            let monster=this.node.children[i];\r\n            let monsterTS=monster.getComponent(Monster);\r\n            if(monsterTS && monsterTS.getIsCanCheck())\r\n            {\r\n                let distance=targetPos.sub(monster.getPosition()).mag();\r\n                if(distance<=fanwei)\r\n                {\r\n                    attMonsters.push(monster);\r\n                }\r\n            }\r\n        }\r\n        if(attMonsters.length<=0)\r\n        {\r\n            return null;\r\n        }\r\n        //小于0，代表要所有\r\n        if(cheakNum<0)\r\n        {\r\n            return attMonsters;\r\n        }\r\n        if(cheakNum>=attMonsters.length)\r\n        {\r\n            return attMonsters;\r\n        }\r\n        //2.对可以攻击的敌人进行优先级判断,选出cheakNum个目标作为打击单位\r\n        //2.1优先攻击跟城墙最近的单位\r\n        attMonsters.sort((a:cc.Node,b:cc.Node)=>{\r\n            return a.getPosition().sub(targetPos).mag()-b.getPosition().sub(targetPos).mag();\r\n        });        \r\n        attMonsters.splice(cheakNum);\r\n        return attMonsters;\r\n    }\r\n    /**\r\n     * 获取指定位置targetPos的指定范围fanwei内靠近城墙最近的cheakNum个敌人\r\n     * @param cheakNum 检测数量\r\n     * @param targetPos 指定的位置，一般是自身位置\r\n     * @param fanwei 指定的检测范围，一般是攻击距离\r\n     * @returns 所有满足条件的敌人\r\n     */\r\n     getMonstersForNearestBySkill(cheakNum:number,targetPosY:number,fanwei:number):cc.Node[]\r\n     {\r\n         if(cheakNum==0)\r\n         {\r\n             return null;\r\n         }\r\n         let len=this.node.childrenCount;\r\n         if(len<=0)\r\n         {\r\n             return null;\r\n         }\r\n         //1.先检测在攻击范围内符合攻击单位的敌人\r\n         let attMonsters:cc.Node[]=[];        \r\n         for(let i=0;i<len; i++)\r\n         {\r\n             let monster=this.node.children[i];\r\n             let monsterTS=monster.getComponent(Monster);\r\n             if(monsterTS && monsterTS.getIsCanCheck())\r\n             {\r\n                 let distance=monsterTS.getCenterPos().y-targetPosY;\r\n                 if(distance<=fanwei)\r\n                 {\r\n                     attMonsters.push(monster);\r\n                 }\r\n             }\r\n         }\r\n         if(attMonsters.length<=0)\r\n         {\r\n             return null;\r\n         }\r\n         //小于0，代表要所有\r\n         if(cheakNum<0)\r\n         {\r\n             return attMonsters;\r\n         }\r\n         if(cheakNum>=attMonsters.length)\r\n         {\r\n             return attMonsters;\r\n         }\r\n         //2.对可以攻击的敌人进行优先级判断,选出cheakNum个目标作为打击单位\r\n         //2.1优先攻击跟城墙最近的单位\r\n         attMonsters.sort((a:cc.Node,b:cc.Node)=>{\r\n             return (a.y-targetPosY)-(b.y-targetPosY);\r\n         });        \r\n         attMonsters.splice(cheakNum);\r\n         return attMonsters;\r\n     }\r\n    /**\r\n     * //获取指定位置targetPos的指定范围fanwei内cheakNum个敌人\r\n     * @param cheakNum 检测数量，小于0表示所有，如-1\r\n     * @param targetPos 目标位置\r\n     * @param fanwei 范围\r\n     * @returns 所有符合条件的敌人\r\n     */    \r\n    getMonstersForCenterPos(cheakNum:number,targetPos:cc.Vec2,fanwei:number):cc.Node[]\r\n    {\r\n        if(cheakNum==0)\r\n        {\r\n            return null;\r\n        }\r\n        let len=this.node.childrenCount;\r\n        if(len<=0)\r\n        {\r\n            return null;\r\n        }\r\n        //1.先检测在攻击范围内符合攻击单位的敌人\r\n        let attMonsters:cc.Node[]=[];        \r\n        for(let i=0;i<len; i++)\r\n        {\r\n            let monster=this.node.children[i];\r\n            let monsterTS=monster.getComponent(Monster);\r\n            if(monsterTS && monsterTS.getIsCanCheck())\r\n            {\r\n                let distance=targetPos.sub(monsterTS.getCenterPos()).mag();\r\n                if(distance<=fanwei)\r\n                {\r\n                    attMonsters.push(monster);\r\n                }\r\n            }\r\n        }\r\n        if(attMonsters.length<=0)\r\n        {\r\n            return null;\r\n        }\r\n        //小于0，代表要所有\r\n        if(cheakNum<0)\r\n        {\r\n            return attMonsters;\r\n        }\r\n        //如果检测到的数量没有要检测的那么多，直接返回全部.\r\n        if(cheakNum>=attMonsters.length)\r\n        {\r\n            return attMonsters;\r\n        }\r\n        //2.1优先攻击跟目标位置最近的单位，按照与pos的距离大小进行排列，从小到大\r\n        attMonsters.sort((a:cc.Node,b:cc.Node)=>{\r\n            return a.getPosition().sub(targetPos).mag()-b.getPosition().sub(targetPos).mag();\r\n        });\r\n        attMonsters.splice(cheakNum);\r\n        return attMonsters;\r\n    }\r\n    /**\r\n     * //获取指定位置targetPos的指定范围fanwei内cheakNum个敌人\r\n     * @param cheakNum 检测数量，小于0表示所有，如-1\r\n     * @param targetPos 目标位置\r\n     * @param fanwei 范围\r\n     * @returns 所有符合条件的敌人\r\n     */    \r\n     getMonstersForBingNvWallRect(rect:cc.Rect):BingNvWallData\r\n     {\r\n         let len=this.node.childrenCount;\r\n         //1.先检测在攻击范围内符合攻击单位的敌人\r\n         let bnwd=new BingNvWallData();\r\n         let attMonsters:cc.Node[]=[];\r\n         for(let i=0;i<len; i++)\r\n         {\r\n             let monster=this.node.children[i];\r\n             let monsterTS=monster.getComponent(Monster);\r\n             if(monsterTS && monsterTS.getIsCanCheck())\r\n             {\r\n                if(rect.contains(monster.getPosition()))\r\n                {\r\n                    attMonsters.push(monster);\r\n                    if(monsterTS.getStrengthType()==StrengthType.Boss){\r\n                        bnwd.boss_ts=monsterTS;\r\n                    }\r\n                }\r\n             }\r\n         }\r\n         bnwd.back_monsters=attMonsters;\r\n         return bnwd;\r\n     }\r\n    /**\r\n     * 返回生命值最高的敌人序列\r\n     * @param cheakNum 检测数量，小于0表示所有，如-1\r\n     * @param targetPos \r\n     * @param fanwei \r\n     * @returns \r\n     */\r\n    getMonstersForMaxHp(cheakNum:number,targetPos:cc.Vec2,fanwei:number):cc.Node[]\r\n    {\r\n        if(cheakNum==0)\r\n        {\r\n            return null;\r\n        }\r\n        let len=this.node.childrenCount;\r\n        if(len<=0)\r\n        {\r\n            return null;\r\n        }\r\n        //1.先检测在攻击范围内符合攻击单位的敌人\r\n        let attMonsters:cc.Node[]=[];        \r\n        for(let i=0;i<len; i++)\r\n        {\r\n            let monster=this.node.children[i];\r\n            let monsterTS=monster.getComponent(Monster);\r\n            if(monsterTS && monsterTS.getIsCanCheck())\r\n            {\r\n                let distance=targetPos.sub(monster.getPosition()).mag();\r\n                if(distance<=fanwei)\r\n                {\r\n                    attMonsters.push(monster);\r\n                }\r\n            }\r\n        }\r\n        if(attMonsters.length<=0)\r\n        {\r\n            return null;\r\n        }\r\n        //小于0，代表要所有\r\n        if(cheakNum<0)\r\n        {\r\n            return attMonsters;\r\n        }\r\n        if(cheakNum>=attMonsters.length)\r\n        {\r\n            return attMonsters;\r\n        }\r\n        //2.对可以攻击的敌人进行优先级判断,选出cheakNum个目标作为打击单位\r\n        //2.1优先攻击跟城墙最近的单位\r\n        attMonsters.sort((a:cc.Node,b:cc.Node)=>{\r\n            return b.getComponent(Monster).getCurHp()-a.getComponent(Monster).getCurHp();\r\n        });        \r\n        attMonsters.splice(cheakNum);        \r\n        return attMonsters;\r\n    }\r\n\r\n    /**\r\n     * 返回生命值最高的敌人序列\r\n     * @param cheakNum 检测数量，小于0表示所有，如-1\r\n     * @param targetPos \r\n     * @param fanwei \r\n     * @returns \r\n     */\r\n     getMonstersForMaxAttak(cheakNum:number,targetPos:cc.Vec2,fanwei:number):cc.Node[]\r\n     {\r\n         if(cheakNum==0)\r\n         {\r\n             return null;\r\n         }\r\n         let len=this.node.childrenCount;\r\n         if(len<=0)\r\n         {\r\n             return null;\r\n         }\r\n         //1.先检测在攻击范围内符合攻击单位的敌人\r\n         let attMonsters:cc.Node[]=[];        \r\n         for(let i=0;i<len; i++)\r\n         {\r\n             let monster=this.node.children[i];\r\n             let monsterTS=monster.getComponent(Monster);\r\n             if(monsterTS && monsterTS.getIsCanCheck())\r\n             {\r\n                 let distance=targetPos.sub(monster.getPosition()).mag();\r\n                 if(distance<=fanwei)\r\n                 {\r\n                     attMonsters.push(monster);\r\n                 }\r\n             }\r\n         }\r\n         if(attMonsters.length<=0)\r\n         {\r\n             return null;\r\n         }\r\n         //小于0，代表要所有\r\n         if(cheakNum<0)\r\n         {\r\n             return attMonsters;\r\n         }\r\n         if(cheakNum>=attMonsters.length)\r\n         {\r\n             return attMonsters;\r\n         }\r\n         //2.对可以攻击的敌人进行优先级判断,选出cheakNum个目标作为打击单位\r\n         //2.1优先攻击跟城墙最近的单位\r\n         attMonsters.sort((a:cc.Node,b:cc.Node)=>{\r\n             return b.getComponent(Monster).getCurAtt()-a.getComponent(Monster).getCurAtt();\r\n         });\r\n         attMonsters.splice(cheakNum);\r\n         return attMonsters;\r\n     }\r\n\r\n    /**\r\n     * //获取指定位置targetPos的指定范围fanwei内cheakNum个敌人\r\n     * @param cheakNum 检测数量，小于0表示所有，如-1\r\n     * @param targetPos 目标位置\r\n     * @param radius 范围半径\r\n     * @param minRadian 最小的弧度值\r\n     * @param maxRadian 最大的弧度值\r\n     * @returns 所有符合条件的敌人\r\n     */    \r\n     getMonstersForRadian(cheakNum:number,targetPos:cc.Vec2,radius:number,minRadian:number,maxRadian:number):cc.Node[]\r\n     {\r\n        if(cheakNum==0)\r\n        {\r\n            return null;\r\n        }\r\n        let len=this.node.childrenCount;\r\n        if(len<=0)\r\n        {\r\n            return null;\r\n        }\r\n        let p2=Math.PI*2;\r\n        minRadian=(p2+minRadian)%p2\r\n        maxRadian=(p2+maxRadian)%p2\r\n        //1.先检测在攻击范围内符合攻击单位的敌人\r\n        let attMonsters:cc.Node[]=[];        \r\n        for(let i=0;i<len; i++)\r\n        {\r\n            let monster=this.node.children[i];\r\n            let monsterTS=monster.getComponent(Monster);\r\n            if(monsterTS && monsterTS.getIsCanCheck())\r\n            {\r\n                //先判断是否在弧度范围内\r\n                let offsetPos=monsterTS.getCenterPos().sub(targetPos);\r\n                let radian=Math.atan2(offsetPos.y,offsetPos.x);\r\n                radian=(p2+radian)%p2\r\n                // let angle=MyTool.radianToAngle(radian);\r\n                // cc.log(angle);\r\n                if(radian>=minRadian&&radian<=maxRadian){\r\n                    let distance=offsetPos.mag();\r\n                    if(distance<=radius)\r\n                    {\r\n                        attMonsters.push(monster);\r\n                    }\r\n                }                \r\n            }\r\n        }\r\n        if(attMonsters.length<=0)\r\n        {\r\n            return null;\r\n        }\r\n        //小于0，代表要所有\r\n        if(cheakNum<0)\r\n        {\r\n            return attMonsters;\r\n        }\r\n        // //如果检测到的数量没有要检测的那么多，直接返回全部.\r\n        // if(cheakNum>=attMonsters.length)\r\n        // {\r\n        //     return attMonsters;\r\n        // }\r\n        // //2.1优先攻击跟目标位置最近的单位，按照与pos的距离大小进行排列，从小到大\r\n        // attMonsters.sort((a:cc.Node,b:cc.Node)=>{\r\n        //     return a.getPosition().sub(targetPos).mag()-b.getPosition().sub(targetPos).mag();\r\n        // });\r\n        // attMonsters.splice(cheakNum);\r\n        return attMonsters;\r\n     }\r\n\r\n    //获取指定位置targetPos的指定范围fanwei内cheakNum个敌人(敌人专用，检测队友)\r\n    getMonstersForMonsterPos(cheakNum:number,targetPos:cc.Vec2,fanwei:number):cc.Node[]\r\n    {\r\n        if(cheakNum==0)\r\n        {\r\n            return null;\r\n        }\r\n        let len=this.node.childrenCount;\r\n        if(len<=0)\r\n        {\r\n            return null;\r\n        }\r\n        //1.先检测在攻击范围内符合攻击单位的敌人\r\n        let attMonsters:cc.Node[]=[];        \r\n        for(let i=0;i<len; i++)\r\n        {\r\n            let monster=this.node.children[i];\r\n            let monsterTS=monster.getComponent(Monster);\r\n            if(monsterTS && !monsterTS.getIsDie())\r\n            {\r\n                let distance=targetPos.sub(monster.getPosition()).mag();\r\n                if(distance<=fanwei)\r\n                {\r\n                    attMonsters.push(monster);\r\n                }\r\n            }\r\n        }\r\n        if(attMonsters.length<=0)\r\n        {\r\n            return null;\r\n        }\r\n        //小于0，代表要所有\r\n        if(cheakNum<0)\r\n        {\r\n            return attMonsters;\r\n        }\r\n        //如果检测到的数量没有要检测的那么多，直接返回全部.\r\n        if(cheakNum>=attMonsters.length)\r\n        {\r\n            return attMonsters;\r\n        }\r\n        attMonsters.splice(cheakNum);\r\n        return attMonsters;\r\n    }\r\n    /**是否有敌人在城墙checkDistance距离内 */\r\n    checkWallMonster(checkDistance:number):boolean{\r\n        let len=this.node.childrenCount;        \r\n        let wallY=GameManager.getInstance().enemy_att_y;\r\n        for(let i=0;i<len; i++)\r\n        {\r\n            let monster=this.node.children[i];\r\n            let monsterTS=monster.getComponent(Monster);\r\n            if(monsterTS && !monsterTS.getIsDie())\r\n            {\r\n                let distance=Math.abs(wallY-monster.y)\r\n                if(distance<=checkDistance)\r\n                {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false\r\n    }\r\n\r\n    onAllBack()\r\n    {\r\n        return;\r\n    }\r\n\r\n    protected lateUpdate(dt: number): void {\r\n        this.prev_uuid=\"\";\r\n    }\r\n}\r\n"]}