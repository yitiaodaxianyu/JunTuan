{"version":3,"sources":["assets\\Scripts\\Monster\\MonsterNewNormal.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { GameState } from \"../Constants\";\r\nimport { Enemy_DeBuff_Type, Enemy_State } from \"../Enemy/EnemyConfig\";\r\nimport { GameEffectId, GameEffectsManager } from \"../Game/GameEffectsManager\";\r\nimport Move from \"../Game/Move\";\r\nimport SkillManager from \"../Game/SkillManager\";\r\nimport GameManager from \"../GameManager\";\r\nimport { BuffId, BuffType, DamageType } from \"../Hero/Game/HeroConfig\";\r\nimport Wall from \"../Wall/Wall\";\r\nimport { WallType } from \"../Wall/WallConfig\";\r\nimport WallManager from \"../Wall/WallManager\";\r\nimport Monster from \"./Monster\";\r\nimport MonsterBullet from \"./MonsterBullet\";\r\nimport { FeedBackType, GongJiMode, KeyFrameData, MonsterActionName, MonsterFaceName, MonsterSkinType, StrengthType } from \"./MonsterData\";\r\nimport MonsterManager from \"./MonsterManager\";\r\n\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n/**普通怪物 */\r\n@ccclass\r\nexport default class MonsterNewNormal extends Monster {\r\n\r\n    monster_xuanyun_callback:Function=null;\r\n    monster_init_callback:Function=null;\r\n    monster_death_callback:Function=null;\r\n    monster_att_callback:Function=null;\r\n    monster_att_hit_callback:Function=null;\r\n    @property()\r\n    monster_far_att:number=0;\r\n    @property()\r\n    monster_far_att_hit:number=0;\r\n\r\n    protected onLoad(): void {\r\n        super.onLoad();\r\n        this.addDeathCallback(this.onDeath);\r\n        this.addInitListen(this.onMonsterInited);\r\n        this.addXuanYunListen(this.onXuanYunResult);\r\n    }\r\n\r\n    private onMonsterInited(){\r\n        this.initOutward();\r\n        if(this.base_data.AttackMode==GongJiMode.Far){\r\n            if(this.monster_far_att>0){\r\n                GameEffectsManager.getInstance().addEffectPoolById(this.monster_far_att);\r\n            }\r\n            if(this.monster_far_att_hit>0){\r\n                GameEffectsManager.getInstance().addEffectPoolById(this.monster_far_att_hit);\r\n            }            \r\n        }        \r\n        this.scheduleOnce(this.idleToMove,1);\r\n        if(this.monster_init_callback){\r\n            this.monster_init_callback();\r\n        }\r\n        this.node.scaleX=Math.random()>0.5?this.setup_scale:-this.setup_scale;\r\n    }\r\n\r\n    idleToMove(){\r\n        this.setEnemyState(Enemy_State.move);\r\n    }\r\n\r\n    addMonsterNormalDeath(callback:Function){\r\n        this.monster_death_callback=callback;\r\n    }\r\n\r\n    addMonsterNormalInited(callback:Function){\r\n        this.monster_init_callback=callback;\r\n    }\r\n\r\n    addMonsterNormalAttack(callback:Function){\r\n        this.monster_att_callback=callback;\r\n    }\r\n\r\n    addMonsterNormalAttackHit(callback:Function){\r\n        this.monster_att_hit_callback=callback;\r\n    }\r\n\r\n    addMonsterNormalXuanYun(callback:Function){\r\n        this.monster_xuanyun_callback=callback;\r\n    }\r\n\r\n    /**初始化外观*/\r\n    private initOutward(){\r\n        this.setSkin(this.getSkinName());\r\n        super.playSpinAnimaton(this.getAnimaName(MonsterActionName.Walk),true);\r\n    }\r\n\r\n    setTargetPos(pos:cc.Vec2,endCallback:Function){\r\n        this.move_target_pos=pos;\r\n        this.move_end_callback=endCallback;\r\n    }\r\n    \r\n    setSkin(skinName: string){\r\n        this.spine.setSkin(skinName);\r\n    }\r\n\r\n    setFaceType(type:MonsterFaceName){\r\n        this.face_type=type;\r\n        // if(this.face_type==MonsterFaceName.SideL){\r\n        //     this.node.scaleX=-this.setup_scale;\r\n        // }else {\r\n        //     this.node.scaleX=this.setup_scale;\r\n        // }\r\n    }\r\n\r\n    getSkinName():string{\r\n        return MonsterFaceName.SideR+this.skin_type;\r\n    }\r\n\r\n    getAnimaName(actionName:MonsterActionName):string{\r\n        return MonsterFaceName.SideR+\"_\"+actionName;\r\n    }\r\n\r\n    /**设置打击目标 */\r\n    setAttTarget(target:cc.Node){\r\n        this.att_target=target;\r\n        if(target){\r\n            this.att_jishu=this.att_jiange;\r\n        }else{\r\n            this.setMoveDir(Math.PI*3/2);\r\n        }        \r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param target 攻击的目标\r\n     */\r\n    startAttack(target?:cc.Node){\r\n        if(this.monster_att_callback){\r\n            //是否截获本次攻击\r\n            if(this.monster_att_callback())\r\n            {\r\n                return;\r\n            }\r\n        }\r\n        super.setEnemyState(Enemy_State.att);\r\n        this.att_jishu=0; \r\n        if(target){\r\n            let offsetPos=target.getPosition().sub(this.node.getPosition());\r\n            this.setMoveDir(Math.atan2(offsetPos.y,offsetPos.x));\r\n            this.checkFace(MonsterActionName.Attack);\r\n        }else{\r\n            this.setMoveDir(Math.PI*3/2);\r\n            this.checkFace(MonsterActionName.Attack);\r\n        }\r\n        let data=new KeyFrameData();\r\n        data.name='OnDamaging';\r\n        data.callback=()=>{\r\n            this.att_jishu=0;\r\n            if(this.getIsDie()){\r\n                return;\r\n            }\r\n            switch(this.base_data.AttackMode){\r\n                case GongJiMode.Melee:{\r\n                    if(target){\r\n                        //测试\r\n                        target.removeFromParent();\r\n                        this.setAttTarget(null);\r\n                    }else{\r\n                        //造成伤害\r\n                        let injureData=super.injureWall(super.getAttData(DamageType.Normal,false));\r\n                        if(injureData.is_die==false&&injureData.getDamageNum()>0){\r\n                           if(this.monster_att_hit_callback){\r\n                                this.monster_att_hit_callback(injureData);\r\n                           }\r\n                        }\r\n                    }\r\n                    let pos=target?target.getPosition():cc.v2(this.node.x,this.att_wall.getWallMaxYY());\r\n                    let attNode=GameEffectsManager.getInstance().createGameEffectById(GameEffectId.monster_normal_att,pos);\r\n                    attNode.scale=super.getWallAttackScale();\r\n                }break;\r\n                case GongJiMode.Far:{\r\n                    let attNode=GameEffectsManager.getInstance().createGameEffectById(this.monster_far_att,super.getAttPos());\r\n                    let bullet=attNode.getComponent(MonsterBullet);\r\n                    bullet.init(this.getAttData(DamageType.Normal,true),this.monster_far_att,this.monster_far_att_hit,1200,Math.PI*3/2);\r\n                }break;\r\n            }\r\n        }\r\n        super.playSpinAnimaton(this.getAnimaName(MonsterActionName.Attack),false,data,()=>{\r\n            this.startIdle();\r\n            super.setEnemyState(Enemy_State.move);\r\n            if(this.att_wall){\r\n                this.setMoveDir(Math.random()>0.5?Math.PI:0);\r\n            }\r\n        })\r\n    }    \r\n\r\n    startIdle(){\r\n        super.playSpinAnimaton(this.getAnimaName(MonsterActionName.Walk),true);\r\n    }\r\n\r\n    onXuanYunResult(isXuanYun:boolean){\r\n        if(isXuanYun){\r\n            this.startXuanYun();            \r\n        }else{\r\n            this.att_jishu=0;\r\n            this.setEnemyState(Enemy_State.move);\r\n        }\r\n        if(this.monster_xuanyun_callback){\r\n            this.monster_xuanyun_callback(isXuanYun);\r\n        }\r\n    }\r\n\r\n    startXuanYun(){\r\n        this.spine.paused=true;            \r\n    }\r\n\r\n\r\n    onDeath(){\r\n        this.removeAllDeBuff();\r\n        this.shadow.opacity=0;\r\n        this.node.opacity=0;\r\n        let die=GameEffectsManager.getInstance().createGameEffectById(GameEffectId.monster_die,super.getCenterPos());\r\n        die.scale=this.base_data.StrengthType==StrengthType.Normal?0.4:0.8;\r\n        cc.tween(this.node).delay(0.5).call(()=>{\r\n            this.removeAllDeBuff();\r\n            MonsterManager.getInstance().destroyMonster(this.node,this.monster_type);\r\n        }).start();\r\n        if(this.monster_death_callback){\r\n            this.monster_death_callback();\r\n        }\r\n    }\r\n    \r\n    update(dt)\r\n    {\r\n        if((GameManager.getInstance().cur_game_state!=GameState.Game_Playing)||this.getIsDie())\r\n        {\r\n            return;\r\n        }\r\n        super.update(dt);\r\n        if(!this.isHaveDeBuffType(BuffType.Vertigo)){\r\n            if(this.getEnemyState()!=Enemy_State.skill){\r\n                this.checkAtt(dt);\r\n            }\r\n        }else{\r\n            if(this.isHaveDeBuff(BuffId.Hero_MeiMo_Active_MeiHuo)){\r\n                this.moving(dt);\r\n            }\r\n        }\r\n    }\r\n\r\n    private moving(dt)\r\n    {\r\n        if(!this.isHaveDeBuff(BuffId.Hero_XuanYun)&&(this.getEnemyState()==Enemy_State.move)){\r\n            let speed=this.cur_move_speed*dt;\r\n            if(this.move_target_pos){\r\n                let offsetPos=this.move_target_pos.sub(this.node.getPosition());\r\n                if(offsetPos.mag()<speed)\r\n                {\r\n                    if(this.move_end_callback){\r\n                        this.move_end_callback();\r\n                        this.move_end_callback=null;\r\n                    }\r\n                }else\r\n                {\r\n                    let pi2=Math.PI*2;\r\n                    this.setMoveDir((Math.atan2(offsetPos.y,offsetPos.x)+pi2)%pi2);\r\n                    this.startMove(dt);\r\n                }\r\n            }else{\r\n                this.startMove(dt);\r\n            }\r\n        }\r\n    }\r\n\r\n    startMove(dt){\r\n        let disX=this.node.x;\r\n        let disY=this.node.y;\r\n        let speed=this.cur_move_speed*dt;\r\n        disX+=speed*Math.cos(this.move_direction);\r\n        disY+=speed*Math.sin(this.move_direction);\r\n        let leftRight=this.setX(disX);\r\n        if(leftRight!=0){\r\n            this.move_direction+=Math.PI;\r\n        }\r\n        this.setY(disY);\r\n        this.checkFace(MonsterActionName.Walk);\r\n    }\r\n    /**检测朝向 */\r\n    checkFace(actionName:MonsterActionName){\r\n        let pi2=Math.PI*2;\r\n        this.setMoveDir((this.move_direction+pi2)%pi2);\r\n        let newFace=MonsterFaceName.SideL;\r\n        //60~120°，背面\r\n        if(this.move_direction!=Math.PI*3/2){\r\n            if(this.move_direction>=Math.PI/2&&this.move_direction<=Math.PI*3/2){\r\n                this.node.scaleX=-this.setup_scale;\r\n            }else{\r\n                this.node.scaleX=this.setup_scale;\r\n            }\r\n        }        \r\n        if(this.face_type!=newFace){\r\n            this.setFaceType(newFace);\r\n            this.setSkin(this.getSkinName());\r\n            super.playSpinAnimaton(this.getAnimaName(actionName),true);\r\n        }else{            \r\n            if(this.spine.animation!=this.getAnimaName(MonsterActionName.Walk))\r\n            super.playSpinAnimaton(this.getAnimaName(actionName),true);\r\n        }\r\n        \r\n    }\r\n\r\n    /**攻击计算 */\r\n    checkAtt(dt:number){        \r\n        this.att_jishu+=dt;\r\n        if(this.att_jishu>=this.att_jiange){\r\n            this.att_jishu=this.att_jiange;\r\n            //判断是否在攻击范围之内\r\n            if(this.att_target){\r\n                this.attTarget(dt);\r\n            }else{\r\n                this.attWall(dt);\r\n            }\r\n        }else{\r\n            this.moving(dt);\r\n        }\r\n    }\r\n    /**攻击具体目标判断 */\r\n    attTarget(dt:number){\r\n        let dis=this.node.getPosition().sub(this.att_target.getPosition()).mag();\r\n        if(dis<=this.base_data.AttackDistance){            \r\n            this.startAttack(this.att_target);\r\n        }else{\r\n            this.move_target_pos=this.att_target.getPosition();\r\n            this.moving(dt);\r\n        }\r\n    }    \r\n    /**攻击城墙判断 */\r\n    attWall(dt:number){\r\n        let walls=WallManager.getInstance().getAllWall();\r\n        let attWall=null;\r\n        walls.forEach((wall:Wall,wallType:WallType)=>{\r\n            //攻击城墙的条件1，必须在城墙之上,2达到攻击距离\r\n            if(this.node.y>=wall.getWallMaxYY()&&Math.abs(this.node.y-wall.getWallMaxYY())<=this.base_data.AttackDistance){                \r\n                attWall=wall;\r\n            }\r\n        })\r\n        if(attWall!=null){\r\n            this.att_wall=attWall;\r\n            this.startAttack();\r\n        }else{\r\n            this.setMoveDir(Math.PI*3/2);\r\n            this.move_target_pos=null;        \r\n            this.moving(dt);\r\n        }\r\n    }\r\n}\r\n"]}