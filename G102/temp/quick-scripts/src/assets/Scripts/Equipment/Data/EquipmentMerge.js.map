{"version":3,"sources":["assets\\Scripts\\Equipment\\Data\\EquipmentMerge.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { LoadManager } from \"../../Loading/LoadManager\";\r\n\r\n\r\nexport class JsonEquipmentMerge {\r\n    /**消耗装备id */\r\n    public CostEquipment_id:number = 0 ;\r\n    /**消耗装备数量 */\r\n    public CostNumber:number = 0 ;\r\n    /**目标装备id */\r\n    public TargetEquipment_id:number = 0 ;\r\n    /**消耗金币数量 */\r\n    public CostCoin:number = 0 ;\r\n}\r\n\r\nexport class EquipmentMergeManager {\r\n    private static _instance: EquipmentMergeManager = null;\r\n    //把json数据转化成map数据\r\n    private data:Map<number,JsonEquipmentMerge>=null;\r\n    private is_load_completed:boolean=false;\r\n\r\n    public static getInstance():EquipmentMergeManager {\r\n        if(this._instance==null) {\r\n            this._instance=new EquipmentMergeManager();\r\n            this._instance.init();\r\n        }\r\n        return this._instance;\r\n    }\r\n    //初始化游戏数据\r\n    private init() {\r\n        if(!this.data) {\r\n            this.loadJson();\r\n        }\r\n    }\r\n    //加载json\r\n    private loadJson() {\r\n        LoadManager.loadJson('EquipmentMerge',LoadManager.load_mode,(error: Error, assets:cc.JsonAsset)=> {\r\n            if(error){\r\n                console.log(error);\r\n                return;\r\n            }\r\n            console.log('加载JsonEquipmentMerge成功');\r\n            this.data=new Map();\r\n            let json=assets.json;\r\n            for(let i=0; i<json.length; i++){\r\n                let jsonData=new JsonEquipmentMerge();\r\n                jsonData=json[i];\r\n                this.data.set(jsonData.CostEquipment_id,jsonData);\r\n            }\r\n            this.is_load_completed=true;\r\n        });\r\n    }\r\n\r\n    /**加载是否完成 */\r\n    public getIsLoadCompleted(): boolean{\r\n        return this.is_load_completed;\r\n    }\r\n    /**根据id号获取Json的各种数据 */\r\n    public getJsonEquipmentMerge(id:number):JsonEquipmentMerge {\r\n        return this.data.get(id);\r\n    }\r\n    /**根据消耗装备id获取消耗装备数量 */\r\n    public getCostNumber(id:number): number {\r\n        return this.data.get(id).CostNumber;\r\n    }\r\n    /**根据消耗装备id获取目标装备id */\r\n    public getTargetEquipment_id(id:number): number {\r\n        return this.data.get(id).TargetEquipment_id;\r\n    }\r\n    /**根据消耗装备id获取消耗金币数量 */\r\n    public getCostCoin(id:number): number {\r\n        return this.data.get(id).CostCoin;\r\n    }\r\n\r\n    /** 静态方法，获取最大的 消耗装备id*/\r\n    public static getMaxCostEquipment_id():number {\r\n        return 3035;\r\n    }\r\n\r\n    //以上格式统一，以下写每个json数据的特殊需求\r\n    getData():Map<number,JsonEquipmentMerge>{\r\n        return this.data;\r\n    }\r\n\r\n    getCostId(equipId:number):number{\r\n        let costId=0;\r\n        this.data.forEach((v,k)=>{\r\n            if(v.TargetEquipment_id==equipId){\r\n                costId=k;\r\n            }\r\n        });\r\n        return costId;\r\n    }\r\n}"]}