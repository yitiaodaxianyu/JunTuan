{"version":3,"sources":["assets\\Scripts\\multiLanguage\\LanguageManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import WXManagerEX from \"../../startscene/WXManagerEX\";\r\nimport ApkManager from \"../Ads/ApkManager\";\r\nimport { CUR_Platform, IsDebug, Release_Platform, ValueType } from \"../Constants\";\r\nimport { TextManagementManager } from \"../JsonData/TextManagement\";\r\n\r\nimport { Image_LanguageManager } from \"../Multilingual/Image_Language\";\r\nimport { LanguageType,LanguageIndex,AllLanguageString, SpriteIndex, AllLanSpriteFrame, OnLanguageChange } from \"./LanguageConstants\";\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LanguageManager {\r\n\r\n    private cur_language_type: LanguageType =LanguageType.zh;\r\n    private prev_language_type: LanguageType =LanguageType.zh;\r\n    private static _instance: LanguageManager = null;\r\n    private sp_atlas:cc.SpriteAtlas=null;\r\n    private ImagerLanguage_sprite:Map<string,cc.SpriteFrame>=null;\r\n\r\n    public static getInstance():LanguageManager\r\n    {\r\n        if(this._instance==null)\r\n        {\r\n            this._instance=new LanguageManager();\r\n            this._instance.init();\r\n        }\r\n        return this._instance;\r\n    }\r\n    init()\r\n    {\r\n        let curLan=this.readLanguage();\r\n        this.loadSpriteAtlas();\r\n        this.loadSpImagerLanguage_sprite();\r\n\r\n        if(CUR_Platform==Release_Platform.APK)\r\n        {\r\n            cc.LM=this;\r\n            //先判断有没有保存一种语言\r\n            if(curLan==null)\r\n            {\r\n                ApkManager.getInstance().getAndroidLanguage();\r\n            }\r\n        }\r\n        if(IsDebug)\r\n        {\r\n            this.cur_language_type=LanguageType.zh;\r\n        }\r\n\r\n    }\r\n\r\n    private loadSpImagerLanguage_sprite(){\r\n        if(this.ImagerLanguage_sprite){\r\n            return;\r\n        }\r\n        this.ImagerLanguage_sprite=new Map<string,cc.SpriteFrame>();\r\n        WXManagerEX.getInstance().resourcesBundle.loadDir('Multilingual',cc.SpriteFrame,(error: Error, assets:cc.SpriteFrame[])=>{\r\n            if(error)\r\n            {\r\n                console.log(error);\r\n                return;\r\n            }\r\n            let len=assets.length;\r\n            for(let i=0; i<len; i++)\r\n            {\r\n                let sp=assets[i];\r\n                let name=sp.name;\r\n                this.ImagerLanguage_sprite.set(name,sp);\r\n            }\r\n        })   \r\n    }\r\n\r\n\r\n    public getSpBySpriteId(id:number):cc.SpriteFrame{\r\n        let ilm=Image_LanguageManager.getInstance();     \r\n        let name='';\r\n        switch(this.cur_language_type)\r\n        {\r\n            case LanguageType.en:{\r\n                name=ilm.getEnglish(id);\r\n            }break;\r\n            case LanguageType.zh:{\r\n                name=ilm.getChinese(id);\r\n            }break;\r\n            case LanguageType.id:{\r\n                name=ilm.getIndonesian(id);\r\n            }break;\r\n            case LanguageType.be:{\r\n                name=ilm.getRussian(id);\r\n            }break;\r\n            case LanguageType.th:{\r\n                name=ilm.getThai(id);\r\n            }break;\r\n            case LanguageType.kr:{\r\n                name=ilm.getKorea(id);\r\n            }break;\r\n            default:{\r\n                name=ilm.getEnglish(id);\r\n            }break;\r\n        }\r\n        return this.ImagerLanguage_sprite.get(name);\r\n    }\r\n\r\n    private readLanguage():LanguageType\r\n    {\r\n        let str=cc.sys.localStorage.getItem('cur_language');\r\n        if(str==='' || str===null)\r\n        {\r\n            str=null;\r\n        }else{\r\n            str=parseInt(str);\r\n            this.prev_language_type=this.cur_language_type=str;\r\n        }\r\n        return str;\r\n    }\r\n\r\n    private saveLanguage(type:LanguageType)\r\n    {\r\n        cc.sys.localStorage.setItem('cur_language',type);\r\n    }\r\n\r\n    //切换当前语言\r\n    switchLanguage(type:LanguageType):boolean\r\n    {\r\n        if(this.cur_language_type!=type)\r\n        {\r\n            this.setCurLanguageType(type);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    setLanguage(type)\r\n    {\r\n        cc.log('setLanguage：'+type);\r\n        let curType=parseInt(type);\r\n        this.switchLanguage(curType);\r\n        this.saveLanguage(curType);\r\n        cc.director.emit(OnLanguageChange);\r\n    }\r\n\r\n    private setCurLanguageType(type:LanguageType)\r\n    {\r\n        this.setPrevLanguageType(this.cur_language_type);\r\n        this.cur_language_type=type;\r\n    }\r\n\r\n    getCurLanguageType():LanguageType\r\n    {\r\n        return this.cur_language_type;\r\n    }\r\n\r\n    private setPrevLanguageType(type:LanguageType)\r\n    {\r\n        this.prev_language_type=type;\r\n    }\r\n    private getPrevLanguageType():LanguageType\r\n    {\r\n        return this.prev_language_type;\r\n    }\r\n\r\n    private isSameLanguageType():boolean\r\n    {\r\n        return this.prev_language_type==this.cur_language_type?true:false;\r\n    }\r\n\r\n    getString(index:LanguageIndex):string\r\n    {\r\n        return AllLanguageString[index][this.cur_language_type];\r\n    }\r\n    /*根据一个任意语言类型的字符串，获得当前对应语言的字符串*/\r\n    getStringByStr(str:string):string\r\n    {\r\n        let len=AllLanguageString.length;\r\n        for(let i=0; i<len; i++)\r\n        {\r\n            for(let lanType=0; lanType<LanguageType.num; lanType++)\r\n            {\r\n                if(AllLanguageString[i][lanType]==str)\r\n                {\r\n                    return this.getString(i);\r\n                }\r\n            }\r\n        }\r\n        return '';\r\n    }\r\n    /*根据文本id获得一个字符串*/\r\n    public getStrByTextId(textId:number):string{\r\n        let tm=TextManagementManager.getInstance();        \r\n        switch(this.cur_language_type)\r\n        {\r\n            case LanguageType.en:{\r\n                return tm.getEnglish(textId);\r\n            }break;\r\n            case LanguageType.zh:{\r\n                return tm.getChinese(textId);\r\n            }break;\r\n            case LanguageType.id:{\r\n                return tm.getIndonesian(textId);\r\n            }break;\r\n            case LanguageType.be:{\r\n                return tm.getRussian(textId);\r\n            }break;\r\n            case LanguageType.th:{\r\n                return tm.getThai(textId);\r\n            }break;\r\n            case LanguageType.kr:{\r\n                return tm.getKorea(textId);\r\n            }break;\r\n            default:{\r\n                return tm.getEnglish(textId);\r\n            }break;\r\n        }\r\n    }\r\n\r\n    //图片翻译的\r\n    loadSpriteAtlas()\r\n    {\r\n        WXManagerEX.getInstance().resourcesBundle.load('sp/language_sprite',cc.SpriteAtlas,(error: Error, assets:cc.SpriteAtlas)=>{\r\n            if(error)\r\n            {\r\n                console.log(error);\r\n                return;\r\n            }\r\n            this.sp_atlas=assets;\r\n        });\r\n    }\r\n\r\n    getSpriteFrame(index:SpriteIndex):cc.SpriteFrame\r\n    {\r\n        if(this.sp_atlas)\r\n        {\r\n            let sp=this.sp_atlas.getSpriteFrame(AllLanSpriteFrame[index][this.cur_language_type]);\r\n            if(sp==null)\r\n            {\r\n                sp=this.sp_atlas.getSpriteFrame(AllLanSpriteFrame[index][LanguageType.en]);\r\n            }\r\n            return sp;\r\n        }        \r\n    }\r\n\r\n}\r\n\r\n"]}