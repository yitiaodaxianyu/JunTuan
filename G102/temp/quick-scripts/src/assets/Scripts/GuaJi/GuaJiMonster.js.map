{"version":3,"sources":["assets\\Scripts\\GuaJi\\GuaJiMonster.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { Enemy_State } from \"../Enemy/EnemyConfig\";\r\nimport { KeyFrameData } from \"../Monster/MonsterData\";\r\nimport { PropId } from \"../Prop/PropConfig\";\r\nimport GuaJiManager from \"./GuaJiManager\";\r\n\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class GuaJiMonster extends cc.Component {\r\n\r\n    protected spine: sp.Skeleton=null;\r\n    /**移动速度 */\r\n    cur_move_speed:number=80;\r\n    /**移动方向 */\r\n    move_direction:number=Math.PI;\r\n    /**当前的血量 */\r\n    protected cur_hp: number=1;\r\n    /**最大的血量 */\r\n    protected max_hp: number=1;\r\n    /**阴影 */\r\n    protected shadow: cc.Node=null;\r\n    shadow_pos: cc.Vec2=null;\r\n    shadow_size: cc.Size=null;\r\n    /**攻击间隔（秒，表示多少秒攻击一次） */\r\n    protected att_jiange: number=1;\r\n    /**攻击计时 */\r\n    protected att_jishu: number=0;\r\n    /**当前的攻击力 */\r\n    /**怪物当前的状态 */\r\n    protected monster_state: Enemy_State=Enemy_State.standby;\r\n    //受伤动作\r\n    protected injured_action:cc.Tween=null;\r\n    private juji_pos:cc.Vec2=cc.v2(0,0);\r\n\r\n    onLoad(){\r\n        this.spine=this.node.getComponent(sp.Skeleton);\r\n        let juji=this.node.getChildByName('juji');\r\n        this.juji_pos=(cc.v2(juji.x*this.node.scaleX,juji.y*this.node.scaleY));\r\n        let shadowNode=this.node.getChildByName('shadow');\r\n        this.shadow_pos=shadowNode.getPosition();\r\n        this.shadow_pos.y-=50;\r\n        this.shadow=GuaJiManager.getInstance().createShadow(cc.v2(1280,0));\r\n        this.shadow.setContentSize(shadowNode.width*this.node.scaleX,shadowNode.height*this.node.scaleY);        \r\n        this.update(0.016);\r\n    }\r\n\r\n    init(){        \r\n        this.startWall();\r\n    }\r\n\r\n    getIsDie():boolean\r\n    {\r\n        return this.monster_state==Enemy_State.die;\r\n    }\r\n\r\n    getEnemyState():Enemy_State\r\n    {\r\n        return this.monster_state;\r\n    }\r\n\r\n    getIsCanCheak():boolean\r\n    {\r\n        let isCan=true;\r\n        if(this.getIsDie())\r\n        {\r\n            isCan=false;\r\n        }\r\n        return isCan;\r\n    }\r\n\r\n    getMaxHp():number\r\n    {\r\n        return this.max_hp;\r\n    }\r\n\r\n    getCurHp():number\r\n    {\r\n        return this.cur_hp;\r\n    }\r\n\r\n    getIsFullHp():boolean\r\n    {\r\n        return this.cur_hp>=this.max_hp;\r\n    }\r\n\r\n    getJuJiPos():cc.Vec2\r\n    {\r\n        return this.node.getPosition().add(this.juji_pos);\r\n    }\r\n\r\n    getShadowPos():cc.Vec2{\r\n        return this.node.getPosition().add(cc.v2(this.shadow_pos.x*this.node.scaleX,this.shadow_pos.y*this.node.scaleY));\r\n    }\r\n    \r\n\r\n    setEnemyState(type:Enemy_State)\r\n    {\r\n        if(type!=this.monster_state){\r\n            this.monster_state=type;\r\n        }\r\n    }\r\n\r\n    startWall(){\r\n        this.monster_state=Enemy_State.move;\r\n        this.playSpinAnimaton('Side_Walk',true);\r\n        this.spine.timeScale=1.1;\r\n        this.cur_move_speed=160;\r\n    }\r\n\r\n    startDeath(){\r\n        this.spine.timeScale=1;\r\n        this.cur_move_speed=GuaJiManager.getInstance().bg_speed_x;\r\n        this.monster_state=Enemy_State.die;\r\n        this.node.getComponent(cc.Collider).enabled=false;\r\n        this.spine.paused=false;\r\n        this.node.stopAllActions();\r\n        cc.tween(this.node).to(0.18,{color:cc.color(255,255,255)}).start();\r\n        this.playDeadAnimaton('Side_Death',()=>{\r\n            cc.tween(this.shadow).to(0.5,{opacity:0}).removeSelf().start();\r\n            cc.tween(this.node).to(0.5,{opacity:0}).removeSelf().start();\r\n        });\r\n        GuaJiManager.getInstance().createRes(PropId.Coin,this.shadow.getPosition());\r\n        GuaJiManager.getInstance().createRes(PropId.Coin,this.shadow.getPosition());\r\n        GuaJiManager.getInstance().createRes(PropId.HeroExp,this.shadow.getPosition());\r\n    }\r\n\r\n    startHurt(){\r\n        if(this.injured_action)\r\n        {\r\n            this.injured_action.stop();\r\n        }\r\n        this.node.color=cc.Color.RED;        \r\n        this.injured_action=cc.tween(this.node).to(0.18,{color:cc.color(255,255,255)}).start();\r\n    }\r\n\r\n    /**\r\n     * 播放一个骨骼动画\r\n     * @param name 骨骼动画名称\r\n     * @param isLoop 是否循环\r\n     * @param data 是否监听关键帧，关键帧数据包含关键帧名称，监听到关键帧后的回调\r\n     * @param endCallback 播放结束后的回调\r\n     */\r\n    playSpinAnimaton(name:string,isLoop:boolean=false,data?:KeyFrameData,endCallback?:Function){\r\n        if(this.getEnemyState()==Enemy_State.die){\r\n            return;\r\n        }\r\n        let anima=this.spine.setAnimation(0,name,isLoop);\r\n        if(data){\r\n\r\n            this.spine.setCompleteListener((trackEntry, loopCount) => {\r\n                let nameTemp = trackEntry.animation ? trackEntry.animation.name : '';\r\n                if (nameTemp === name && data.callback) {\r\n                    data.callback();\r\n                }\r\n                this.spine.setCompleteListener(null);\r\n            });\r\n            // this.spine.setTrackEventListener(anima,(entry: sp.spine.TrackEntry, event) =>{\r\n            //     if(event.data.name==data.name){\r\n            //         data.callback();\r\n            //     }\r\n            // })\r\n        }\r\n        if(endCallback){\r\n            // this.spine.setTrackCompleteListener(anima,(entry: sp.spine.TrackEntry, event) =>{\r\n            //     anima.listener=null;\r\n            //     endCallback();\r\n            // })\r\n\r\n            this.spine.setCompleteListener((trackEntry, loopCount) => {\r\n                let nameTemp = trackEntry.animation ? trackEntry.animation.name : '';\r\n                if (nameTemp === name && endCallback) {\r\n                    endCallback();\r\n                }\r\n                this.spine.setCompleteListener(null);\r\n            });\r\n        }\r\n    }\r\n\r\n    playDeadAnimaton(name:string,endCallback:Function){\r\n        let anima=this.spine.setAnimation(0,name,false);\r\n\r\n        this.spine.setCompleteListener((trackEntry, loopCount) => {\r\n            let nameTemp = trackEntry.animation ? trackEntry.animation.name : '';\r\n            if (nameTemp === name && endCallback) {\r\n                endCallback();\r\n            }\r\n            this.spine.setCompleteListener(null);\r\n        });\r\n        // this.spine.setTrackCompleteListener(anima,(entry: sp.spine.TrackEntry, event) =>{\r\n        //     anima.listener=null;\r\n        //     endCallback();\r\n        // })\r\n    }\r\n\r\n    public changeHp(): boolean {\r\n        if(this.getIsDie())\r\n        {\r\n            return true;\r\n        }\r\n        let isDie=false;\r\n        this.cur_hp-=1;\r\n        this.startHurt();\r\n        if(this.cur_hp<=0)\r\n        {\r\n            this.startDeath();\r\n            isDie=true;\r\n        }\r\n        if(this.cur_hp>this.max_hp)\r\n        {\r\n            this.cur_hp=this.max_hp\r\n        }\r\n        return isDie;\r\n    }\r\n\r\n    protected update(dt: number): void {\r\n        this.moving(dt);\r\n    }\r\n\r\n    private moving(dt)\r\n    {        \r\n        let disX=this.node.x;\r\n        let disY=this.node.y;\r\n        let speed=this.cur_move_speed*dt;\r\n        disX+=speed*Math.cos(this.move_direction);\r\n        disY+=speed*Math.sin(this.move_direction);\r\n        this.node.x=disX;\r\n        this.node.y=disY;\r\n        //不能穿过城墙\r\n        if(this.node.x<-64){\r\n            this.node.x=-64;            \r\n        }\r\n        this.shadow.setPosition(this.getShadowPos());\r\n    }\r\n}\r\n"]}