{"version":3,"sources":["assets\\Scripts\\GuaJi\\levelnode.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nimport { LevelManager } from \"../Level/LevelManager\";\r\nimport { MissionLevelManager } from \"../Level/MissionLevel\";\r\nimport ChallengeRoundPop from \"./ChallengeRoundPop\";\r\nimport MapManager from \"./MapManager\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class levelnode extends cc.Component {\r\n\r\n    // @property(cc.Label)\r\n    // label: cc.Label = null;\r\n\r\n    // @property\r\n    // text: string = 'hello';\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n    level:number=0//关卡节点代表的是哪个关卡   默认1\r\n    @property(cc.Node)\r\n    Battletoken:cc.Node=null//正在战斗标识\r\n    @property(cc.Node)\r\n    Bosstoken:cc.Node=null//Boss标识\r\n    @property(cc.Node)\r\n    Star:cc.Node[]=[]//星星\r\n    @property(cc.SpriteFrame)\r\n    StarSpriteFrams:cc.SpriteFrame[]=[];//星星  1:亮起  0:灭掉 \r\n    // onLoad () {}\r\n\r\n    start () {\r\n        this.node.on(cc.Node.EventType.TOUCH_END,this.onTouchEnd,this);\r\n    }\r\n    // protected onEnable(): void {\r\n        \r\n    // }\r\n    onTouchEnd(){\r\n        // console.log(\"++++++++\",MapManager.ChallengeRoundPops)\r\n        MapManager.ChallengeRoundPops.getComponent(ChallengeRoundPop).init(this.level)\r\n    }\r\n    init(level){\r\n        this.level=level\r\n        let myCurrentlevel=LevelManager.getInstance().finish_level+1;//当前最大关卡\r\n        //坐标\r\n        let pos=MissionLevelManager.getInstance().getJsonLevelPosXY(level)\r\n        // console.log(\"_________\",pos)\r\n        this.node.setPosition(pos)\r\n\r\n        //关卡名字\r\n        this.node.getChildByName(\"level\").getComponent(cc.Label).string=\"第\"+MissionLevelManager.getInstance().getLevelName(level)+\"章\";\r\n\r\n        for (let Starindex = 0; Starindex < this.Star.length; Starindex++) {\r\n            this.Star[Starindex].active=false\r\n        }\r\n        this.Battletoken.active=false\r\n        this.Bosstoken.active=false\r\n\r\n\r\n        // let Starnumber=0;\r\n        // if(level<myCurrentlevel){\r\n        //     for (let LevelStarindex = 1; LevelStarindex <4; LevelStarindex++) {\r\n        //         if(LevelManager.getInstance().getALevelStar(level,LevelStarindex)){\r\n        //             Starnumber++\r\n        //         }\r\n        //     }\r\n        // }\r\n        // for (let Maskindex = 0; Maskindex < this.Mask.length; Maskindex++) {\r\n        //     if(Maskindex<Starnumber){\r\n        //         this.Mask[Maskindex].active=true\r\n        //         this.lqu[Maskindex].active=true\r\n                \r\n        //     }else{\r\n        //         this.Mask[Maskindex].active=false\r\n        //         this.lqu[Maskindex].active=false\r\n        //     } \r\n        // }\r\n        let Starnumber=0;\r\n        //是否完成的状态\r\n        if(level<myCurrentlevel){//当前关卡小于最大关卡   代表已完成，有星星数量，没有战斗标识\r\n            for (let LevelStarindex = 1; LevelStarindex <4; LevelStarindex++) {\r\n                if(LevelManager.getInstance().getALevelStar(level,LevelStarindex)){\r\n                    Starnumber++\r\n                }\r\n            }\r\n            for (let Starindex = 0; Starindex < this.Star.length; Starindex++) {\r\n                //亮起几颗星星\r\n                this.Star[Starindex].active=true\r\n                if(Starindex<Starnumber){\r\n                    // console.log(\"___________\",Starindex,Starnumber)\r\n                    this.Star[Starindex].getComponent(cc.Sprite).spriteFrame=this.StarSpriteFrams[1]\r\n                }else{\r\n                    this.Star[Starindex].getComponent(cc.Sprite).spriteFrame=this.StarSpriteFrams[0]\r\n                }\r\n            }\r\n        }\r\n\r\n        // console.log(\"++++++++\",Starnumber)\r\n        if(level==myCurrentlevel){//当前关卡等于最大关卡   代表正要前往这个关卡   没有星星数量，有战斗标识\r\n            this.Battletoken.active=true\r\n        }\r\n        if(level>myCurrentlevel){\r\n            if(MissionLevelManager.getInstance().getLevelTypes(level)==3){\r\n                if(Starnumber==0){\r\n                    this.Bosstoken.active=true\r\n                }else{\r\n                    this.Bosstoken.active=false\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // update (dt) {}\r\n}\r\n"]}