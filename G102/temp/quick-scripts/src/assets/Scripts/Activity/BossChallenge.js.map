{"version":3,"sources":["assets\\Scripts\\Activity\\BossChallenge.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { HttpManager, AccessName } from \".././NetWork/HttpManager\";\r\nimport { FightingInfo } from \"../Constants\";\r\nimport { TableMonsterData } from \"../Level/MissionLevel\";\r\nimport { LoadManager } from \"../Loading/LoadManager\";\r\nimport LanguageManager from \"../multiLanguage/LanguageManager\";\r\nimport { StorageKey } from \"../Storage/StorageConfig\";\r\nimport { TheStorageManager } from \"../Storage/StorageManager\";\r\nimport UserData from \"../UserData\";\r\nimport { UserInfo } from \"../UserInfo/UserInfo\";\r\nimport BossGameUi from \"./BossGameUi\";\r\n\r\nexport enum ChallengeMode{\r\n    Noamal=1,\r\n    Hard=2,\r\n    World=3,\r\n}\r\nexport class JsonBossChallenge {\r\n    /**挑战ID */\r\n    public ChallengeID:number = 0 ;\r\n    /**轮换顺序 */\r\n    public RotationOrder:number = 0 ;\r\n    /**阶段 */\r\n    public Stage:number = 0 ;\r\n    /**怪物ID */\r\n    public MonsterId:number = 0 ;\r\n    /**承伤上限 */\r\n    public InjuryLimit:number = 0 ;\r\n    /**怪物等级 */\r\n    public MonsterLevel:number = 0 ;\r\n    /**章节场景 */\r\n    public ChapterScene:number = 0 ;\r\n}\r\n\r\nexport class BossChallengeManager {\r\n    private static _instance: BossChallengeManager = null;\r\n    //把json数据转化成map数据\r\n    private data:Map<number,JsonBossChallenge>=null;\r\n    private is_load_completed:boolean=false;\r\n\r\n    public static getInstance():BossChallengeManager {\r\n        if(this._instance==null) {\r\n            this._instance=new BossChallengeManager();\r\n            this._instance.init();\r\n        }\r\n        return this._instance;\r\n    }\r\n    //初始化游戏数据\r\n    private init() {\r\n        if(!this.data) {\r\n            this.loadJson();\r\n        }\r\n    }\r\n    //加载json\r\n    private loadJson() {\r\n        LoadManager.loadJson('BossChallenge',LoadManager.load_mode,(error: Error, assets:cc.JsonAsset)=> {\r\n            if(error){\r\n                console.log(error);\r\n                return;\r\n            }\r\n            console.log('加载JsonBossChallenge成功');\r\n            this.data=new Map();\r\n            let json=assets.json;\r\n            for(let i=0; i<json.length; i++){\r\n                let jsonData=new JsonBossChallenge();\r\n                jsonData=json[i];\r\n                this.data.set(jsonData.ChallengeID,jsonData);\r\n            }\r\n            this.is_load_completed=true;\r\n        });\r\n    }\r\n\r\n    /**加载是否完成 */\r\n    public getIsLoadCompleted(): boolean{\r\n        return this.is_load_completed;\r\n    }\r\n    /**根据id号获取Json的各种数据 */\r\n    public getJsonBossChallenge(id:number):JsonBossChallenge {\r\n        return this.data.get(id);\r\n    }\r\n    /**根据挑战ID获取轮换顺序 */\r\n    public getRotationOrder(id:number): number {\r\n        return this.data.get(id).RotationOrder;\r\n    }\r\n    /**根据挑战ID获取阶段 */\r\n    public getStage(id:number): number {\r\n        return this.data.get(id).Stage;\r\n    }\r\n    /**根据挑战ID获取怪物ID */\r\n    public getMonsterId(id:number): number {\r\n        return this.data.get(id).MonsterId;\r\n    }\r\n    /**根据挑战ID获取承伤上限 */\r\n    public getInjuryLimit(id:number): number {\r\n        return this.data.get(id).InjuryLimit;\r\n    }\r\n    /**根据挑战ID获取怪物等级 */\r\n    public getMonsterLevel(id:number): number {\r\n        return this.data.get(id).MonsterLevel;\r\n    }\r\n    /**根据挑战ID获取章节场景 */\r\n    public getChapterScene(id:number): number {\r\n        return this.data.get(id).ChapterScene;\r\n    }\r\n\r\n    /** 静态方法，获取最大的 挑战ID*/\r\n    public static getMaxChallengeID():number {\r\n        return 10047;\r\n    }\r\n\r\n    //以上格式统一，以下写每个json数据的特殊需求\r\n\r\n    cur_challenge_mode:ChallengeMode=ChallengeMode.Noamal;\r\n    cur_score:number=0;\r\n    boss_challenge_ts:BossGameUi=null;\r\n\r\n    public static getId(mode:ChallengeMode,rewardLevel:number):number {\r\n        return 1000*mode+rewardLevel;\r\n    }\r\n\r\n    /**获得level的关卡数据 */\r\n    public getFightingInfo(mode:ChallengeMode):FightingInfo\r\n    {\r\n        // console.log(\"++++++获取关卡数据\",)\r\n        let fightingInfo=new FightingInfo();\r\n        //LanguageManager.getInstance().getStrByTextId(0)+\r\n        fightingInfo.title_name=LanguageManager.getInstance().getStrByTextId(820001);\r\n\r\n\r\n        let md=new TableMonsterData();\r\n        let dataArr=new Array();\r\n        let RotationOrder = UserInfo.getInstance().RotationOrder//1//轮换顺序\r\n        let Stage = 1//阶段\r\n        let ChallengeID = RotationOrder * 1000 + Stage//挑战ID\r\n\r\n\r\n\r\n        //背景图片名称    \r\n        let bgIndex= BossChallengeManager.getInstance().getChapterScene(ChallengeID)+1;\r\n        let bgName='bg/bg'+bgIndex;\r\n        fightingInfo.wall_name=bgName+'_wall';\r\n        fightingInfo.bg_name=bgName;\r\n        fightingInfo.total_monster_num=1;\r\n        fightingInfo.wave_types=[0];\r\n        fightingInfo.wave_refresh_time=[0];\r\n        //怪物信息列表\r\n        let monsterDatas=new Array();\r\n        // this.data.forEach((v,k)=>{\r\n        //     if(mode==1){\r\n        //         let dataArr=new Array();\r\n        //         for(let i=1; i<=1; i++){\r\n        //             let md=new TableMonsterData();\r\n        //             md.id=v.MonsterId;\r\n        //             md.num=1;\r\n        //             md.level=v.MonsterLevel;\r\n        //             dataArr.push(md);\r\n        //             fightingInfo.total_monster_num+=1;\r\n        //         }\r\n        //         monsterDatas.push(dataArr);\r\n        //     }            \r\n        // })\r\n\r\n        md.id=BossChallengeManager.getInstance().getMonsterId(ChallengeID)//怪物id//v.MonsterId;\r\n        md.num=1;\r\n        md.level=BossChallengeManager.getInstance().getMonsterLevel(ChallengeID)//v.MonsterLevel;\r\n        dataArr.push(md);\r\n        fightingInfo.total_monster_num+=1;\r\n        monsterDatas.push(dataArr);\r\n        fightingInfo.monster_datas=monsterDatas;\r\n        return fightingInfo;\r\n    }\r\n\r\n    addScore(score:number):number{\r\n        this.cur_score+=score;\r\n        return this.boss_challenge_ts.refreshData();\r\n    }\r\n\r\n    showProgress():number{\r\n        return this.boss_challenge_ts.refreshData();\r\n    }\r\n    \r\n    getBossChallengeStage(mode:ChallengeMode):number{\r\n        return TheStorageManager.getInstance().getInt(StorageKey.BossChallengeStage+mode,-1);\r\n    }\r\n\r\n    saveBossChallengeStage(mode:ChallengeMode,num:number){\r\n        if(num>this.getBossChallengeStage(mode)){\r\n            TheStorageManager.getInstance().setItem(StorageKey.BossChallengeStage+mode,num);\r\n        }        \r\n    }\r\n\r\n    setDamageNumber(damageNumber:number){//如果伤害数比之前的伤害数多   s 放进伤害数\r\n        if(damageNumber>this.getMaxDamageNumber()){\r\n            this.saveDamageNumber(damageNumber)\r\n        }\r\n    }\r\n    private saveDamageNumber(damageNumber){//放进伤害数\r\n        UserInfo.getInstance().damageNumber=damageNumber\r\n        HttpManager.post(AccessName.updateUserInfo,this.setCopyDamageNumberJsonString(damageNumber));\r\n        // TheStorageManager.getInstance().setItem(StorageKey.UnlimitedChallengeDamageMax,damageNumber);\r\n    }\r\n    getMaxDamageNumber():number{//现在的伤害数\r\n        let damage=UserInfo.getInstance().damageNumber;\r\n        return damage\r\n    }\r\n    private setCopyDamageNumberJsonString(damageNumber:number):string{\r\n        let uid=UserData.getInstance().getUserID();\r\n        let num=damageNumber;\r\n        return JSON.stringify({\r\n            type:10,\r\n            uid:uid,\r\n            value:num,\r\n        });\r\n    }\r\n}\r\n"]}