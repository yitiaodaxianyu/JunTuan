{"version":3,"sources":["assets\\Scripts\\Activity\\EndlessReward.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { RewardData } from \"../JsonData/LevelJsonData\";\r\nimport { JackpotManager } from \"../JsonData/Jackpot\";\r\nimport { PropId } from \"../Prop/PropConfig\";\r\nimport { LoadManager } from \"../Loading/LoadManager\";\r\n\r\nexport class EndlessRewardData{\r\n    curData:JsonEndlessReward=null;\r\n    nextData:JsonEndlessReward=null;\r\n}\r\n\r\nexport class JsonEndlessReward {\r\n    /**奖励波次 */\r\n    public RewardLevel:number = 0 ;\r\n    /**奖励ID */\r\n    public RewardItem:number = 0 ;\r\n    /**奖励数量 */\r\n    public RewardNum:number = 0 ;\r\n}\r\n\r\nexport class EndlessRewardManager {\r\n    private static _instance: EndlessRewardManager = null;\r\n    //把json数据转化成map数据\r\n    private data:Map<number,JsonEndlessReward>=null;\r\n    private is_load_completed:boolean=false;\r\n\r\n    public static getInstance():EndlessRewardManager {\r\n        if(this._instance==null) {\r\n            this._instance=new EndlessRewardManager();\r\n            this._instance.init();\r\n        }\r\n        return this._instance;\r\n    }\r\n    //初始化游戏数据\r\n    private init() {\r\n        if(!this.data) {\r\n            this.loadJson();\r\n        }\r\n    }\r\n    //加载json\r\n    private loadJson() {\r\n        LoadManager.loadJson('EndlessReward',LoadManager.load_mode,(error: Error, assets:cc.JsonAsset)=> {\r\n            if(error){\r\n                console.log(error);\r\n                return;\r\n            }\r\n            console.log('加载JsonEndlessReward成功');\r\n            this.data=new Map();\r\n            let json=assets.json;\r\n            for(let i=0; i<json.length; i++){\r\n                let jsonData=new JsonEndlessReward();\r\n                jsonData=json[i];\r\n                this.data.set(jsonData.RewardLevel,jsonData);\r\n            }\r\n            this.is_load_completed=true;\r\n        });\r\n    }\r\n\r\n    /**加载是否完成 */\r\n    public getIsLoadCompleted(): boolean{\r\n        return this.is_load_completed;\r\n    }\r\n    /**根据id号获取Json的各种数据 */\r\n    public getJsonEndlessReward(id:number):JsonEndlessReward {\r\n        return this.data.get(id);\r\n    }\r\n    /**根据奖励波次获取奖励ID */\r\n    public getRewardItem(id:number): number {\r\n        return this.data.get(id).RewardItem;\r\n    }\r\n    /**根据奖励波次获取奖励数量 */\r\n    public getRewardNum(id:number): number {\r\n        return this.data.get(id).RewardNum;\r\n    }\r\n\r\n    /** 静态方法，获取最大的 奖励波次*/\r\n    public static getMaxRewardLevel():number {\r\n        return 680;\r\n    }\r\n\r\n\r\n    //以上格式统一，以下写每个json数据的特殊需求\r\n\r\n    getRewardByScore(score:number):EndlessRewardData{\r\n        //遍历\r\n        let jsonData=new EndlessRewardData();\r\n        // this.data.forEach((value)=>{\r\n        //     if(score>=value.IntegralRequirement){\r\n        //         jsonData.curData=value;\r\n        //         jsonData.nextData=value;\r\n        //         if(value.RewardLevel>=EndlessRewardManager.getMaxRewardLevel()){\r\n        //             jsonData.nextData=value;\r\n        //         }else{\r\n        //             jsonData.nextData=this.getJsonEndlessReward(value.RewardLevel+1);\r\n        //         }\r\n        //     }\r\n        // });\r\n        return jsonData;\r\n    }\r\n\r\n    getEndlessReward(score:number):RewardData[]{\r\n        //遍历\r\n        let rewardDatas=new Array<RewardData>();\r\n        // let jsonData=new JsonEndlessReward();\r\n        // this.data.forEach((value)=>{\r\n        //     if(score>=value.IntegralRequirement){\r\n        //         jsonData=value;\r\n        //     }\r\n        // });\r\n        // if(jsonData.Coin>0){\r\n        //     let coinRd=new RewardData();\r\n        //     coinRd.reward_id=PropId.Coin;\r\n        //     coinRd.reward_num=jsonData.Coin;\r\n        //     rewardDatas.push(coinRd);\r\n        // }\r\n        // if(jsonData.Gem>0){\r\n        //     let gemRd=new RewardData();\r\n        //     gemRd.reward_id=PropId.Gem;\r\n        //     gemRd.reward_num=jsonData.Gem;\r\n        //     rewardDatas.push(gemRd);\r\n        // }\r\n        // if(jsonData.HeroExp>0){\r\n        //     let heroExpRd=new RewardData();\r\n        //     heroExpRd.reward_id=PropId.HeroExp;\r\n        //     heroExpRd.reward_num=jsonData.HeroExp;\r\n        //     rewardDatas.push(heroExpRd);\r\n        // }\r\n        // if(jsonData.PlayerExp>0){\r\n        //     let userExpRd=new RewardData();\r\n        //     userExpRd.reward_id=PropId.UserExp;\r\n        //     userExpRd.reward_num=jsonData.PlayerExp;\r\n        //     rewardDatas.push(userExpRd);\r\n        // }\r\n\r\n        // //奖池\r\n        // if(jsonData.JackpotID_1>0){\r\n        //     for(let i=0; i<jsonData.JackpotNum_1; i++){\r\n        //         let rd1=JackpotManager.getInstance().getRewardDataById(jsonData.JackpotID_1);\r\n        //         rewardDatas.push(rd1)\r\n        //     }\r\n        // }\r\n        // if(jsonData.JackpotID_2>0){\r\n        //     for(let i=0; i<jsonData.JackpotNum_2; i++){\r\n        //         let rd2=JackpotManager.getInstance().getRewardDataById(jsonData.JackpotID_2);\r\n        //         rewardDatas.push(rd2)\r\n        //     }\r\n        // }\r\n        \r\n        return rewardDatas;\r\n    }\r\n}\r\n"]}