{"version":3,"sources":["assets\\Scripts\\Activity\\BossGameUi.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { BossRewardManager } from \"./BossReward\";\r\nimport GameManager from \"../GameManager\";\r\nimport { EndlessRewardManager } from \"./EndlessReward\";\r\nimport { BossChallengeManager } from \"./BossChallenge\";\r\nimport { StorageKey } from \"../Storage/StorageConfig\";\r\nimport { TheStorageManager } from \"../Storage/StorageManager\";\r\nimport { UserInfo } from \"../UserInfo/UserInfo\";\r\n\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class BossGameUi extends cc.Component {\r\n\r\n    @property([cc.SpriteFrame])\r\n    sp_icon: cc.SpriteFrame[] = [];\r\n    BossRush_Bar_1:cc.Node=null;\r\n    bar:cc.Node=null;\r\n    icon:cc.Sprite=null;\r\n    levelLabel:cc.Label=null;\r\n    scoreLabel:cc.Label=null;\r\n    prev_stage:number=1;\r\n    protected onLoad(): void {\r\n        // return\r\n        this.BossRush_Bar_1=this.node.getChildByName('scoreProgressBar').getChildByName(\"BossRush_Bar_1\");\r\n        this.bar=this.node.getChildByName('scoreProgressBar').getChildByName(\"bar\");\r\n        this.icon=this.node.getChildByName('icon').getComponent(cc.Sprite);\r\n        this.levelLabel=this.node.getChildByName('levelLabel').getComponent(cc.Label);\r\n        this.scoreLabel=this.node.getChildByName('scoreLabel').getComponent(cc.Label);\r\n        BossChallengeManager.getInstance().cur_score=0;\r\n    }\r\n    refreshData():number{\r\n        //先根据当前分数数据获取数据\r\n        // return 1\r\n        let score=BossChallengeManager.getInstance().cur_score;\r\n        let data=BossRewardManager.getInstance().getRewardByScore(BossChallengeManager.getInstance().cur_challenge_mode,score);\r\n        let proScore=score-data.curData.IntegralRequirement;\r\n        let maxSocre=data.nextData.IntegralRequirement-data.curData.IntegralRequirement;\r\n        let progress=proScore/maxSocre+0.001;\r\n        this.BossRush_Bar_1.getComponent(cc.Sprite).fillRange=progress\r\n        this.bar.getComponent(cc.Sprite).fillRange=progress\r\n        this.scoreLabel.string=score+\"/\"+data.nextData.IntegralRequirement;\r\n        this.levelLabel.string=\"\"+data.curData.RewardLevel;\r\n  \r\n        // TheStorageManager.getInstance().setItem(StorageKey.BossChallengeDamage,score);\r\n        this.icon.spriteFrame=this.sp_icon[data.curData.BoxIcon-1];\r\n        if(data.curData.RewardLevel>0){           \r\n            let RotationOrder = UserInfo.getInstance().RotationOrder//轮换顺序\r\n            let ChallengeID = RotationOrder * 1000 + (data.curData.RewardLevel+1)//挑战ID\r\n            let level= BossChallengeManager.getInstance().getMonsterLevel(ChallengeID)\r\n            // console.log(\"+++++++\",level,data.curData.RewardLevel)\r\n            return level;\r\n\r\n            // return fightingInfo.monster_datas[data.curData.RewardLevel-1][0].level;\r\n        }else{\r\n            return 2;\r\n        }\r\n\r\n\r\n\r\n        // if(data.curData.RewardLevel>this.prev_stage){\r\n        //     this.prev_stage=data.curData.RewardLevel;\r\n        //     //返回最新的系数\r\n        //     return GameManager.getInstance().level_datas[this.prev_stage-1].attribute_multiple[0];\r\n        // }\r\n    }\r\n}\r\n"]}