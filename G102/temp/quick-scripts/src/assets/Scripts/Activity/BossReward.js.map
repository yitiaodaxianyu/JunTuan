{"version":3,"sources":["assets\\Scripts\\Activity\\BossReward.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["\r\nimport { JackpotManager } from \"../JsonData/Jackpot\";\r\nimport { RewardData } from \"../JsonData/LevelJsonData\";\r\nimport { LoadManager } from \"../Loading/LoadManager\";\r\nimport { PropId } from \"../Prop/PropConfig\";\r\nimport { UserInfo } from \"../UserInfo/UserInfo\";\r\nimport { BossChallengeManager, ChallengeMode } from \"./BossChallenge\";\r\n\r\nexport class BossRewardData{\r\n    curData:JsonBossReward=null;\r\n    nextData:JsonBossReward=null;\r\n}\r\n\r\nexport class JsonBossReward {\r\n    /**奖励级别 */\r\n    public RewardLevel:number = 0 ;\r\n    /**积分要求 */\r\n    public IntegralRequirement:number = 0 ;\r\n    /**展示宝箱图标 */\r\n    public BoxIcon:number = 0 ;\r\n    /**奖励道具 */\r\n    public RewardItem:number = 0 ;\r\n    /**奖励数量 */\r\n    public RewardNum:number = 0 ;\r\n    /**奖励道具2 */\r\n    public RewardItem_2:number = 0 ;\r\n    /**奖励数量2 */\r\n    public RewardNum_2:number = 0 ;\r\n}\r\n\r\nexport class BossRewardManager {\r\n    private static _instance: BossRewardManager = null;\r\n    //把json数据转化成map数据\r\n    private data:Map<number,JsonBossReward>=null;\r\n    private is_load_completed:boolean=false;\r\n\r\n    public static getInstance():BossRewardManager {\r\n        if(this._instance==null) {\r\n            this._instance=new BossRewardManager();\r\n            this._instance.init();\r\n        }\r\n        return this._instance;\r\n    }\r\n    //初始化游戏数据\r\n    private init() {\r\n        if(!this.data) {\r\n            this.loadJson();\r\n        }\r\n    }\r\n    //加载json\r\n    private loadJson() {\r\n        LoadManager.loadJson('BossReward',LoadManager.load_mode,(error: Error, assets:cc.JsonAsset)=> {\r\n            if(error){\r\n                console.log(error);\r\n                return;\r\n            }\r\n            console.log('加载JsonBossReward成功');\r\n            this.data=new Map();\r\n            let json=assets.json;\r\n            for(let i=0; i<json.length; i++){\r\n                let jsonData=new JsonBossReward();\r\n                jsonData=json[i];\r\n                this.data.set(jsonData.RewardLevel,jsonData);\r\n            }\r\n            this.is_load_completed=true;\r\n        });\r\n    }\r\n\r\n    /**加载是否完成 */\r\n    public getIsLoadCompleted(): boolean{\r\n        return this.is_load_completed;\r\n    }\r\n    /**根据id号获取Json的各种数据 */\r\n    public getJsonBossReward(id:number):JsonBossReward {\r\n        return this.data.get(id);\r\n    }\r\n    /**根据奖励级别获取积分要求 */\r\n    public getIntegralRequirement(id:number): number {\r\n        return this.data.get(id).IntegralRequirement;\r\n    }\r\n    /**根据奖励级别获取展示宝箱图标 */\r\n    public getBoxIcon(id:number): number {\r\n        return this.data.get(id).BoxIcon;\r\n    }\r\n    /**根据奖励级别获取奖励道具 */\r\n    public getRewardItem(id:number): number {\r\n        return this.data.get(id).RewardItem;\r\n    }\r\n    /**根据奖励级别获取奖励数量 */\r\n    public getRewardNum(id:number): number {\r\n        return this.data.get(id).RewardNum;\r\n    }\r\n    /**根据奖励级别获取奖励道具2 */\r\n    public getRewardItem_2(id:number): number {\r\n        return this.data.get(id).RewardItem_2;\r\n    }\r\n    /**根据奖励级别获取奖励数量2 */\r\n    public getRewardNum_2(id:number): number {\r\n        return this.data.get(id).RewardNum_2;\r\n    }\r\n\r\n    /** 静态方法，获取最大的 奖励级别*/\r\n    public static getMaxRewardLevel():number {\r\n        return 47;\r\n    }\r\n\r\n    //以上格式统一，以下写每个json数据的特殊需求\r\n\r\n    // public static getId(mode:ChallengeMode,rewardLevel:number):number {\r\n    //     return 1000*mode+rewardLevel;\r\n    // }\r\n\r\n    /**根据伤害得到奖励级别 */\r\n    getRewardLevel(hurt:number){\r\n        let rewardlevel=0\r\n        for (let index = 0; index < BossRewardManager.getMaxRewardLevel(); index++) {\r\n            let mycurId=UserInfo.getInstance().RotationOrder*1000+index//BossRewardManager.getId(mode,i);\r\n            let num=BossChallengeManager.getInstance().getInjuryLimit(mycurId) //this.getIntegralRequirement(index)\r\n            if(num<=hurt){\r\n                rewardlevel=index\r\n            }\r\n        }\r\n        // console.log(\"______4\",rewardlevel)\r\n        return rewardlevel\r\n    }\r\n    getRewardByScore(mode:ChallengeMode,score:number):BossRewardData{\r\n        //遍历\r\n        let jsonData=new BossRewardData();\r\n        for(let i=BossRewardManager.getMaxRewardLevel()-1; i>=0; i--){\r\n            let curId=i//BossRewardManager.getId(mode,i);\r\n            let curData=this.getJsonBossReward(curId);\r\n            // let curId=UserInfo.getInstance().RotationOrder*1000+i//BossRewardManager.getId(mode,i);\r\n            // let curData=this.getJsonBossReward(curId);\r\n            // if(score>=curData.){\r\n            //     let nextId=UserInfo.getInstance().RotationOrder*1000+(i+1)//BossRewardManager.getId(mode,i+1);\r\n            //     let nextData=this.getJsonBossReward(nextId);\r\n            //     jsonData.curData=curData;\r\n            //     jsonData.nextData=nextData;\r\n            //     break;\r\n            // }\r\n            let mycurId=UserInfo.getInstance().RotationOrder*1000+i//BossRewardManager.getId(mode,i);\r\n            curData.IntegralRequirement=BossChallengeManager.getInstance().getInjuryLimit(mycurId)\r\n            if(score>=curData.IntegralRequirement){\r\n                let nextId=i+1//BossRewardManager.getId(mode,i+1);\r\n                let nextData=this.getJsonBossReward(nextId);\r\n\r\n                let mynextId=UserInfo.getInstance().RotationOrder*1000+(i+1)//BossRewardManager.getId(mode,i);\r\n                nextData.IntegralRequirement=BossChallengeManager.getInstance().getInjuryLimit(mynextId)\r\n                // console.log(\"___________\",nextData.IntegralRequirement)\r\n\r\n                jsonData.curData=curData;\r\n                jsonData.nextData=nextData;\r\n                break;\r\n            }\r\n        }\r\n        // console.log(\"______3\",jsonData)\r\n        return jsonData;\r\n    }\r\n\r\n    getBossReward(mode:ChallengeMode,score:number):RewardData[]{\r\n        //遍历\r\n        let rewardDatas=new Array<RewardData>();\r\n        let jsonData=new JsonBossReward();\r\n        for(let i=BossRewardManager.getMaxRewardLevel()-1; i>=0; i--){\r\n            let curId=i//BossRewardManager.getId(mode,i);\r\n            let curData=this.getJsonBossReward(curId);\r\n            if(score>=curData.IntegralRequirement){\r\n                // let nextId=BossRewardManager.getId(mode,i+1);\r\n                jsonData=curData;\r\n                break;\r\n            }\r\n        }\r\n\r\n        // if(jsonData.Coin>0){\r\n        //     let coinRd=new RewardData();\r\n        //     coinRd.reward_id=PropId.Coin;\r\n        //     coinRd.reward_num=jsonData.Coin;\r\n        //     rewardDatas.push(coinRd);\r\n        // }\r\n        // if(jsonData.Gem>0){\r\n        //     let gemRd=new RewardData();\r\n        //     gemRd.reward_id=PropId.Gem;\r\n        //     gemRd.reward_num=jsonData.Gem;\r\n        //     rewardDatas.push(gemRd);\r\n        // }\r\n        // if(jsonData.HeroExp>0){\r\n        //     let heroExpRd=new RewardData();\r\n        //     heroExpRd.reward_id=PropId.HeroExp;\r\n        //     heroExpRd.reward_num=jsonData.HeroExp;\r\n        //     rewardDatas.push(heroExpRd);\r\n        // }\r\n        // if(jsonData.PlayerExp>0){\r\n        //     let userExpRd=new RewardData();\r\n        //     userExpRd.reward_id=PropId.UserExp;\r\n        //     userExpRd.reward_num=jsonData.PlayerExp;\r\n        //     rewardDatas.push(userExpRd);\r\n        // }\r\n\r\n        // //奖池\r\n        // if(jsonData.JackpotID_1>0){\r\n        //     for(let i=0; i<jsonData.JackpotNum_1; i++){\r\n        //         let rd1=JackpotManager.getInstance().getRewardDataById(jsonData.JackpotID_1);\r\n        //         rewardDatas.push(rd1)\r\n        //     }\r\n        // }\r\n        // if(jsonData.JackpotID_2>0){\r\n        //     for(let i=0; i<jsonData.JackpotNum_2; i++){\r\n        //         let rd2=JackpotManager.getInstance().getRewardDataById(jsonData.JackpotID_2);\r\n        //         rewardDatas.push(rd2)\r\n        //     }\r\n        // }\r\n        // console.log(\"______2\",rewardDatas)\r\n        return rewardDatas;\r\n    }\r\n\r\n    getBossChallenge(mode:ChallengeMode,score:number):number{\r\n        //遍历\r\n        let jsonData=new JsonBossReward();\r\n        for(let i=BossRewardManager.getMaxRewardLevel()-1; i>=0; i--){\r\n            let curId=i//BossRewardManager.getId(mode,i);\r\n            let curData=this.getJsonBossReward(curId);\r\n            if(score>=curData.IntegralRequirement){\r\n                //let nextId=BossRewardManager.getId(mode,i+1);\r\n                jsonData=curData;\r\n                break;\r\n            }\r\n        }\r\n        // console.log(\"______1\",jsonData.RewardLevel)\r\n        return jsonData.RewardLevel;\r\n    }\r\n}\r\n"]}