{"version":3,"sources":["assets\\Scripts\\Pet\\Data\\SpiritQualityAdvanced.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { LoadManager } from \"../../Loading/LoadManager\";\r\n\r\n\r\nexport class JsonSpiritQualityAdvanced {\r\n    /**当前品质 */\r\n    public CurrentQuality:number = 0 ;\r\n    /**目标品质 */\r\n    public TargetQuality:number = 0 ;\r\n    /**消耗本体数量 */\r\n    public CostItselfNum:number = 0 ;\r\n    /**消耗本体品质 */\r\n    public CostItselfQuality:number = 0 ;\r\n    /**消耗同类型数量 */\r\n    public CostSameTypeNum:number = 0 ;\r\n    /**消耗同类型品质 */\r\n    public CostSameTypeQuality:number = 0 ;\r\n}\r\n\r\nexport class SpiritQualityAdvancedManager {\r\n    private static _instance: SpiritQualityAdvancedManager = null;\r\n    //把json数据转化成map数据\r\n    private data:Map<number,JsonSpiritQualityAdvanced>=null;\r\n    private is_load_completed:boolean=false;\r\n\r\n    public static getInstance():SpiritQualityAdvancedManager {\r\n        if(this._instance==null) {\r\n            this._instance=new SpiritQualityAdvancedManager();\r\n            this._instance.init();\r\n        }\r\n        return this._instance;\r\n    }\r\n    //初始化游戏数据\r\n    private init() {\r\n        if(!this.data) {\r\n            this.loadJson();\r\n        }\r\n    }\r\n    //加载json\r\n    private loadJson() {\r\n        LoadManager.loadJson('SpiritQualityAdvanced',LoadManager.load_mode,(error: Error, assets:cc.JsonAsset)=> {\r\n            if(error){\r\n                console.log(error);\r\n                return;\r\n            }\r\n            console.log('加载JsonSpiritQualityAdvanced成功');\r\n            this.data=new Map();\r\n            let json=assets.json;\r\n            for(let i=0; i<json.length; i++){\r\n                let jsonData=new JsonSpiritQualityAdvanced();\r\n                jsonData=json[i];\r\n                this.data.set(jsonData.CurrentQuality,jsonData);\r\n            }\r\n            this.is_load_completed=true;\r\n        });\r\n    }\r\n\r\n    /**加载是否完成 */\r\n    public getIsLoadCompleted(): boolean{\r\n        return this.is_load_completed;\r\n    }\r\n    /**根据id号获取Json的各种数据 */\r\n    public getJsonSpiritQualityAdvanced(id:number):JsonSpiritQualityAdvanced {\r\n        return this.data.get(id);\r\n    }\r\n    /**根据当前品质获取目标品质 */\r\n    public getTargetQuality(id:number): number {\r\n        return this.data.get(id).TargetQuality;\r\n    }\r\n    /**根据当前品质获取消耗本体数量 */\r\n    public getCostItselfNum(id:number): number {\r\n        return this.data.get(id).CostItselfNum;\r\n    }\r\n    /**根据当前品质获取消耗本体品质 */\r\n    public getCostItselfQuality(id:number): number {\r\n        return this.data.get(id).CostItselfQuality;\r\n    }\r\n    /**根据当前品质获取消耗同类型数量 */\r\n    public getCostSameTypeNum(id:number): number {\r\n        return this.data.get(id).CostSameTypeNum;\r\n    }\r\n    /**根据当前品质获取消耗同类型品质 */\r\n    public getCostSameTypeQuality(id:number): number {\r\n        return this.data.get(id).CostSameTypeQuality;\r\n    }\r\n\r\n    /** 静态方法，获取最大的 当前品质*/\r\n    public static getMaxCurrentQuality():number {\r\n        return 9;\r\n    }\r\n\r\n    //以上格式统一，以下写每个json数据的特殊需求\r\n\r\n\r\n}\r\n"]}