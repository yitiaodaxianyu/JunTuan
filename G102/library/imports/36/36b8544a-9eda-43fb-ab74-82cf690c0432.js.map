{"version":3,"sources":["assets\\Scripts\\Loading\\LoadProgress.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAEM,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAC1C,SAAS;AAET;IAA0C,gCAAY;IAAtD;QAAA,qEA6CC;QA1CG,iBAAW,GAAmB,IAAI,CAAC;QAGnC,mBAAa,GAAY,IAAI,CAAC;QAG9B,gBAAU,GAAW,EAAE,CAAC;QAGxB,qBAAe,GAA+B,EAAE,CAAC;;IAiCrD,CAAC;IAhCG,wBAAwB;IAExB,eAAe;IAEf,4BAAK,GAAL;IAEA,CAAC;IACD,gCAAS,GAAT,UAAU,IAAW;QAArB,iBAkBC;QAhBG,IAAI,CAAC,UAAU,GAAC,IAAI,CAAC;QACrB,IAAI,CAAC,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC;QACtB,EAAE,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YAClE,qCAAqC;YACrC,IAAG,KAAI,CAAC,eAAe,CAAC,MAAM,GAAC,CAAC,EAChC;gBACI,KAAI,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,KAAI,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC,EAAE,EAC/C;oBACI,KAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBACtC;aACJ;iBACD;gBACI,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC;aAC1C;QAEL,CAAC,CAAC,CAAA;IACN,CAAC;IAED,iCAAU,GAAV,UAAW,cAAc,EAAC,UAAU,EAAC,IAAI;QACrC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC;QACtB,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,cAAc,GAAC,UAAU,CAAC;QACtD,IAAI,CAAC,aAAa,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAC,IAAI,CAAC,WAAW,CAAC,WAAW,GAAC,IAAI,CAAC,WAAW,CAAC,WAAW,GAAC,CAAC,CAAC;IACjH,CAAC;IAzCD;QADC,QAAQ,CAAC,EAAC,IAAI,EAAC,EAAE,CAAC,WAAW,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC;qDACb;IAGnC;QADC,QAAQ,CAAC,EAAC,IAAI,EAAC,EAAE,CAAC,IAAI,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC;uDACX;IAG9B;QADC,QAAQ,CAAC,EAAC,OAAO,EAAC,YAAY,EAAC,CAAC;oDACT;IAGxB;QADC,QAAQ,CAAC,EAAC,IAAI,EAAC,CAAC,EAAE,CAAC,SAAS,CAAC,YAAY,CAAC,EAAC,OAAO,EAAC,aAAa,EAAC,CAAC;yDAClB;IAZhC,YAAY;QADhC,OAAO;OACa,YAAY,CA6ChC;IAAD,mBAAC;CA7CD,AA6CC,CA7CyC,EAAE,CAAC,SAAS,GA6CrD;kBA7CoB,YAAY","file":"","sourceRoot":"/","sourcesContent":["\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n//用于场景预加载\r\n@ccclass\r\nexport default class LoadProgress extends cc.Component {\r\n\r\n    @property({type:cc.ProgressBar,tooltip:'进度条组件'})\r\n    loading_bar: cc.ProgressBar = null;\r\n\r\n    @property({type:cc.Node,tooltip:'进度条光 '})\r\n    loading_light: cc.Node = null;\r\n\r\n    @property({tooltip:'需要预加载的场景名字'})\r\n    scene_name: string = '';\r\n\r\n    @property({type:[cc.Component.EventHandler],tooltip:'进度条加载完毕后的回调'})\r\n    loaded_callback: cc.Component.EventHandler[] =[];\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {}\r\n\r\n    start () {\r\n\r\n    }\r\n    startLoad(name:string)\r\n    {\r\n        this.scene_name=name;\r\n        this.node.active=true;\r\n        cc.director.preloadScene(this.scene_name, this.onProgress.bind(this), ()=>{\r\n            //cc.director.loadScene(\"GameScene\");\r\n            if(this.loaded_callback.length>0)\r\n            {\r\n                for(let i=0; i<this.loaded_callback.length; i++)\r\n                {\r\n                    this.loaded_callback[i].emit(null);\r\n                }\r\n            }else\r\n            {\r\n                cc.director.loadScene(this.scene_name);\r\n            }\r\n\r\n        })    \r\n    }\r\n\r\n    onProgress(completedCount,totalCount,item){\r\n        this.node.active=true;\r\n        this.loading_bar.progress = completedCount/totalCount;\r\n        this.loading_light.x = this.loading_bar.progress*this.loading_bar.totalLength-this.loading_bar.totalLength/2;\r\n    }\r\n}\r\n"]}