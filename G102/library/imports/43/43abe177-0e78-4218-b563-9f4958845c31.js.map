{"version":3,"sources":["assets\\Scripts\\Monster\\Monster.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { Enemy_State, Enemy_Buff_Type, Enemy_DeBuff_Type, Enemy_Injured_Type } from \"../Enemy/EnemyConfig\";\r\nimport HpProgressBar from \"./HpProgressBar\";\r\nimport { GameEffectId, GameEffectsManager } from \"../Game/GameEffectsManager\";\r\nimport GameManager from \"../GameManager\";\r\nimport { GongJiData } from \"../Hero/Data/HeroData\";\r\nimport { KeyFrameData, MonsterFaceName, MonsterSkinType, InjuredData, FeedBackType, StrengthType, HiddenAttribute, MonsterAttData, MonsterSkillData, ColorType } from \"./MonsterData\";\r\nimport { JsonMonsterConfigure, MonsterConfigureManager } from \"./Data/MonsterConfigure\";\r\nimport MonsterManager from \"./MonsterManager\";\r\nimport { JsonMonsterGrowthAttributes, MonsterGrowthAttributesManager } from \"./Data/MonsterGrowthAttributes\";\r\nimport GroundManager from \"../Game/GroundManager\";\r\nimport { GameMode, GameState, Text_Type } from \"../Constants\";\r\nimport { MazeManager } from \"../Maze/MazeManager\";\r\nimport { BossChallengeManager } from \"../Activity/BossChallenge\";\r\nimport { BuffId, BuffType, DamageType, HaloData, HaloId, Hero_Type, SkillType } from \"../Hero/Game/HeroConfig\";\r\nimport BuffTimer from \"../Hero/Game/BuffTimer\";\r\nimport { BuffData } from \"../Hero/Game/BuffData\";\r\nimport SkillManager from \"../Game/SkillManager\";\r\nimport { JsonMonsterAttribute } from \"./Data/MonsterAttribute\";\r\nimport { SoundIndex } from \"../Sound/AudioConstants\";\r\nimport { MonsterSkillManager } from \"./Data/MonsterSkill\";\r\nimport Wall from \"../Wall/Wall\";\r\nimport WallManager from \"../Wall/WallManager\";\r\nimport { WallType } from \"../Wall/WallConfig\";\r\n\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n/**怪物通用类，只处理数据，不处理表现 */\r\n@ccclass\r\nexport default class Monster extends cc.Component {\r\n\r\n    protected spine: sp.Skeleton = null;\r\n    /**皮肤类型 */\r\n    protected skin_type: MonsterSkinType = MonsterSkinType.Skin1;\r\n    /**怪物id */\r\n    public monster_id: number = 10011;\r\n    /**怪物等级 */\r\n    protected monster_level: number = 1;\r\n    /**怪物血量系数 */\r\n    protected monster_hp_rate: number = 1;\r\n    /**怪物种类 */\r\n    public monster_type: number = 1;\r\n    /**怪物的最终战斗使用的数值,可更改 */\r\n    protected monster_data: JsonMonsterGrowthAttributes = null;\r\n    /**怪物的基础战斗数值，不可更改 */\r\n    protected base_attribute_data: JsonMonsterGrowthAttributes = null;\r\n    /**怪物的基础数值 */\r\n    protected base_data: JsonMonsterConfigure = null;\r\n    /**怪物的隐藏属性 */\r\n    hidden_attribute: HiddenAttribute = null;\r\n    protected cur_move_speed: number = 0;\r\n    protected move_target_pos: cc.Vec2 = null;\r\n    protected move_direction: number = Math.PI * 3 / 2;\r\n    /**朝向名称 */\r\n    protected face_type: MonsterFaceName = MonsterFaceName.Front;\r\n    /**当前的血量 */\r\n    protected cur_hp: number = 0;\r\n    /**最大的血量 */\r\n    protected max_hp: number = 0;\r\n    /**血条进度条 */\r\n    protected hp_progress: HpProgressBar = null;\r\n    /**阴影 */\r\n    protected shadow: cc.Node = null;\r\n    shadow_pos: cc.Vec2 = null;\r\n    shadow_size: cc.Size = null;\r\n    /**减伤率 */\r\n    jianshang_rate: number = 0;\r\n    /**增伤率 */\r\n    zengshang_rate: number = 0;\r\n    /**攻击间隔（秒，表示多少秒攻击一次） */\r\n    protected att_jiange: number = 1;\r\n    /**攻击计时 */\r\n    protected att_jishu: number = 0;\r\n    /**技能计时 */\r\n    protected skill_jishu: number = 0;\r\n    /**当前的攻击力 */\r\n    protected cur_att: number = 0;\r\n    /**当前的韧性 */\r\n    protected cur_toughness: number = 0;\r\n    /**攻击目标,攻击目标为null时，目标就是城墙 */\r\n    protected att_target: cc.Node = null;\r\n    /**怪物当前的状态 */\r\n    protected monster_state: Enemy_State = Enemy_State.standby;\r\n    /**怪物上一个状态 */\r\n    protected prev_state: Enemy_State = Enemy_State.standby;\r\n    /**怪物当前拥有的buff */\r\n    protected monster_buff: Map<BuffId, BuffTimer> = null;\r\n    /**怪物当前拥有的debuff */\r\n    protected monster_debuff: Map<BuffId, BuffTimer> = null;\r\n    /**指定的缩放值*/\r\n    protected setup_scale: number = 0.4;\r\n    protected is_boss: boolean = false;\r\n    public is_can_count: boolean = true;\r\n    protected is_count: boolean = true;\r\n    /**城墙的Y轴坐标 */\r\n    protected wall_yy: number = 0;\r\n    protected att_pos: cc.Vec2 = cc.v2(0, 0);\r\n    /**分数 */\r\n    public score: number = 0;\r\n    /**狙击瞄准的位置 */\r\n    protected juji_pos: cc.Vec2 = cc.v2(0, 0);\r\n    /**血条的位置 */\r\n    protected hp_pos: cc.Vec2 = cc.v2(0, 0);\r\n    /**中心位置，用于范围检测 */\r\n    protected center_pos: cc.Vec2 = cc.v2(0, 0);\r\n    //受伤动作\r\n    protected injured_action: cc.Tween = null;\r\n\r\n    /**初始化回调 */\r\n    private init_callback: Function = null;\r\n    /**怪物血量发生变化时的回调 */\r\n    private change_hp_callback: Function = null;\r\n    /**眩晕回调，用于boss施法被中断 */\r\n    private xuanyun_callback: Function = null;\r\n    /**死亡回调，怪物死亡时触发，用于播放自身对应的死亡动画 */\r\n    private death_callback: Function = null;\r\n    /**被主动技能受伤时的回调 */\r\n    private active_injury_callback: Function = null;\r\n    /**移动到目标地点回调 */\r\n    protected move_end_callback: Function = null;\r\n    /**debuff增伤统计 */\r\n    private injury_damage_stats: Map<number, number> = null;\r\n    /**沟壑伤害计算 */\r\n    is_can_gully: boolean = false;\r\n    /**拥有的光环 */\r\n    private monster_halo: Map<HaloId, HaloData> = null;\r\n    /**额外的闪避率 */\r\n    private ex_miss_rate: number = 0;\r\n    /**额外的防御力 */\r\n    private ex_defense_value: number = 0;\r\n    /**额外的移动速度 */\r\n    private ex_move_speed_value: number = 0;\r\n    /**-------------------------------技能的--------------------------------------------- */\r\n    /**技能数据 */\r\n    skill_data: MonsterSkillData = null;\r\n    /**所有技能的当前的冷却时间 */\r\n    skill_cold_down: number[] = [];\r\n    /**技能队列 */\r\n    skill_queue: number[] = [];\r\n    /**当前使用的技能,0代表没有 */\r\n    cur_skill_index: number = 0;\r\n    /**碰撞器 */\r\n    collider: cc.Collider = null;\r\n    /**要攻击的城墙 */\r\n    att_wall: Wall = null;\r\n    /**牵引最小距离 */\r\n    min_qianyin: number = 0;\r\n\r\n    cur_color: ColorType = ColorType.Null;\r\n\r\n    protected onLoad(): void {\r\n\r\n        this.spine = this.node.getComponent(sp.Skeleton);\r\n        this.loadInitPos();\r\n        this.wall_yy = GameManager.getInstance().enemy_att_y;\r\n        this.monster_buff = new Map<BuffId, BuffTimer>();\r\n        this.monster_debuff = new Map<BuffId, BuffTimer>();\r\n        this.monster_halo = new Map<HaloId, HaloData>();\r\n        this.collider = this.node.getComponent(cc.Collider);\r\n        this.collider.enabled = true;\r\n    }\r\n\r\n    init(monsterId: number, level: number, hpRate: number, isCanCount: boolean = true) {\r\n        this.monster_id = monsterId;\r\n        this.monster_level = level;\r\n        this.monster_hp_rate = hpRate;\r\n        let jsonData = MonsterConfigureManager.getInstance().getJsonMonsterConfigure(monsterId);\r\n        this.monster_type = jsonData.MonsterClass;\r\n        let attributeId = MonsterGrowthAttributesManager.getId(this.monster_id, level);\r\n        this.base_attribute_data = MonsterGrowthAttributesManager.getInstance().getJsonMonsterGrowthAttributes(attributeId);\r\n        this.is_can_gully = true;\r\n        this.is_can_count = isCanCount;\r\n        this.is_count = this.is_can_count;\r\n        this.ex_miss_rate = 0;\r\n        this.ex_defense_value = 0;\r\n        //this.initOutward(jsonData.Skin);        \r\n        this.initData(jsonData);\r\n        this.addHpProgress();\r\n        this.addShadow();\r\n        this.setEnemyState(Enemy_State.standby);\r\n        this.setColor(ColorType.Null);\r\n        this.collider = this.node.getComponent(cc.Collider);\r\n        this.collider.enabled = true;\r\n        this.min_qianyin = 0;\r\n        if (this.init_callback) {\r\n            this.init_callback();\r\n        }\r\n        //this.spine.paused=false;\r\n        //this.move_direction=Math.PI*3/2+Math.random()*(Math.PI/6)-(Math.PI/12);        \r\n    }\r\n\r\n    initSummon(monsterId: number, bossAttribute: JsonMonsterGrowthAttributes) {\r\n        this.monster_id = monsterId;\r\n        let jsonData = MonsterConfigureManager.getInstance().getJsonMonsterConfigure(monsterId);\r\n        this.monster_type = jsonData.MonsterClass;\r\n        this.is_can_gully = true;\r\n        this.is_can_count = false;\r\n        this.is_count = this.is_can_count;\r\n        this.base_attribute_data = cc.instantiate(bossAttribute);\r\n        switch (jsonData.StrengthType) {\r\n            case StrengthType.Elite: {\r\n                this.base_attribute_data.Health = bossAttribute.Health / 50;\r\n                this.base_attribute_data.Attack = bossAttribute.Attack * 0.9724;\r\n                this.base_attribute_data.Defense = bossAttribute.Defense * 0.6;\r\n            } break;\r\n            case StrengthType.Normal: {\r\n                this.base_attribute_data.Health = bossAttribute.Health / 50;\r\n                this.base_attribute_data.Attack = bossAttribute.Attack * 0.9592;\r\n                this.base_attribute_data.Defense = 0;\r\n            } break;\r\n        }\r\n        this.initData(jsonData);\r\n        this.addHpProgress();\r\n        this.addShadow();\r\n        this.setEnemyState(Enemy_State.standby);\r\n        this.setColor(ColorType.Null);\r\n        this.collider = this.node.getComponent(cc.Collider);\r\n        this.collider.enabled = true;\r\n        this.min_qianyin = 0;\r\n        if (this.init_callback) {\r\n            this.init_callback();\r\n        }\r\n    }\r\n\r\n    refreshData(level: number) {\r\n        this.monster_level = level;\r\n        let jsonData = MonsterConfigureManager.getInstance().getJsonMonsterConfigure(this.monster_id);\r\n        //重置数据\r\n        let attributeId = MonsterGrowthAttributesManager.getId(this.monster_id, level);\r\n        this.base_attribute_data = MonsterGrowthAttributesManager.getInstance().getJsonMonsterGrowthAttributes(attributeId);\r\n        this.monster_data = cc.instantiate(this.base_attribute_data);\r\n        this.base_data = jsonData;\r\n        this.cur_hp = this.max_hp = this.monster_data.Health;\r\n        this.cur_move_speed = this.base_data.Speed;\r\n        this.att_jiange = 1 / this.base_data.AttackSpeed;\r\n        this.cur_att = this.monster_data.Attack;\r\n        // if(this.base_data.SkillNum>0){\r\n        //     this.loadMonsterSkillData();\r\n        // }\r\n    }\r\n    /**初始化外观*/\r\n    // private initOutward(skinType:MonsterSkinType){\r\n    //     this.skin_type=skinType;\r\n    //     this.setSkin(this.getSkinName());\r\n    //     this.playSpinAnimaton(this.getAnimaName(MonsterActionName.Idle),true);\r\n    // }\r\n    /**初始化数据 */\r\n    private initData(baseData: JsonMonsterConfigure) {\r\n        this.monster_data = cc.instantiate(this.base_attribute_data);\r\n        this.base_data = baseData;\r\n        this.cur_hp = this.max_hp = this.monster_data.Health * this.monster_hp_rate;\r\n        this.cur_move_speed = this.base_data.Speed;\r\n        this.att_jiange = 1 / this.base_data.AttackSpeed;\r\n        this.cur_att = this.monster_data.Attack;\r\n        this.cur_toughness = 0;\r\n        this.setup_scale = this.base_data.Scale;\r\n        this.node.scale = this.setup_scale;\r\n        this.node.opacity = 255;\r\n        this.skin_type = baseData.Skin;\r\n        this.hidden_attribute = new HiddenAttribute();\r\n        this.injury_damage_stats = new Map<number, number>();\r\n        if (this.base_data.SkillNum > 0) {\r\n            this.loadMonsterSkillData();\r\n        }\r\n    }\r\n\r\n    private loadMonsterSkillData() {\r\n        let skillData = new MonsterSkillData();\r\n        skillData.ColdDown = new Map<number, number>();\r\n        skillData.InitColdDown = new Map<number, number>();\r\n        skillData.SkillValue_1 = new Map<number, number>();\r\n        skillData.SkillValue_2 = new Map<number, number>();\r\n        skillData.SkillValue_3 = new Map<number, number>();\r\n        skillData.SkillValue_4 = new Map<number, number>();\r\n        skillData.CastingRange = new Map<number, number>();\r\n        for (let s = 1; s <= this.base_data.SkillNum; s++) {\r\n            let id = MonsterSkillManager.getInstance().getId(this.monster_id, s, this.base_attribute_data.SkillLevel)\r\n            let jsonData = MonsterSkillManager.getInstance().getJsonMonsterSkill(id);\r\n            if (jsonData == null) continue;\r\n            skillData.SkillValue_1.set(s, jsonData.SkillValue_1);\r\n            skillData.SkillValue_2.set(s, jsonData.SkillValue_2);\r\n            skillData.SkillValue_3.set(s, jsonData.SkillValue_3);\r\n            skillData.SkillValue_4.set(s, jsonData.SkillValue_4);\r\n            skillData.ColdDown.set(s, jsonData.ColdDown);\r\n            skillData.InitColdDown.set(s, jsonData.InitialColdDown);\r\n            this.skill_cold_down[s - 1] = jsonData.InitialColdDown;\r\n            skillData.CastingRange.set(s, jsonData.CastingRange);\r\n        }\r\n\r\n        this.skill_data = skillData;\r\n    }\r\n\r\n    protected addHpProgress() {\r\n        if (!this.hp_progress) {\r\n            if (this.base_data.StrengthType != StrengthType.Boss) {\r\n                this.hp_progress = GameManager.getInstance().enemy_hp_manager.createEnemyHp(cc.v2(this.node.x + this.hp_pos.x * this.setup_scale, this.node.y + this.hp_pos.y * this.setup_scale)).getComponent(HpProgressBar);\r\n            }\r\n            this.showHp();\r\n        }\r\n    }\r\n\r\n    protected addShadow() {\r\n        //if(this.base_data.StrengthType!=StrengthType.Boss)\r\n        if (!this.shadow) {\r\n            this.shadow = GroundManager.getInstance().createShadow(this.node.getPosition().add(this.shadow_pos));\r\n            this.shadow.width = this.node.scaleX * this.shadow_size.width;\r\n            this.shadow.height = this.node.scaleY * this.shadow_size.height;\r\n        } else {\r\n            this.shadow.opacity = 255;\r\n            this.shadow.setPosition(this.node.getPosition().add(this.shadow_pos));\r\n        }\r\n    }\r\n\r\n    protected showHp() {\r\n        if (this.hp_progress) {\r\n            this.hp_progress.changeProgress(this.cur_hp / this.max_hp);\r\n        }\r\n    }\r\n\r\n    setIsCanCount(isCanCount: boolean) {\r\n        this.is_can_count = isCanCount;\r\n        // if(this.is_can_count==false){\r\n        //     cc.log('setIsCanCount==false');\r\n        // }\r\n    }\r\n\r\n    getSetupScale(): number {\r\n        return this.setup_scale;\r\n    }\r\n\r\n    getSheShouAttackScale(): number {\r\n        let scale = 0.3;\r\n        switch (this.base_data.StrengthType) {\r\n            case StrengthType.Normal: {\r\n                scale = 0.55;\r\n            } break;\r\n            case StrengthType.Elite: {\r\n                scale = 0.75;\r\n            } break;\r\n            case StrengthType.Boss: {\r\n                scale = 1.2;\r\n            } break;\r\n        }\r\n        return scale;\r\n    }\r\n\r\n    getWallAttackScale(): number {\r\n        let scale = 1;\r\n        switch (this.base_data.StrengthType) {\r\n            case StrengthType.Normal: {\r\n                scale = 0.6;\r\n            } break;\r\n            case StrengthType.Elite: {\r\n                scale = 0.9;\r\n            } break;\r\n        }\r\n        return scale;\r\n    }\r\n\r\n    getXuanyunScale(): number {\r\n        let scale = 0.3;\r\n        switch (this.base_data.StrengthType) {\r\n            case StrengthType.Normal: {\r\n                scale = 0.55 / this.setup_scale;\r\n            } break;\r\n            case StrengthType.Elite: {\r\n                scale = 0.75 / this.setup_scale;\r\n            } break;\r\n            case StrengthType.Boss: {\r\n                scale = 1.5 / this.setup_scale;\r\n            } break;\r\n        }\r\n        return scale;\r\n    }\r\n\r\n    getStrengthType(): StrengthType {\r\n        return this.base_data.StrengthType;\r\n    }\r\n\r\n    getMonsterData(): JsonMonsterGrowthAttributes {\r\n        return this.monster_data;\r\n    }\r\n\r\n    /**计算伤害数据 */\r\n    getInjuredData(gjData: GongJiData): InjuredData {\r\n        let data = new InjuredData();\r\n        if (this.getIsDie()) {\r\n            data.feedback_type = FeedBackType.Die;\r\n            return data;\r\n        }\r\n        let gm = GameManager.getInstance();\r\n        let missRate = 0;\r\n        let critRate = 0;\r\n        //如果是普通攻击，计算闪避和暴击，默认为0\r\n        let heroData = gjData.hero_data;\r\n        //怪物的防御力\r\n        let selfDefense = this.monster_data.Defense + this.ex_defense_value;\r\n        let finalDefense = InjuredData.calcFinalDefense(selfDefense, heroData.ignore_defense_rate)\r\n        if (gjData.damage_type == DamageType.Normal) {\r\n            if (this.isHaveBuff(BuffId.Boss2_MianYi_Attack)) {\r\n                data.feedback_type = FeedBackType.MainYi;\r\n                data.text_type = Enemy_Injured_Type.WuDi;\r\n                gm.hp_text_manager.createTypeText(cc.v2(this.node.x, this.node.y + 60), Enemy_Injured_Type.WuDi, null);\r\n                return data;\r\n            }\r\n            missRate = InjuredData.calcMissRate(this.monster_data.Miss, gjData.hero_data.Hit) + this.ex_miss_rate - gjData.hero_data.hit_ex;\r\n            critRate = InjuredData.calcCritRate(gjData.hero_data.Critical, this.monster_data.AntiCritical);\r\n            critRate += gjData.hero_data.crit_ex;\r\n            //获取一个概率类型\r\n            let type = InjuredData.calcOnceType([missRate, critRate, 1]);\r\n            switch (type) {\r\n                case 0: {\r\n                    //闪避\r\n                    data.feedback_type = FeedBackType.ShanBi;\r\n                    data.setDamageNum(0);\r\n                    data.text_type = Enemy_Injured_Type.ShanBi;\r\n                    gm.hp_text_manager.createTypeText(cc.v2(this.node.x, this.node.y + 60), Enemy_Injured_Type.ShanBi, null);\r\n                } break;\r\n                case 1: {\r\n                    //暴击\r\n                    data.feedback_type = FeedBackType.BaoJi;\r\n                    let damage = InjuredData.calcNormalCritDamageNum(heroData.total_attack, finalDefense, heroData.attack_increase_damage + heroData.all_increase_damage, this.jianshang_rate, InjuredData.calcFinalExtraCrit(heroData.ExtraCritical, this.monster_data.AntiExtraCritical));\r\n                    data.setDamageNum(damage);\r\n                    data.text_type = Enemy_Injured_Type.BaoJi;\r\n                    if (gjData.pet_id == 0) {\r\n                        GameManager.getInstance().all_hero.get(gjData.hero_type).onDamageMonster(DamageType.Normal, true, this.node);\r\n                    }\r\n                    if (!gm.is_show_text) {\r\n                        gm.hp_text_manager.createTypeText(cc.v2(this.node.x, this.node.y + 60), data.text_type, null);\r\n                    }\r\n                } break;\r\n                case 2: {\r\n                    //普通命中\r\n                    data.feedback_type = FeedBackType.Null;\r\n                    let damage = InjuredData.calcNormalDamageNum(heroData.total_attack, finalDefense, heroData.attack_increase_damage + heroData.all_increase_damage, this.jianshang_rate);\r\n                    data.setDamageNum(damage);\r\n                    data.text_type = Enemy_Injured_Type.Normal_Attack;\r\n                    if (gjData.pet_id == 0) {\r\n                        GameManager.getInstance().all_hero.get(gjData.hero_type).onDamageMonster(DamageType.Normal, false, this.node);\r\n                    }\r\n                } break;\r\n            }\r\n        } else if (gjData.damage_type == DamageType.Skill) {\r\n            //不需要计算闪避，技能必中\r\n            data.feedback_type = FeedBackType.Null;\r\n            let damage = 0;\r\n            if (gjData.is_can_crit) {\r\n                critRate = InjuredData.calcCritRate(gjData.hero_data.Critical, this.monster_data.AntiCritical);\r\n                critRate += gjData.hero_data.crit_ex;\r\n                //获取一个概率类型\r\n                let type = InjuredData.calcOnceType([0, critRate, 1]);\r\n                if (type == 1) {\r\n                    data.feedback_type = FeedBackType.BaoJi;\r\n                    data.text_type = Enemy_Injured_Type.BaoJi;\r\n                    damage = InjuredData.calcSkillCritDamageNum(heroData.total_attack, gjData.skill_damage_rate, finalDefense, heroData.skill_increase_damage + heroData.all_increase_damage + heroData.attack_increase_damage, this.jianshang_rate, InjuredData.calcFinalExtraCrit(heroData.ExtraCritical, this.monster_data.AntiExtraCritical));\r\n                    if (!gm.is_show_text) {\r\n                        gm.hp_text_manager.createTypeText(cc.v2(this.node.x, this.node.y + 60), data.text_type, null);\r\n                    }\r\n                } else {\r\n                    damage = InjuredData.calcSkillDamageNum(heroData.total_attack, gjData.skill_damage_rate, finalDefense, heroData.skill_increase_damage + heroData.all_increase_damage + heroData.attack_increase_damage, this.jianshang_rate);\r\n                }\r\n            } else {\r\n                damage = InjuredData.calcSkillDamageNum(heroData.total_attack, gjData.skill_damage_rate, finalDefense, heroData.skill_increase_damage + heroData.all_increase_damage + heroData.attack_increase_damage, this.jianshang_rate);\r\n            }\r\n            data.setDamageNum(damage);\r\n            if (gjData.pet_id == 0) {\r\n                GameManager.getInstance().all_hero.get(gjData.hero_type).onDamageMonster(DamageType.Skill, false, this.node);\r\n            }\r\n        }\r\n        return data;\r\n    }\r\n    /**\r\n     * 瞬间伤害\r\n     * @param gjData 攻击类型\r\n     * @returns \r\n     */\r\n    beFlashInjured(gjData: GongJiData): InjuredData {\r\n        let data = this.getInjuredData(gjData);\r\n        this.beDamage(data, gjData);\r\n        return data;\r\n    }\r\n\r\n    private beContinuousInjured(gjData: GongJiData, floorNum: number = 1) {\r\n        if (gjData.continuous_damage_rate > 0) {\r\n            //怪物的防御力\r\n            let selfDefense = this.monster_data.Defense + this.ex_defense_value;\r\n            let finalDefense = InjuredData.calcFinalDefense(selfDefense, gjData.hero_data.ignore_defense_rate)\r\n            let heroData = gjData.hero_data;\r\n            let data = new InjuredData();\r\n            let damage = InjuredData.calcSkillDamageNum(heroData.total_attack, gjData.continuous_damage_rate, finalDefense, heroData.skill_increase_damage + heroData.all_increase_damage, this.jianshang_rate);\r\n            data.text_type = Enemy_Injured_Type.ZhongDu;\r\n            if (gjData.hero_type == Hero_Type.NvWu) {\r\n                damage = damage * floorNum;\r\n            }\r\n            data.setDamageNum(damage);\r\n            this.beDamage(data, gjData);\r\n        }\r\n    }\r\n    /**造成真实伤害，直接造成对应的伤害值,无法闪避 */\r\n    beRealDamage(gjData: GongJiData, damage: number): InjuredData {\r\n        let data = new InjuredData();\r\n        data.setDamageNum(damage);\r\n        this.beDamage(data, gjData);\r\n        return data;\r\n    }\r\n    /**恢复生命值是否成功 */\r\n    beHeal(num: number): boolean {\r\n        if (this.getCurHp() >= this.getMaxHp() || this.getIsDie() == true) {\r\n            return false;\r\n        }\r\n        /**目前没有治疗效果加成，只有重伤，只计算重伤 */\r\n        let newNum = num * (1 - this.getMaxSeriously())\r\n        this.changeHp(newNum);\r\n        GameManager.getInstance().hp_text_manager.createHpTextHp(this.getCenterPos(), newNum, Enemy_Injured_Type.ZhiLiao);\r\n        return true;\r\n    }\r\n\r\n    private beDamage(data: InjuredData, gjData: GongJiData) {\r\n        if (this.getStrengthType() == StrengthType.Boss && this.isHaveBuff(BuffId.Boss9_Skill_3_widu)) {\r\n            data.feedback_type = FeedBackType.MainYi;\r\n            data.text_type = Enemy_Injured_Type.WuDi;\r\n            GameManager.getInstance().hp_text_manager.createTypeText(cc.v2(this.node.x, this.node.y + 60), Enemy_Injured_Type.WuDi, null);\r\n            return;\r\n        }\r\n        if (data.getDamageNum() > 0) {\r\n            let gm = GameManager.getInstance();\r\n            data.is_die = this.changeHp(-data.getDamageNum());\r\n            if (gm.is_show_text && data.getDamageNum() > 0) {\r\n                gm.hp_text_manager.createHpTextHp(cc.v2(this.node.x, this.node.y + Math.random() * 100), data.getDamageNum(), data.text_type);\r\n            }\r\n            if (!data.is_die) {\r\n                this.startHurt();\r\n            }\r\n            //吸血效果\r\n            if (gjData.hero_data.blood_sucking_rate > 0 && data.getDamageNum() > 0) {\r\n                let hp = InjuredData.calcBloodSucking(data.getDamageNum(), gjData.hero_data.blood_sucking_rate, gjData.hero_data.serious_injury_rate);\r\n                if (hp > 0) {\r\n                    WallManager.getInstance().getMainWall().changeHp(hp);\r\n                }\r\n            }\r\n            /**记录最高伤害 */\r\n            gm.setMaxDamage(data.getDamageNum());\r\n            gm.setMinDamage(data.getDamageNum());\r\n            if (gjData.skill_release_id > 0) {\r\n                SkillManager.getInstance().recordDamage(gjData.skill_release_id, data.getDamageNum());\r\n                if (this.active_injury_callback) {\r\n                    this.active_injury_callback();\r\n                }\r\n            }\r\n            /**记录DPS */\r\n            switch (gjData.damage_type) {\r\n                case DamageType.Normal: {\r\n                    gm.hero_attack_dps[gjData.hero_type] += data.getDamageNum();\r\n                } break;\r\n                case DamageType.Skill: {\r\n                    gm.hero_skill_dps[gjData.hero_type] += data.getDamageNum();\r\n                } break;\r\n            }\r\n            // /**冰女额外真实伤害 */\r\n            // if(SkillManager.getInstance().getBingNvSkill2()>0&&this.isHaveDeBuffType(BuffType.Slowdown)){\r\n            //     let damage=data.getDamageNum()*SkillManager.getInstance().getBingNvSkill2();\r\n            //     if(damage<1){\r\n            //         damage=1;\r\n            //     }\r\n            //     this.changeHp(-damage);\r\n            //     gm.hero_skill_dps[Hero_Type.BingNv]+=damage;\r\n            //     if(gm.is_show_text){\r\n            //         gm.hp_text_manager.createHpTextHp(cc.v2(this.node.x,this.node.y+32),damage,Enemy_Injured_Type.BingNvZhenShang);\r\n            //     }\r\n            // }\r\n            // /**阿努比斯额外真实伤害 */\r\n            // if(SkillManager.getInstance().getANuBiSiSkill2()>0){\r\n            //     if(this.isHaveDeBuffType(BuffType.Slowdown)||this.isHaveDeBuffType(BuffType.Vertigo)){\r\n            //         let damage=data.getDamageNum()*SkillManager.getInstance().getANuBiSiSkill2();\r\n            //         if(damage<1){\r\n            //             damage=1;\r\n            //         }\r\n            //         this.changeHp(-damage);\r\n            //         gm.hero_skill_dps[Hero_Type.ANuBiSi]+=damage;\r\n            //         if(gm.is_show_text){\r\n            //             gm.hp_text_manager.createHpTextHp(cc.v2(this.node.x,this.node.y+32),damage,Enemy_Injured_Type.ANuBiSiZhenShang);\r\n            //         }\r\n            //         GroundManager.getInstance().createGameEffectById(GameEffectId.a_nu_bi_si_beidong_skill_2,this.node.getPosition());\r\n            //     }\r\n            // }\r\n            /**德鲁伊额外真实伤害 */\r\n            if (SkillManager.getInstance().getDeLuYiEx() && this.isHaveDeBuff(BuffId.Hero_DeLuYi_Ex)) {\r\n                let damage = data.getDamageNum() * SkillManager.getInstance().getDeLuYiEx();\r\n                if (damage < 1) {\r\n                    damage = 1;\r\n                }\r\n                this.changeHp(-damage);\r\n                gm.hero_skill_dps[Hero_Type.DeLuYi] += damage;\r\n                if (gm.is_show_text) {\r\n                    gm.hp_text_manager.createHpTextHp(cc.v2(this.node.x, this.node.y + 32), damage, Enemy_Injured_Type.Normal_Attack);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**更改hp，返回是否死亡 */\r\n    protected changeHp(num: number): boolean {\r\n        if (this.getIsDie() || this.getEnemyState() == Enemy_State.born || GameManager.getInstance().cur_game_state != GameState.Game_Playing) {\r\n            return false;\r\n        }\r\n        let isDie = false;\r\n        this.cur_hp += num;\r\n        if (GameManager.getInstance().cur_game_mode == GameMode.Boss_Challenge) {\r\n            if (this.base_data.StrengthType == StrengthType.Boss) {\r\n                if (this.cur_hp <= 0) {\r\n                    this.cur_hp = 1;\r\n                }\r\n                if (this.change_hp_callback) {\r\n                    this.change_hp_callback(num);\r\n                }\r\n                let useLevel = BossChallengeManager.getInstance().addScore(Math.abs(Math.round(num)));\r\n                if (useLevel != this.monster_level) {\r\n                    this.refreshData(useLevel);\r\n                }\r\n                return false;\r\n            }\r\n        }\r\n        if (this.cur_hp <= 0) {\r\n            this.startDeath();\r\n            isDie = true;\r\n        }\r\n        if (this.cur_hp > this.max_hp) {\r\n            this.cur_hp = this.max_hp\r\n        }\r\n        // if(isDie==false&&GameManager.getInstance().cur_game_mode==GameMode.Maze){\r\n        //     if(this.cur_hp<(this.max_hp*0.1)){\r\n        //         if(MazeManager.getInstance().isHaveABuff([8003])){                \r\n        //             this.changeHp(-this.cur_hp);\r\n        //             GameEffectsManager.getInstance().createGameEffectForParent(GameEffectId.pet_21_active_3_liandao,cc.v2(0,200),this.node,()=>{\r\n        //                 GameEffectsManager.getInstance().createGameEffectById(GameEffectId.pet_21_active_2_liandao_drop_hit,this.node.getPosition());\r\n        //             });\r\n        //         }\r\n        //     }            \r\n        // }\r\n        if (this.change_hp_callback) {\r\n            this.change_hp_callback(num);\r\n        }\r\n        this.showHp();\r\n        return isDie;\r\n    }\r\n\r\n    addBuff(buffData: BuffData): BuffTimer {\r\n        if (this.monster_buff.has(buffData.buff_id) == false) {\r\n            //添加buff节点和特效       \r\n            let node: cc.Node = null;\r\n            if (buffData.game_effect_id == GameEffectId.Null) {\r\n                node = new cc.Node(buffData.game_effect_id.toString());\r\n                node.setPosition(this.juji_pos);\r\n                this.node.addChild(node);\r\n            } else {\r\n                node = GameEffectsManager.getInstance().createGameEffectForParent(buffData.game_effect_id, this.juji_pos, this.node);\r\n                node.scale = this.getSheShouAttackScale();\r\n            }\r\n            //添加buff\r\n            let buff: BuffTimer = node.getComponent(BuffTimer);\r\n            if (!buff) {\r\n                buff = node.addComponent(BuffTimer);\r\n            }\r\n            buff.init(buffData);\r\n            //buff治疗触发时处理\r\n            if (buffData.recovery_jiange_time > 0) {\r\n                buff.addRecoveryListen({\r\n                    doRecovery: (num: number) => {\r\n                        this.beHeal(num);\r\n                    }\r\n                }, buff.getFirstBuffValue());\r\n            }\r\n            this.monster_buff.set(buffData.buff_id, buff);\r\n            //buff销毁时处理\r\n            buff.addDestroyListen(this.onBuffDestory.bind(this));\r\n            switch (buffData.buff_type) {\r\n                case BuffType.MoveSpeedUp: {\r\n                    this.refreshMoveSpeed(0);\r\n                } break;\r\n                case BuffType.AttSpeedUp: {\r\n                    this.changeAttackSpeed(buffData.buff_value[0]);\r\n                } break;\r\n            }\r\n            switch (buffData.buff_id) {\r\n                case BuffId.Boss9_Skill_1_guozai: {\r\n                    this.zengshang_rate += buffData.buff_value[0];\r\n                    this.monster_data.Defense -= this.base_attribute_data.Defense * (buffData.buff_value[1]);\r\n                } break;\r\n                case BuffId.Boss10_Skill_4_kuangbao_gjl: {\r\n                    this.monster_data.Attack += this.base_attribute_data.Attack * (buffData.buff_value[0]);\r\n                } break;\r\n            }\r\n            return buff;\r\n        } else {\r\n            //如果有buff，则刷新时间,重新计时\r\n            let buff = this.monster_buff.get(buffData.buff_id);\r\n            buff.refreshBuff(buffData);\r\n            return buff;\r\n        }\r\n\r\n    }\r\n\r\n    subBuff(buffId: BuffId): boolean {\r\n        let buff = this.monster_buff.get(buffId);\r\n        if (buff) {\r\n            buff.destroySelf();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    onBuffDestory(buffData: BuffData) {\r\n        this.monster_buff.delete(buffData.buff_id);\r\n        switch (buffData.buff_type) {\r\n            case BuffType.MoveSpeedUp: {\r\n                this.refreshMoveSpeed(0);\r\n            } break;\r\n            case BuffType.AttSpeedUp: {\r\n                this.changeAttackSpeed(-buffData.buff_value[0]);\r\n            } break;\r\n        }\r\n        switch (buffData.buff_id) {\r\n            case BuffId.Boss9_Skill_1_guozai: {\r\n                this.zengshang_rate -= buffData.buff_value[0];\r\n                this.monster_data.Defense += this.base_attribute_data.Defense * (buffData.buff_value[1]);\r\n            } break;\r\n            case BuffId.Boss10_Skill_4_kuangbao_gjl: {\r\n                this.monster_data.Attack -= this.base_attribute_data.Attack * (buffData.buff_value[0]);\r\n            } break;\r\n        }\r\n    }\r\n\r\n    isHaveBuff(buffId: BuffId): boolean {\r\n        return this.monster_buff.has(buffId);\r\n    }\r\n\r\n    getBuff(buffId: BuffId): BuffTimer {\r\n        return this.monster_buff.get(buffId);\r\n    }\r\n\r\n    isHaveBuffType(buffType: BuffType): boolean {\r\n        let isHave = false;\r\n        this.monster_buff.forEach((buff: BuffTimer) => {\r\n            if (isHave == false && buff.getBuffType() == buffType) {\r\n                isHave = true;\r\n            }\r\n        })\r\n        return isHave;\r\n    }\r\n\r\n    removeAllBuff() {\r\n        this.monster_buff.forEach((buff: BuffTimer) => {\r\n            buff.destroySelf();\r\n        })\r\n    }\r\n\r\n    addDeBuff(buffData: BuffData, gjData: GongJiData): BuffTimer {\r\n        if (this.getIsDie()) {\r\n            return;\r\n        }\r\n        if (!this.isHaveDeBuff(buffData.buff_id)) {\r\n            //控制类的debuff需要根据韧性来实现具体的效果\r\n            let buffType = buffData.buff_type;\r\n            switch (buffType) {\r\n                case BuffType.Vertigo: {\r\n                    if (this.cur_toughness >= 1) {\r\n                        GameManager.getInstance().hp_text_manager.createTypeText(cc.v2(this.node.x, this.node.y + 60), Enemy_Injured_Type.MianYiKongZhi, null);\r\n                        if (this.isHaveBuff(BuffId.Boss3_MianYi_KongZhi)) {\r\n                            this.getBuff(BuffId.Boss3_MianYi_KongZhi).addFloor();\r\n                        }\r\n                        return null;\r\n                    }\r\n                    if (gjData) {\r\n                        buffData.remain_time = InjuredData.calcControlTime(buffData.remain_time, this.cur_toughness, gjData.hero_data.insight);\r\n                    }\r\n                    switch (buffData.buff_id) {\r\n                        case BuffId.Hero_XuanYun: {\r\n                            this.att_jishu = 0;\r\n                            if (this.xuanyun_callback) {\r\n                                this.xuanyun_callback(true);\r\n                            } else {\r\n                                this.spine.paused = true;\r\n                            }\r\n                        } break;\r\n                        case BuffId.Hero_MeiMo_Active_MeiHuo: {\r\n                            //魅惑对BOSS无效\r\n                            if (this.getStrengthType() != StrengthType.Boss) {\r\n                                this.att_jishu = 0;\r\n                                //走向英雄\r\n                                let meimo = GameManager.getInstance().getHero(Hero_Type.MeiMo);\r\n                                let mmPos = meimo.node.getPosition();\r\n                                let offsetPos = mmPos.sub(this.node.getPosition());\r\n                                let radian = Math.atan2(offsetPos.y, offsetPos.x);\r\n                                this.setMoveDir(radian);\r\n                                this.setEnemyState(Enemy_State.move);\r\n                            } else {\r\n                                return;\r\n                            }\r\n                        } break;\r\n                    }\r\n\r\n                } break;\r\n            }\r\n            //添加buff节点和特效       \r\n            let node: cc.Node = null;\r\n            if (buffData.game_effect_id == GameEffectId.Null) {\r\n                node = new cc.Node(buffData.game_effect_id.toString());\r\n                node.setPosition(this.juji_pos);\r\n                this.node.addChild(node);\r\n            } else {\r\n                node = GameEffectsManager.getInstance().createGameEffectForParent(buffData.game_effect_id, this.juji_pos, this.node);\r\n                node.scale = this.getSheShouAttackScale();\r\n            }\r\n            //添加buff\r\n            let buff: BuffTimer = node.getComponent(BuffTimer);\r\n            if (!buff) {\r\n                buff = node.addComponent(BuffTimer);\r\n            }\r\n            buff.init(buffData);\r\n            //buff销毁时处理\r\n            buff.addDestroyListen(this.onDebuffDestory.bind(this));\r\n            //buff伤害触发时处理\r\n            if (buffData.damage_jiange_time > 0 && gjData) {\r\n                buff.addDamageListen({\r\n                    doDamage: (gjData: GongJiData) => {\r\n                        this.beContinuousInjured(gjData, buff.getFloorNum());\r\n                    }\r\n                }, gjData);\r\n            }\r\n            this.monster_debuff.set(buffData.buff_id, buff);\r\n            switch (buffType) {\r\n                case BuffType.Vertigo: {\r\n                    node.scale = this.getXuanyunScale();\r\n                } break;\r\n                case BuffType.Slowdown: {\r\n                    //处理一下减速buff\r\n                    this.refreshMoveSpeed(this.hidden_attribute.slow_resistance);\r\n                } break;\r\n                case BuffType.Burst: {\r\n                    //处理buff爆发\r\n                    if (buffData.buff_id == BuffId.Hero_LeiShen_ChaoFuHe) {\r\n                        if (gjData)\r\n                            buff.addBurstListen(buffData.buff_value[0], this.onBuffBurst.bind(this), gjData)\r\n                    }\r\n                } break;\r\n            }\r\n            switch (buffData.buff_id) {\r\n                case BuffId.Hero_ChangMaoShow_Skill: {\r\n                    let scale = 1 / this.setup_scale;\r\n                    node.scale = scale;\r\n                    node.stopAllActions();\r\n                    cc.tween(node).to(0.1, { scale: scale * 1.1, opacity: 255 }).to(0.1, { scale: node.scale, opacity: 128 }).start();\r\n                } break;\r\n                case BuffId.Hero_MeiMo_Active_MeiHuo: {\r\n                    this.refreshMoveSpeed(0);\r\n                } break;\r\n                case BuffId.Boss_Mode_JianShang: {\r\n                    this.jianshang_rate += buffData.buff_value[0];\r\n                } break;\r\n                case BuffId.Hero_NvWu_ExSkill_JianGongSu: {\r\n                    this.changeAttackSpeed(-buffData.buff_value[0]);\r\n                } break;\r\n            }\r\n            return buff;\r\n        } else {\r\n            let buff = this.monster_debuff.get(buffData.buff_id);\r\n            buff.refreshBuff(buffData);\r\n            switch (buffData.buff_id) {\r\n                case BuffId.Hero_ChangMaoShow_Skill: {\r\n                    let node = this.monster_debuff.get(buffData.buff_id).node;\r\n                    let scale = 1 / this.setup_scale;\r\n                    node.scale = scale;\r\n                    node.stopAllActions();\r\n                    cc.tween(node).to(0.1, { scale: scale * 1.1, opacity: 255 }).to(0.1, { scale: node.scale, opacity: 128 }).start();\r\n                } break;\r\n            }\r\n            return buff;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 去除一个debuff\r\n     * @param buff debuff类型\r\n     * @param isNeedRecycle 是否需要调用回收\r\n     * @returns \r\n     */\r\n    subDeBuff(buffId: BuffId): boolean {\r\n        let buff = this.monster_debuff.get(buffId);\r\n        if (buff) {\r\n            buff.destroySelf();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isHaveDeBuff(buffId: BuffId): boolean {\r\n        return this.monster_debuff.has(buffId);\r\n    }\r\n\r\n    getDeBuff(buffId: BuffId): BuffTimer {\r\n        return this.monster_debuff.get(buffId);\r\n    }\r\n\r\n    isHaveDeBuffType(buffType: BuffType): boolean {\r\n        let isHave = false;\r\n        this.monster_debuff.forEach((buff: BuffTimer) => {\r\n            if (isHave == false && buff.getBuffType() == buffType) {\r\n                isHave = true;\r\n            }\r\n        })\r\n        return isHave;\r\n    }\r\n\r\n    removeAllDeBuff() {\r\n        this.monster_debuff.forEach((v, k) => {\r\n            this.subDeBuff(v.getBuffId());\r\n        })\r\n    }\r\n\r\n    onDebuffDestory(buffData: BuffData) {\r\n        this.monster_debuff.delete(buffData.buff_id);\r\n        switch (buffData.buff_type) {\r\n            case BuffType.Vertigo: {\r\n                switch (buffData.buff_id) {\r\n                    case BuffId.Hero_XuanYun: {\r\n                        this.spine.paused = false;\r\n                        if (this.xuanyun_callback) {\r\n                            this.xuanyun_callback(false);\r\n                        }\r\n                    } break;\r\n                    case BuffId.Hero_MeiMo_Active_MeiHuo: {\r\n                        //魅惑对BOSS无效,往下走\r\n                        if (this.getStrengthType() != StrengthType.Boss) {\r\n                            this.setMoveDir(Math.PI * 3 / 2);\r\n                            this.refreshMoveSpeed(0);\r\n                        } else {\r\n                            return;\r\n                        }\r\n                    } break;\r\n                }\r\n\r\n            } break;\r\n            case BuffType.Slowdown: {\r\n                //处理一下减速buff\r\n                this.refreshMoveSpeed(this.hidden_attribute.slow_resistance);\r\n            } break;\r\n        }\r\n        switch (buffData.buff_id) {\r\n            case BuffId.Boss_Mode_JianShang: {\r\n                this.jianshang_rate -= buffData.buff_value[0];\r\n            } break;\r\n            case BuffId.Hero_NvWu_ExSkill_JianGongSu: {\r\n                this.changeAttackSpeed(+buffData.buff_value[0]);\r\n            } break;\r\n        }\r\n    }\r\n\r\n    onBuffBurst(buffData: BuffData, gjData: GongJiData) {\r\n        if (buffData.buff_id == BuffId.Hero_LeiShen_ChaoFuHe) {\r\n            GameManager.getInstance().sound_manager.playSound(SoundIndex.YX_LeiGodSkill1);\r\n            /**当敌人身上的超负荷达到5层时，会受到落雷攻击造成{参数1}伤害并击晕{参数2}秒 */\r\n            let data = this.beFlashInjured(gjData);\r\n            if (data.is_die == false && data.getDamageNum() > 0) {\r\n                //GroundManager.getInstance().createGameEffectById(GameEffectId.lei_shen_skill_ground,this.shadow.getPosition());\r\n                let node = GameEffectsManager.getInstance().createGameEffectById(GameEffectId.lei_shen_skill_sky, this.shadow.getPosition());\r\n                node.scaleX = 0.8;\r\n                node.scaleY = 1;\r\n                if (this.getStrengthType() != StrengthType.Boss && data.is_die == false) {\r\n                    let buffData = new BuffData();\r\n                    buffData.buff_id = BuffId.Hero_XuanYun;\r\n                    buffData.game_effect_id = GameEffectId.xuanyun;\r\n                    buffData.buff_type = BuffType.Vertigo;\r\n                    buffData.remain_time = gjData.hero_data.getSkillValue2(SkillType.Passive_2);\r\n                    this.addDeBuff(buffData, gjData);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**刷新移速,slowResistance:减速抗性 */\r\n    private refreshMoveSpeed(slowResistance: number) {\r\n        //实际减速\r\n\r\n        if (this.isHaveDeBuff(BuffId.Hero_MeiMo_Active_MeiHuo)) {\r\n            this.cur_move_speed = 30;\r\n        } else {\r\n            let value = InjuredData.calcSlowDownNum(this.base_data.Speed + this.ex_move_speed_value, this.getMaxSlowDownValue(), slowResistance, this.getMaxSpeedUpValue());\r\n            this.cur_move_speed = value;\r\n            this.setColor(this.cur_move_speed < this.base_data.Speed ? ColorType.SlowDown : ColorType.Null);\r\n        }\r\n        if (this.getStrengthType() != StrengthType.Boss)\r\n            this.spine.timeScale = this.cur_move_speed / (this.base_data.Speed);\r\n    }\r\n\r\n\r\n    // /**刷新减速buff的处理 */\r\n    // private refreshSlowdown(){\r\n    //     //找出所有减速类型的buff\r\n    //     let slowBuff=new Array<BuffTimer>();\r\n    //     this.monster_debuff.forEach((v,k)=>{\r\n    //         if(v.getBuffType()==BuffType.Slowdown){\r\n    //             slowBuff.push(v);\r\n    //         }\r\n    //     });\r\n    //     if(slowBuff.length>0){\r\n    //         slowBuff.sort((a,b)=>{\r\n    //             return b.getFirstBuffValue()-a.getFirstBuffValue();\r\n    //         });\r\n    //         let maxBuff=slowBuff[0];\r\n    //         //实际减速\r\n    //         let value=InjuredData.calcSlowDownNum(this.base_data.Speed,maxBuff.getFirstBuffValue(),this.hidden_attribute.slow_resistance,this.getMaxSpeedUpValue());\r\n    //         this.cur_move_speed=value;\r\n    //         this.setColor(ColorType.SlowDown);\r\n    //     }else{\r\n    //         this.cur_move_speed=this.base_data.Speed;\r\n    //         this.setColor(ColorType.Null);\r\n    //     }\r\n    // }\r\n\r\n    // /**刷新加速buff的处理 */\r\n    // private refreshSpeedUp(){\r\n    //     //找出所有加速类型的buff\r\n    //     let speedBuff=new Array<BuffTimer>();\r\n    //     this.monster_buff.forEach((v,k)=>{\r\n    //         if(v.getBuffType()==BuffType.SpeedUp){\r\n    //             speedBuff.push(v);\r\n    //         }\r\n    //     });\r\n    //     if(speedBuff.length>0){\r\n    //         speedBuff.sort((a,b)=>{\r\n    //             return b.getFirstBuffValue()-a.getFirstBuffValue();\r\n    //         });\r\n    //         let maxBuff=speedBuff[0];\r\n    //         //实际加速速\r\n    //         let offsetValue=this.base_data.Speed*maxBuff.getFirstBuffValue();\r\n    //         //let value=InjuredData.calcSlowDownNum(,maxBuff.getFirstBuffValue(),this.hidden_attribute.slow_resistance);\r\n    //         this.cur_move_speed=this.cur_move_speed+offsetValue;\r\n    //     }else{\r\n    //         /**加减速需要处理，判断减速 */\r\n    //         this.cur_move_speed=this.base_data.Speed;\r\n    //     }        \r\n    // }\r\n\r\n    /**获得最大值的减速比率 */\r\n    private getMaxSlowDownValue(): number {\r\n        //找出所有加速类型的buff\r\n        let buff = new Array<BuffTimer>();\r\n        this.monster_debuff.forEach((v, k) => {\r\n            if (v.getBuffType() == BuffType.Slowdown) {\r\n                buff.push(v);\r\n            }\r\n        });\r\n        if (buff.length > 0) {\r\n            buff.sort((a, b) => {\r\n                return b.getFirstBuffValue() - a.getFirstBuffValue();\r\n            });\r\n            let maxBuff = buff[0];\r\n            return maxBuff.getFirstBuffValue();\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    /**获得最大值的加速比率 */\r\n    private getMaxSpeedUpValue(): number {\r\n        //找出所有加速类型的buff\r\n        let speedBuff = new Array<BuffTimer>();\r\n        this.monster_buff.forEach((v, k) => {\r\n            if (v.getBuffType() == BuffType.MoveSpeedUp) {\r\n                speedBuff.push(v);\r\n            }\r\n        });\r\n        if (speedBuff.length > 0) {\r\n            speedBuff.sort((a, b) => {\r\n                return b.getFirstBuffValue() - a.getFirstBuffValue();\r\n            });\r\n            let maxBuff = speedBuff[0];\r\n            return maxBuff.getFirstBuffValue();\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    /**设置攻速，每秒攻击次数 */\r\n    private setAttackSpeed(numSec: number) {\r\n        if (numSec > 10) {\r\n            numSec = 10;\r\n        }\r\n        if (numSec < 0.1) {\r\n            numSec = 0.1;\r\n        }\r\n        this.att_jiange = 1 / numSec;\r\n    }\r\n    /**改变当前攻速,rate:比率 */\r\n    protected changeAttackSpeed(rate: number) {\r\n        let gjsd = this.getAttackSpeed();\r\n        gjsd += (rate) * (this.base_data.AttackSpeed);\r\n        this.setAttackSpeed(gjsd);\r\n    }\r\n    /**获得当前攻速 */\r\n    protected getAttackSpeed(): number {\r\n        return 1 / this.att_jiange;\r\n    }\r\n\r\n    /**计算重伤，取最大 */\r\n    protected getMaxSeriously(): number {\r\n        //找出所有重伤类型的buff\r\n        let seriouslyBuff = new Array<BuffTimer>();\r\n        this.monster_debuff.forEach((v, k) => {\r\n            if (v.getBuffType() == BuffType.SeriouslyInjured) {\r\n                seriouslyBuff.push(v);\r\n            }\r\n        });\r\n        if (seriouslyBuff.length > 0) {\r\n            seriouslyBuff.sort((a, b) => {\r\n                return b.getFirstBuffValue() - a.getFirstBuffValue();\r\n            });\r\n            let maxBuff = seriouslyBuff[0];\r\n            return maxBuff.getFirstBuffValue();\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    /********************************************************光环-开始********************************************************************* */\r\n    addHalo(haloData: HaloData) {\r\n        if (!this.monster_halo.has(haloData.halo_id)) {\r\n            this.monster_halo.set(haloData.halo_id, haloData);\r\n            switch (haloData.halo_id) {\r\n                case HaloId.Monster30_BianFu_Skill_Halo: {\r\n                    this.ex_miss_rate += haloData.halo_value[0];\r\n                } break;\r\n                case HaloId.Monster69_NiuSaMan_Skill_Halo: {\r\n                    this.ex_defense_value += haloData.halo_value[0];\r\n                } break;\r\n                case HaloId.Monster76_JianDuZhe_Skill_Halo: {\r\n                    this.ex_move_speed_value += this.base_data.Speed * (haloData.halo_value[0]);\r\n                    this.refreshMoveSpeed(0);\r\n                } break;\r\n            }\r\n        }\r\n    }\r\n\r\n    getHalo(haloId: HaloId): HaloData {\r\n        return this.monster_halo.get(haloId);\r\n    }\r\n\r\n    isHaveHalo(haloId: HaloId): boolean {\r\n        return this.monster_halo.has(haloId);\r\n    }\r\n\r\n    subHalo(haloId: HaloId, uuid: string) {\r\n        let haloData = this.monster_halo.get(haloId);\r\n        if (haloData) {\r\n            //只有同源才可以移除\r\n            if (haloData.halo_source_uuid == uuid) {\r\n                this.monster_halo.delete(haloId);\r\n                switch (haloId) {\r\n                    case HaloId.Monster30_BianFu_Skill_Halo: {\r\n                        this.ex_miss_rate -= haloData.halo_value[0];\r\n                        if (this.ex_miss_rate < 0) {\r\n                            this.ex_miss_rate = 0;\r\n                        }\r\n                    } break;\r\n                    case HaloId.Monster69_NiuSaMan_Skill_Halo: {\r\n                        this.ex_defense_value -= haloData.halo_value[0];\r\n                        if (this.ex_defense_value < 0) {\r\n                            this.ex_defense_value = 0;\r\n                        }\r\n                    } break;\r\n                    case HaloId.Monster76_JianDuZhe_Skill_Halo: {\r\n                        this.ex_move_speed_value -= this.base_data.Speed * (haloData.halo_value[0]);\r\n                        if (this.ex_move_speed_value < 0) {\r\n                            this.ex_move_speed_value = 0;\r\n                        }\r\n                        this.refreshMoveSpeed(0);\r\n                    } break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    removeAllHalo() {\r\n        this.monster_halo.clear();\r\n    }\r\n\r\n    /********************************************************光环-结束********************************************************************* */\r\n\r\n    getHiddenAttribute() {\r\n        return this.hidden_attribute;\r\n    }\r\n\r\n    getIsDie(): boolean {\r\n        return this.monster_state == Enemy_State.die || this.monster_state == Enemy_State.ship;\r\n    }\r\n\r\n    getEnemyState(): Enemy_State {\r\n        return this.monster_state;\r\n    }\r\n\r\n    getEnemyPrevState(): Enemy_State {\r\n        return this.prev_state;\r\n    }\r\n\r\n    getIsCanCheck(): boolean {\r\n        let isCan = true;\r\n        if (this.getIsDie() || this.node.y >= GameManager.getInstance().enemy_create_y || this.getEnemyState() == Enemy_State.born) {\r\n            isCan = false;\r\n        }\r\n        return isCan;\r\n    }\r\n\r\n    getToughness(): number {\r\n        return this.cur_toughness;\r\n    }\r\n\r\n    getMaxHp(): number {\r\n        return this.max_hp;\r\n    }\r\n\r\n    getCurHp(): number {\r\n        return this.cur_hp;\r\n    }\r\n\r\n    getCurAtt(): number {\r\n        return this.cur_att;\r\n    }\r\n\r\n    setColor(colorType: ColorType) {\r\n        let color = cc.Color.WHITE;\r\n        if (this.isHaveDeBuffType(BuffType.Slowdown)) {\r\n            color = cc.color(82, 255, 252);\r\n        }\r\n        switch (colorType) {\r\n            case ColorType.Injured: {\r\n                color = cc.Color.RED;\r\n                let curColor = this.cur_color;\r\n                if (curColor != ColorType.Injured) {\r\n                    if (this.injured_action) {\r\n                        this.injured_action.stop();\r\n                    }\r\n                    this.injured_action = cc.tween(this.node).to(0.1, { color: this.node.color }).call(() => {\r\n                        this.setColor(curColor)\r\n                    }).start();\r\n                }\r\n            } break;\r\n            case ColorType.SlowDown: {\r\n                color = cc.color(82, 255, 252);\r\n            } break;\r\n        }\r\n        this.cur_color = colorType;\r\n        this.node.color = color;\r\n    }\r\n\r\n    getCurColor(): ColorType {\r\n        return this.cur_color;\r\n    }\r\n\r\n    getSlowDownColor(): cc.Color {\r\n        return cc.color(82, 255, 252);\r\n    }\r\n\r\n    getAttData(damageType: DamageType, isBullet: boolean, skillRate: number = 0): MonsterAttData {\r\n        let md = new MonsterAttData();\r\n        md.damage_type = damageType;\r\n        md.is_bullet = isBullet;\r\n        md.skill_rate = skillRate;\r\n        md.monster_attribute = this.monster_data;\r\n        md.zengshang_rate = this.zengshang_rate;\r\n        md.monster_ts = this;\r\n        md.strength_type = this.getStrengthType();\r\n        return md;\r\n    }\r\n\r\n    getIsFullHp(): boolean {\r\n        return this.cur_hp >= this.max_hp;\r\n    }\r\n\r\n    setEnemyState(type: Enemy_State) {\r\n        if (type != this.monster_state) {\r\n            this.prev_state = this.monster_state;\r\n            this.monster_state = type;\r\n        }\r\n        if (type == Enemy_State.att || type == Enemy_State.skill) {\r\n            this.spine.timeScale = (1 / this.base_data.AttackSpeed) / this.att_jiange;\r\n        }\r\n        if (type == Enemy_State.move) {\r\n            if (this.getStrengthType() != StrengthType.Boss) {\r\n                this.spine.timeScale = this.cur_move_speed / (this.base_data.Speed);\r\n            }\r\n        }\r\n    }\r\n\r\n    startDeath() {\r\n        this.setEnemyState(Enemy_State.die);\r\n        this.collider.enabled = false;\r\n        this.removeAllDeBuff();\r\n        this.spine.paused = false;\r\n        this.node.stopAllActions();\r\n        this.is_can_count = this.is_count;\r\n        MonsterManager.getInstance().willDestroyMonster(this);\r\n        if (this.death_callback) {\r\n            this.death_callback();\r\n        }\r\n    }\r\n\r\n    startHurt() {\r\n        this.setColor(ColorType.Injured);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param damage 伤害值\r\n     * @param damageType 伤害类型\r\n     */\r\n    injureWall(data: MonsterAttData): InjuredData {\r\n        return this.att_wall.beInjured(data);\r\n    }\r\n\r\n    /**\r\n     * 播放一个骨骼动画\r\n     * @param name 骨骼动画名称\r\n     * @param isLoop 是否循环\r\n     * @param data 是否监听关键帧，关键帧数据包含关键帧名称，监听到关键帧后的回调\r\n     * @param endCallback 播放结束后的回调\r\n     */\r\n    playSpinAnimaton(name: string, isLoop: boolean = false, data?: KeyFrameData, endCallback?: Function) {\r\n        if (this.getEnemyState() == Enemy_State.die) {\r\n            return;\r\n        }\r\n\r\n        let anima = this.spine.setAnimation(0, name, isLoop);\r\n        // if(data){\r\n        //     this.spine.setTrackEventListener(anima,(entry: sp.spine.TrackEntry, event) =>{\r\n        //         if(event.data.name==data.name){\r\n        //             data.callback();\r\n        //         }\r\n        //     })\r\n        // }\r\n        // if(endCallback){\r\n        //     this.spine.setTrackCompleteListener(anima,(entry: sp.spine.TrackEntry, event) =>{\r\n        //         anima.listener=null;\r\n        //         endCallback();\r\n        //     })\r\n        // }\r\n\r\n        if (endCallback) {\r\n\r\n\r\n            this.spine.setCompleteListener((trackEntry, loopCount) => {\r\n                let nameTemp = trackEntry.animation ? trackEntry.animation.name : '';\r\n                if (nameTemp === name && endCallback) {\r\n\r\n                    if (data && data.callback) {\r\n                        data.callback();\r\n                    }\r\n                    endCallback();\r\n                }\r\n                // this.spine.setCompleteListener(null);\r\n            });\r\n        }\r\n    }\r\n\r\n    playDeadAnimaton(name: string, endCallback: Function) {\r\n\r\n        let anima = this.spine.setAnimation(0, name, false);\r\n        this.spine.setCompleteListener((trackEntry, loopCount) => {\r\n            let nameTemp = trackEntry.animation ? trackEntry.animation.name : '';\r\n            if (nameTemp === name && endCallback) {\r\n                endCallback();\r\n            }\r\n            this.spine.setCompleteListener(null);\r\n        });\r\n    }\r\n    /**设置X坐标，返回偏左还是偏右了,-1:偏左，0：正常，1：偏右 */\r\n    setX(disX: number): number {\r\n        let leftRight = 0;\r\n        if (disX > 300) {\r\n            disX = 300;\r\n            leftRight = 1;\r\n        }\r\n        if (disX < -300) {\r\n            disX = -300;\r\n            leftRight = -1;\r\n        }\r\n        this.node.x = disX;\r\n        return leftRight;\r\n    }\r\n\r\n    setY(disY: number) {\r\n        this.node.y = disY;\r\n        //不能穿过城墙\r\n        let walls = WallManager.getInstance().getAllWall();\r\n        walls.forEach((wall: Wall, wallType: WallType) => {\r\n            //检查城墙\r\n            let rect = wall.getWallRect();\r\n            if (rect.contains(this.node.getPosition())) {\r\n                if (this.node.y > wall.node.y) {\r\n                    this.node.y = rect.yMax;\r\n                }\r\n                if (this.node.y < wall.node.y) {\r\n                    this.node.y = rect.yMin;\r\n                }\r\n            }\r\n        })\r\n\r\n        let mainWall = WallManager.getInstance().getMainWall();\r\n        let mainRect = mainWall.getWallRect();\r\n\r\n        if (mainRect.contains(this.node.getPosition())) {\r\n            if (this.node.y > mainWall.node.y) {\r\n                this.node.y = mainRect.yMax;\r\n            }\r\n            if (this.node.y < mainWall.node.y) {\r\n                this.node.y = mainRect.yMin;\r\n            }\r\n            this.onCollisionShip();\r\n        }\r\n        if (this.node.y < mainRect.yMin) {\r\n\r\n        }\r\n        if (this.node.y <= mainRect.yMin - 200) {\r\n            this.node.y = mainRect.yMin - 200;\r\n            if (this.monster_state != Enemy_State.ship) {\r\n                MonsterManager.getInstance().ship_monster_num++;\r\n\r\n\r\n                this.setEnemyState(Enemy_State.ship);\r\n                MonsterManager.getInstance().upShipMonster();\r\n            }\r\n        }\r\n    }\r\n    public dieByfuhuo(): void {\r\n        this.setEnemyState(Enemy_State.move);\r\n        this.changeHp(-9999999999);\r\n    }\r\n    private onCollisionShip() {\r\n        let md = new MonsterAttData();\r\n        md.damage_type = DamageType.Ship;\r\n        md.is_bullet = false;\r\n        md.skill_rate = 0;\r\n        md.monster_attribute = this.monster_data;\r\n        md.zengshang_rate = this.zengshang_rate;\r\n        md.monster_ts = this;\r\n        md.strength_type = this.getStrengthType()\r\n        WallManager.getInstance().getMainWall().beInjured(md, false, this.getCurHp() * 0.2)\r\n        this.changeHp(-9999999999);\r\n    }\r\n    setPos(pos: cc.Vec2) {\r\n        this.setX(pos.x);\r\n        this.setY(pos.y);\r\n    }\r\n\r\n    setMoveDir(dir: number) {\r\n        this.move_direction = dir;\r\n    }\r\n\r\n    setQianYinMin(num: number) {\r\n        if (this.min_qianyin == 0)\r\n            this.min_qianyin = num;\r\n    }\r\n\r\n    getQianYinMin(): number {\r\n        return this.min_qianyin;\r\n    }\r\n    /**设置翻转 */\r\n    setFlip(isRight: boolean) {\r\n        this.node.scaleX = isRight ? this.setup_scale : -this.setup_scale;\r\n    }\r\n    //隐藏阴影\r\n    hidShadow() {\r\n        this.shadow.opacity = 0;\r\n    }\r\n    update(dt) {\r\n        if (this.hp_progress) {\r\n            this.hp_progress.setPos(this.node.x + this.hp_pos.x * this.node.scaleX, this.node.y + this.hp_pos.y * this.node.scaleY);\r\n        }\r\n        if (this.shadow) {\r\n            this.shadow.setPosition(cc.v2(this.node.x + this.node.scaleX * this.shadow_pos.x, this.node.y + this.node.scaleY * this.shadow_pos.y));\r\n        }\r\n        this.node.zIndex = (Math.round(8000 - this.node.y * 10));\r\n        if (this.getEnemyState() != Enemy_State.born && this.getStrengthType() != StrengthType.Boss) {\r\n            this.collider.enabled = true;\r\n        }\r\n        if (this.node.y >= GameManager.getInstance().enemy_create_y) {\r\n            this.setMoveDir(Math.PI * 3 / 2);\r\n        }\r\n        //TEST\r\n        // if(this.getEnemyState()==Enemy_State.move){\r\n        //     let allMonster=MonsterManager.getInstance().node.children;\r\n        //     let len=allMonster.length;\r\n        //     for(let i=0; i<len; i++){\r\n        //         let monster=allMonster[i].getComponent(Monster);\r\n        //         if(monster&&monster.uuid!=this.uuid){\r\n        //             //判断距离\r\n        //             let otherPos=monster.getCenterPos();\r\n        //             let selfPos=this.getCenterPos();\r\n        //             let distance=(otherPos.sub(selfPos).mag());\r\n        //             if(distance<=50){\r\n        //                 //交集了\r\n        //                 //上面的走切线，下面的垂直走下\r\n        //                 if(selfPos.y>otherPos.y){\r\n        //                     let newDir=this.move_direction+Math.PI/2;\r\n        //                     if( newDir <=Math.PI && newDir>=0){\r\n        //                         newDir=this.move_direction-Math.PI/2\r\n        //                     }\r\n        //                     this.move_direction=newDir;\r\n        //                 }else if(selfPos.y<otherPos.y){\r\n        //                     this.move_direction=Math.PI*3/2;\r\n        //                 }else{\r\n        //                     this.move_direction=Math.PI*3/2;\r\n        //                 }\r\n        //             }\r\n        //             // else{\r\n        //             //     this.move_direction=Math.PI*3/2;\r\n        //             // }\r\n        //         }\r\n        //     }\r\n        // }\r\n    }\r\n\r\n    /**--------------------------------------添加回调监听------------------------------------------------------ */\r\n    addInitListen(callback: Function) {\r\n        this.init_callback = callback;\r\n    }\r\n    addChangeHpListen(callback: Function) {\r\n        this.change_hp_callback = callback;\r\n    }\r\n    addXuanYunListen(callback: Function) {\r\n        this.xuanyun_callback = callback;\r\n    }\r\n    addDeathCallback(callback: Function) {\r\n        this.death_callback = callback;\r\n    }\r\n    addInjuryCallback(callback: Function) {\r\n        this.active_injury_callback = callback;\r\n    }\r\n\r\n    /**--------------------------------------获得每种怪物不同的数据 --------------------------------------------*/\r\n\r\n    private loadInitPos() {\r\n        //获取完数据就删除了\r\n        let juji = this.node.getChildByName('juji');\r\n        this.juji_pos = juji.getPosition();\r\n        let gongji = this.node.getChildByName('gongji');\r\n        this.att_pos = gongji.getPosition();\r\n        let hp = this.node.getChildByName('hp');\r\n        this.hp_pos = hp.getPosition();\r\n        let shadowNode = this.node.getChildByName('Monster_Shadow');\r\n        this.shadow_pos = shadowNode.getPosition();\r\n        this.shadow_size = shadowNode.getContentSize();\r\n        let center = this.node.getChildByName('center');\r\n        this.center_pos = center.getPosition();\r\n        //cc.log(this.shadow_size);\r\n\r\n        juji.removeFromParent();\r\n        gongji.removeFromParent();\r\n        hp.removeFromParent();\r\n        shadowNode.removeFromParent();\r\n        center.removeFromParent();\r\n        if (this.shadow) {\r\n            this.shadow.setPosition(cc.v2(this.node.x + this.node.scaleX * this.shadow_pos.x, this.node.y + this.node.scaleY * this.shadow_pos.y));\r\n        }\r\n    }\r\n\r\n    getAttPos(): cc.Vec2 {\r\n        let pos = cc.v2(0, 128);\r\n        switch (this.monster_type) {\r\n            case 20: pos = cc.v2(0, 128); break;\r\n            default: pos = this.att_pos; break;\r\n        }\r\n        let disPos = this.node.getPosition().add(cc.v2(pos.x * this.node.scaleX, pos.y * this.node.scaleY));\r\n        return disPos;\r\n    }\r\n\r\n    getJuJiPos(): cc.Vec2 {\r\n        return cc.v2(this.node.x + this.juji_pos.x * this.node.scaleX, this.node.y + this.juji_pos.y * this.node.scaleY);\r\n    }\r\n\r\n    getSheShouPos(): cc.Vec2 {\r\n        return cc.v2(this.node.x + this.juji_pos.x * this.node.scaleX, this.node.y + this.juji_pos.y * this.node.scaleY);\r\n    }\r\n\r\n    getCenterPos(): cc.Vec2 {\r\n        return cc.v2(this.node.x + this.center_pos.x * this.node.scaleX, this.node.y + this.center_pos.y * this.node.scaleY);\r\n    }\r\n\r\n    /**获得攻击城墙的X坐标，动作不一样导致攻击的X坐标不一致 */\r\n    getAttackWallX() {\r\n        return this.att_pos;\r\n    }\r\n}\r\n"]}