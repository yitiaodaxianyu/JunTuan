{"version":3,"sources":["assets\\Scripts\\Maze\\MazeBuffUi.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import GameManager from \"../GameManager\";\r\nimport { MonsterIconManager } from \"../Monster/MonsterIconManager\";\r\nimport { Follow_Type } from \"../multiLanguage/FollowConstants\";\r\nimport FollowManager from \"../multiLanguage/FollowManager\";\r\nimport LanguageManager from \"../multiLanguage/LanguageManager\";\r\nimport { SoundIndex } from \"../Sound/AudioConstants\";\r\nimport MyTool from \"../Tools/MyTool\";\r\nimport UIComponent from \"../UI/UIComponent\";\r\nimport { RogueBuffManager } from \"./Data/RogueBuff\";\r\nimport { RogueHexagonTypesManager } from \"../copy/voidcrack/RogueHexagonTypes\";\r\nimport { MazeManager } from \"./MazeManager\";\r\nimport MazeUi from \"./MazeUi\";\r\n\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class MazeBuffUi extends UIComponent {\r\n    /**格子id */\r\n    box_id:number=10032;\r\n    @property(cc.Prefab)\r\n    prefab_buff_item:cc.Prefab=null;\r\n\r\n    cur_select_buff:number=0;    \r\n    is_can_go:boolean=false;    \r\n\r\n    initData(id:number,isCanGo:boolean){\r\n        this.box_id=id;\r\n        this.is_can_go=isCanGo;    \r\n        this.initUi();\r\n    }\r\n    \r\n    initUi(){\r\n        let buffs=MazeManager.getInstance().getUnSelectSpoils();\r\n        if(buffs.length==0){\r\n            this.initBuffCards();            \r\n        }\r\n        this.createBuffCards();       \r\n        this.refreshSelect();\r\n        FollowManager.getInstance().followEvent(Follow_Type.rogue玩法查看战利品);\r\n    }\r\n\r\n    createBuffCards(){\r\n        let RBM=RogueBuffManager.getInstance()\r\n        let LM=LanguageManager.getInstance();\r\n        let buffs=MazeManager.getInstance().getUnSelectSpoils();\r\n        for(let i=1; i<=3; i++){            \r\n            let buffId=buffs[i-1];            \r\n            let buffNode=this.node.getChildByName('buff'+i);\r\n            //buff的数据\r\n            let jsonData=RBM.getJsonRogueBuff(buffId);\r\n            let quality=jsonData.RogueBuff_Quality;\r\n            //名称\r\n            let titleLabel=buffNode.getChildByName('titleLabel').getComponent(cc.Label);\r\n            titleLabel.string=LM.getStrByTextId(jsonData.RogueBuff_Name);\r\n            titleLabel.node.color=this.getFontColorByQuality(quality);\r\n            //内容\r\n            let detailLabel=buffNode.getChildByName('detailLabel').getComponent(cc.Label);\r\n            detailLabel.string=this.getValueStringByString(LM.getStrByTextId(jsonData.RogueBuffText_ID),jsonData.RogueBuff1_Value,jsonData.RogueBuff2_Value,jsonData.RogueBuff3_Value);\r\n            //品质图标\r\n            let qualityIcon=buffNode.getChildByName('quality').getComponent(cc.Sprite);\r\n            qualityIcon.spriteFrame=MazeUi.getInstance().getSpByName('Maze_Quality_'+(quality-1))\r\n            //品质文字\r\n            let qualityLabel=buffNode.getChildByName('qualityLabel').getComponent(cc.Label);\r\n            qualityLabel.string=this.getStringByQuality(quality);\r\n            qualityLabel.node.color=this.getFontColorByQuality(quality);\r\n            //类型图标\r\n            let iconSp=buffNode.getChildByName('icon').getComponent(cc.Sprite);\r\n            iconSp.spriteFrame=MazeUi.getInstance().getSpByName('Maze_Buff_Icon_'+jsonData.RogueBuff_Type);\r\n        }\r\n    }    \r\n\r\n    initBuffCards(){        \r\n        let type=RogueHexagonTypesManager.getInstance().getHexagonType(this.box_id);\r\n        //品质概率：精英，史诗，传说\r\n        let rate=[70,20,10];\r\n        switch(type){\r\n            case 1:{\r\n                //普通怪的概率\r\n                rate=[70,20,10];\r\n            }break;\r\n            case 2:{\r\n                //精英\r\n                rate=[40,40,20];\r\n            }break;\r\n            case 6:{\r\n                //boss\r\n                rate=[0,30,70];\r\n            }break;\r\n        }\r\n        //test\r\n        //rate=[5,5,90];\r\n        let RBM=RogueBuffManager.getInstance()\r\n        let buffArr=RBM.getBuffArr(MazeManager.getInstance().getBuffList());\r\n        //处理数组，看看是否有品质都随机完了的情况\r\n        for(let i=buffArr.length-1; i>=0; i--){\r\n            if(buffArr[i].length==0){\r\n                let giveIndex=i>0?(i-1):(i+1);\r\n                rate[giveIndex]+=rate[i];\r\n                rate[i]=0;\r\n            }\r\n        }\r\n        let idsList=new Array();\r\n        for(let n=1; n<=3; n++){\r\n            //随机\r\n            let cardQualityIndex=MyTool.getWeightIndexs(rate,1)[0];\r\n            let cardArr=buffArr[cardQualityIndex];\r\n            let cardIndex=Math.floor(Math.random()*cardArr.length);\r\n            let buffId=cardArr[cardIndex];\r\n            cardArr.splice(cardIndex,1);\r\n            idsList.push(buffId);\r\n            for(let i=buffArr.length-1; i>=0; i--){\r\n                if(buffArr[i].length==0){\r\n                    let giveIndex=i>0?(i-1):(i+1);\r\n                    rate[giveIndex]+=rate[i];\r\n                    rate[i]=0;\r\n                }\r\n            }\r\n        }\r\n        MazeManager.getInstance().setUnSelectSpoils(idsList);\r\n    }\r\n\r\n    refreshSelect(){\r\n        for(let i=1; i<=3; i++){\r\n            let buffNode=this.node.getChildByName('buff'+i);            \r\n            let mb=buffNode.getChildByName('mb');\r\n            let isSelected=this.cur_select_buff==i;\r\n            mb.active=!isSelected;\r\n            buffNode.scale=isSelected?1:0.8;\r\n            buffNode.getComponent(cc.Button).interactable=!isSelected;\r\n            //buffNode.stopAllActions();\r\n        }\r\n        //光\r\n        //let light=this.node.getChildByName('light');\r\n        let btnSelect=this.node.getChildByName('btnSelect');\r\n        let selectBg=this.node.getChildByName('selectBg');\r\n        let isShow=this.cur_select_buff>0;\r\n        //light.active=isShow;\r\n        btnSelect.active=isShow;\r\n        selectBg.active=isShow;\r\n\r\n        let xx=this.cur_select_buff*206-206*2-7;\r\n        //light.x=xx;\r\n        btnSelect.x=xx;\r\n        selectBg.x=xx;\r\n        if(isShow){            \r\n            let spine=selectBg.getComponent(sp.Skeleton);\r\n            spine.setAnimation(0,'Rouge_Card',false);\r\n        }\r\n    }\r\n\r\n    getValueStringByString(str:string,value1:number,value2:number,value3:number):string{        \r\n        if(str.includes(\"~x%\")){\r\n            value1*=100;\r\n        }\r\n        if(str.includes(\"~y%\")){\r\n            value2*=100;\r\n        }\r\n        if(str.includes(\"~z%\")){\r\n            value3*=100;\r\n        }\r\n        let newStr=str.replace(\"~x\",value1.toFixed(0));        \r\n        newStr=newStr.replace(\"~y\",value2.toFixed(0));\r\n        newStr=newStr.replace(\"~z\",value2.toFixed(0));\r\n        return newStr;\r\n    }\r\n\r\n    getFontColorByQuality(quality:number):cc.Color{\r\n        let color=cc.Color.BLUE;\r\n        switch(quality){\r\n            case 1:{\r\n                color=cc.color(105,183,255);\r\n            }break;\r\n            case 2:{\r\n                color=cc.color(226,126,255);\r\n            }break;\r\n            case 3:{\r\n                color=cc.color(255,193,74);\r\n            }break;\r\n        }\r\n        return color;\r\n    }\r\n\r\n    getOutLineColorByQuality(quality:number):cc.Color{\r\n        let color=cc.Color.BLUE;\r\n        switch(quality){\r\n            case 1:{\r\n                color=cc.color(37,49,71);\r\n            }break;\r\n            case 2:{\r\n                color=cc.color(37,49,71);\r\n            }break;\r\n            case 3:{\r\n                color=cc.color(105,183,255);\r\n            }break;\r\n        }\r\n        return color;\r\n    }\r\n\r\n    getStringByQuality(quality:number):string{\r\n        return LanguageManager.getInstance().getStrByTextId(110005+quality*2);\r\n    }\r\n\r\n    initMonsterList(){\r\n        let content=this.node.getChildByName('monsterScrollView').getComponent(cc.ScrollView).content;\r\n        //获得关卡信息,怪物种类\r\n        let monsterInfoList=MazeManager.getInstance().getFightingInfo().getOnlyMonsterDataList();\r\n        monsterInfoList.forEach((data,key)=>{\r\n            let icon=MonsterIconManager.getInstance().createMonsterIcon(data.id,data.level);\r\n            content.addChild(icon);\r\n        })\r\n    }\r\n\r\n    clickBtnBuff(btn,strIndex:string){\r\n        GameManager.getInstance().sound_manager.playSound(SoundIndex.click);\r\n        let index=parseInt(strIndex);\r\n        if(this.cur_select_buff!=index){\r\n            this.cur_select_buff=index;\r\n            this.refreshSelect();\r\n        }\r\n    }\r\n\r\n    clickBtnYes(){\r\n        GameManager.getInstance().sound_manager.playSound(SoundIndex.click);        \r\n        //保存buff\r\n        let buffId=MazeManager.getInstance().getUnSelectSpoils()[this.cur_select_buff-1];\r\n        if(buffId){\r\n            //当作胜利处理\r\n            MazeManager.getInstance().checkBuffStage([2001,2002,2003,6001,6002,6003])       \r\n            MazeManager.getInstance().addBuff(buffId);\r\n            MazeManager.getInstance().setUnSelectSpoils(new Array());\r\n            MazeManager.getInstance().addMazePassedId(this.box_id);\r\n            MazeUi.getInstance().refreshFloor();\r\n            super.onClose();\r\n        }        \r\n    }\r\n\r\n    clickBtnNo(){\r\n        GameManager.getInstance().sound_manager.playSound(SoundIndex.click);\r\n        super.onClose();\r\n    }\r\n    \r\n}\r\n"]}