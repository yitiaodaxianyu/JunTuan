{"version":3,"sources":["assets\\Scripts\\Monster\\Data\\MonsterGroupConfigure.ts"],"names":[],"mappings":";;;;;;;AAAA,yDAAwD;AAGxD;IAAA;QACI,WAAW;QACJ,iBAAY,GAAU,CAAC,CAAE;QAChC,UAAU;QACH,cAAS,GAAY,EAAE,CAAE;QAChC,UAAU;QACH,eAAU,GAAY,EAAE,CAAE;QACjC,UAAU;QACH,oBAAe,GAAY,EAAE,CAAE;IAC1C,CAAC;IAAD,gCAAC;AAAD,CATA,AASC,IAAA;AATY,8DAAyB;AAWtC;IAAA;QAEI,iBAAiB;QACT,SAAI,GAAuC,IAAI,CAAC;QAChD,sBAAiB,GAAS,KAAK,CAAC;QA4DxC,yBAAyB;IAG7B,CAAC;IA7DiB,wCAAW,GAAzB;QACI,IAAG,IAAI,CAAC,SAAS,IAAE,IAAI,EAAE;YACrB,IAAI,CAAC,SAAS,GAAC,IAAI,4BAA4B,EAAE,CAAC;YAClD,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;SACzB;QACD,OAAO,IAAI,CAAC,SAAS,CAAC;IAC1B,CAAC;IACD,SAAS;IACD,2CAAI,GAAZ;QACI,IAAG,CAAC,IAAI,CAAC,IAAI,EAAE;YACX,IAAI,CAAC,QAAQ,EAAE,CAAC;SACnB;IACL,CAAC;IACD,QAAQ;IACA,+CAAQ,GAAhB;QAAA,iBAgBC;QAfG,yBAAW,CAAC,QAAQ,CAAC,uBAAuB,EAAC,yBAAW,CAAC,SAAS,EAAC,UAAC,KAAY,EAAE,MAAmB;YACjG,IAAG,KAAK,EAAC;gBACL,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACnB,OAAO;aACV;YACD,OAAO,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;YAC7C,KAAI,CAAC,IAAI,GAAC,IAAI,GAAG,EAAE,CAAC;YACpB,IAAI,IAAI,GAAC,MAAM,CAAC,IAAI,CAAC;YACrB,KAAI,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;gBAC5B,IAAI,QAAQ,GAAC,IAAI,yBAAyB,EAAE,CAAC;gBAC7C,QAAQ,GAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACjB,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,YAAY,EAAC,QAAQ,CAAC,CAAC;aACjD;YACD,KAAI,CAAC,iBAAiB,GAAC,IAAI,CAAC;QAChC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,YAAY;IACL,yDAAkB,GAAzB;QACI,OAAO,IAAI,CAAC,iBAAiB,CAAC;IAClC,CAAC;IACD,sBAAsB;IACf,mEAA4B,GAAnC,UAAoC,EAAS;QACzC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IAC7B,CAAC;IACD,mBAAmB;IACZ,mDAAY,GAAnB,UAAoB,EAAS;QACzB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC;IACvC,CAAC;IACD,mBAAmB;IACZ,oDAAa,GAApB,UAAqB,EAAS;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC;IACxC,CAAC;IACD,mBAAmB;IACZ,yDAAkB,GAAzB,UAA0B,EAAS;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,eAAe,CAAC;IAC7C,CAAC;IAED,sBAAsB;IACR,+CAAkB,GAAhC;QACI,OAAO,EAAE,CAAC;IACd,CAAC;IA7Dc,sCAAS,GAAiC,IAAI,CAAC;IAkElE,mCAAC;CAnED,AAmEC,IAAA;AAnEY,oEAA4B","file":"","sourceRoot":"/","sourcesContent":["import { LoadManager } from \"../../Loading/LoadManager\";\r\n\r\n\r\nexport class JsonMonsterGroupConfigure {\r\n    /**怪物组ID */\r\n    public MonsterGroup:number = 0 ;\r\n    /**怪物ID */\r\n    public MonsterId:number[] = [] ;\r\n    /**怪物数量 */\r\n    public MonsterNum:number[] = [] ;\r\n    /**刷新间隔 */\r\n    public RefreshInterval:number[] = [] ;\r\n}\r\n\r\nexport class MonsterGroupConfigureManager {\r\n    private static _instance: MonsterGroupConfigureManager = null;\r\n    //把json数据转化成map数据\r\n    private data:Map<number,JsonMonsterGroupConfigure>=null;\r\n    private is_load_completed:boolean=false;\r\n\r\n    public static getInstance():MonsterGroupConfigureManager {\r\n        if(this._instance==null) {\r\n            this._instance=new MonsterGroupConfigureManager();\r\n            this._instance.init();\r\n        }\r\n        return this._instance;\r\n    }\r\n    //初始化游戏数据\r\n    private init() {\r\n        if(!this.data) {\r\n            this.loadJson();\r\n        }\r\n    }\r\n    //加载json\r\n    private loadJson() {\r\n        LoadManager.loadJson('MonsterGroupConfigure',LoadManager.load_mode,(error: Error, assets:cc.JsonAsset)=> {\r\n            if(error){\r\n                console.log(error);\r\n                return;\r\n            }\r\n            console.log('加载JsonMonsterGroupConfigure成功');\r\n            this.data=new Map();\r\n            let json=assets.json;\r\n            for(let i=0; i<json.length; i++){\r\n                let jsonData=new JsonMonsterGroupConfigure();\r\n                jsonData=json[i];\r\n                this.data.set(jsonData.MonsterGroup,jsonData);\r\n            }\r\n            this.is_load_completed=true;\r\n        });\r\n    }\r\n\r\n    /**加载是否完成 */\r\n    public getIsLoadCompleted(): boolean{\r\n        return this.is_load_completed;\r\n    }\r\n    /**根据id号获取Json的各种数据 */\r\n    public getJsonMonsterGroupConfigure(id:number):JsonMonsterGroupConfigure {\r\n        return this.data.get(id);\r\n    }\r\n    /**根据怪物组ID获取怪物ID */\r\n    public getMonsterId(id:number): number[] {\r\n        return this.data.get(id).MonsterId;\r\n    }\r\n    /**根据怪物组ID获取怪物数量 */\r\n    public getMonsterNum(id:number): number[] {\r\n        return this.data.get(id).MonsterNum;\r\n    }\r\n    /**根据怪物组ID获取刷新间隔 */\r\n    public getRefreshInterval(id:number): number[] {\r\n        return this.data.get(id).RefreshInterval;\r\n    }\r\n\r\n    /** 静态方法，获取最大的 怪物组ID*/\r\n    public static getMaxMonsterGroup():number {\r\n        return 20;\r\n    }\r\n\r\n    //以上格式统一，以下写每个json数据的特殊需求\r\n\r\n\r\n}\r\n"]}