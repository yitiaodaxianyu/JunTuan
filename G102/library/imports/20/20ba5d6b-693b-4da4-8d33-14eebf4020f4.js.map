{"version":3,"sources":["assets\\Scripts\\Tower\\TowerManager.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AACA,0DAAsD;AACtD,4DAA8D;AAIxD,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAG1C;IAA0C,gCAAY;IAAtD;QAAA,qEAmEC;QAjEG,IAAI;QAEJ,iBAAW,GAAgB,IAAI,CAAC;;IA+DpC,CAAC;qBAnEoB,YAAY;IAQf,wBAAW,GAAzB;QACI,OAAO,IAAI,CAAC,SAAS,CAAC;IAC1B,CAAC;IAES,6BAAM,GAAhB;QACI,cAAY,CAAC,SAAS,GAAC,IAAI,CAAC;QAC5B,IAAI,CAAC,IAAI,EAAE,CAAC;IAChB,CAAC;IAES,gCAAS,GAAnB;QACI,cAAY,CAAC,SAAS,GAAC,IAAI,CAAC;IAChC,CAAC;IAED,SAAS;IACD,2BAAI,GAAZ;IAEA,CAAC;IAEM,kCAAW,GAAlB,UAAmB,IAAW;QAC1B,OAAO,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;IACjD,CAAC;IAED,iBAAiB;IACV,0BAAa,GAApB;QACI,IAAI,KAAK,GAAC,EAAE,CAAC,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;QACrD,IAAG,KAAK,KAAG,EAAE,IAAI,KAAK,KAAG,IAAI,EAC7B;YACI,KAAK,GAAC,CAAC,CAAC;SACX;aACD;YACI,KAAK,GAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;SACzB;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;IAEM,0BAAa,GAApB,UAAqB,KAAY;QAC7B,IAAI,QAAQ,GAAC,IAAI,CAAC,aAAa,EAAE,GAAC,KAAK,CAAC;QACxC,gDAAgD;QAChD,0BAA0B;QAC1B,qCAAqC;QACrC,IAAI;QACJ,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;IAClC,CAAC;IAEM,2BAAc,GAArB,UAAsB,KAAY;QAC9B,EAAE,CAAC,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,EAAC,KAAK,CAAC,CAAC;IACrD,CAAC;IAEM,4BAAe,GAAtB;QACI,OAAO,kCAAiB,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,0BAAU,CAAC,YAAY,EAAC,CAAC,CAAC,CAAC;IAC7E,CAAC;IAEM,4BAAe,GAAtB;QACI,kCAAiB,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,0BAAU,CAAC,YAAY,EAAC,CAAC,GAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;IAC9F,CAAC;IAEM,8BAAiB,GAAxB;QACI,kCAAiB,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,0BAAU,CAAC,YAAY,EAAC,CAAC,CAAC,CAAC;IACvE,CAAC;;IAjEc,sBAAS,GAAiB,IAAI,CAAC;IAKvC,0BAAa,GAAS,KAAK,CAAC;IAFnC;QADC,QAAQ,CAAC,EAAE,CAAC,WAAW,CAAC;qDACO;IAJf,YAAY;QADhC,OAAO;OACa,YAAY,CAmEhC;IAAD,mBAAC;CAnED,AAmEC,CAnEyC,EAAE,CAAC,SAAS,GAmErD;kBAnEoB,YAAY","file":"","sourceRoot":"/","sourcesContent":["import { IsDebug } from \"../Constants\";\r\nimport { StorageKey } from \"../Storage/StorageConfig\";\r\nimport { TheStorageManager } from \"../Storage/StorageManager\";\r\nimport { TowerLevelManager } from \"./TowerLevel\";\r\nimport { TowerRewardManager } from \"./TowerReward\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class TowerManager extends cc.Component {\r\n    private static _instance: TowerManager = null;\r\n    //资源\r\n    @property(cc.SpriteAtlas)\r\n    tower_atlas:cc.SpriteAtlas=null;\r\n\r\n    static is_show_tower:boolean=false;\r\n\r\n    public static getInstance():TowerManager {\r\n        return this._instance;\r\n    }\r\n\r\n    protected onLoad(): void {\r\n        TowerManager._instance=this;\r\n        this.init();\r\n    }\r\n\r\n    protected onDestroy(): void {\r\n        TowerManager._instance=null;\r\n    }\r\n\r\n    //初始化游戏数据\r\n    private init () {\r\n\r\n    }\r\n\r\n    public getSpByName(name:string):cc.SpriteFrame{\r\n        return this.tower_atlas.getSpriteFrame(name);\r\n    }\r\n\r\n    /**获得正在挑战的塔的等级 */\r\n    static getTowerLevel():number{\r\n        let level=cc.sys.localStorage.getItem('tower_level');\r\n        if(level===\"\" || level===null)\r\n        {\r\n            level=1;            \r\n        }else\r\n        {\r\n            level=parseInt(level);            \r\n        }\r\n        return level;\r\n    }\r\n\r\n    static addTowerLevel(level:number){\r\n        let newLevel=this.getTowerLevel()+level;\r\n        // let maxLevel=TowerLevelManager.getMaxFloor();\r\n        // if(newLevel<=maxLevel){\r\n        //     this.saveTowerLevel(newLevel);\r\n        // }\r\n        this.saveTowerLevel(newLevel);\r\n    }\r\n\r\n    static saveTowerLevel(level:number){\r\n        cc.sys.localStorage.setItem('tower_level',level);\r\n    }\r\n\r\n    static getTodayPassNum():number{\r\n        return TheStorageManager.getInstance().getInt(StorageKey.TowerPassNum,0);\r\n    }\r\n    \r\n    static addTodayPassNum(){\r\n        TheStorageManager.getInstance().setItem(StorageKey.TowerPassNum,1+this.getTodayPassNum());\r\n    }\r\n\r\n    static resetTodayPassNum(){\r\n        TheStorageManager.getInstance().setItem(StorageKey.TowerPassNum,0);\r\n    }\r\n}"]}