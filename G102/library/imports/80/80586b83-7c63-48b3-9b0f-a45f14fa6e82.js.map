{"version":3,"sources":["assets\\Scripts\\Wall\\Shield.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { GameState } from \"../Constants\";\r\nimport { GameEffectId, GameEffectsManager } from \"../Game/GameEffectsManager\";\r\nimport GameManager from \"../GameManager\";\r\nimport { ShieldType, DamageType } from \"../Hero/Game/HeroConfig\";\r\n\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Shield extends cc.Component {\r\n    /**护盾的唯一id */    \r\n    private shield_id:number=0;\r\n    /**剩余的时间 */\r\n    private remain_time:number=0;\r\n    /**剩余的护盾值 */\r\n    private shield_value:number=0;\r\n    /**护盾类型，可以抵消的伤害类型 */\r\n    private shield_type:ShieldType=ShieldType.Normal;\r\n    /**时间结束或护盾被破时的回调 */\r\n    private destroy_callback:Function=null;\r\n    /**护盾的特效数据 */\r\n    private game_effect_data:Map<GameEffectId,cc.Node>=null;\r\n\r\n    init(id:number,type:ShieldType,remainTime:number,value:number,callback:Function){\r\n        this.shield_id=id;\r\n        this.remain_time=remainTime;\r\n        this.shield_value=value;\r\n        this.shield_type=type;\r\n        this.destroy_callback=callback;\r\n        this.game_effect_data=new Map<GameEffectId,cc.Node>();\r\n    }\r\n\r\n    /**更改护盾值，返回更改后的值值*/\r\n    changeShieldValue(num:number):number{        \r\n        let newValue=this.shield_value+num;\r\n        if(newValue<0){\r\n            this.shield_value=0;\r\n            this.destroySelf();\r\n        }else{\r\n            this.shield_value=newValue;\r\n        }\r\n        return newValue;\r\n    }\r\n\r\n    setGameEffectData(id:GameEffectId,node:cc.Node){\r\n        this.game_effect_data.set(id,node);\r\n    }\r\n\r\n    getShieldValue():number{\r\n        return this.shield_value;\r\n    }\r\n\r\n    getRemainTime():number{\r\n        return this.remain_time;\r\n    }\r\n\r\n    getShieldType():ShieldType{\r\n        return this.shield_type;\r\n    }\r\n\r\n    refreshShield(remainTime:number,value:number){\r\n        this.remain_time=remainTime;\r\n        this.shield_value=value;\r\n    }\r\n\r\n    getIsCanWithstand(type:DamageType):boolean{        \r\n        if(this.shield_type==ShieldType.All || this.shield_type==type.valueOf()){\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    destroySelf(){\r\n        this.game_effect_data.forEach((v,k)=>{\r\n            GameEffectsManager.getInstance().destroyGameEffectById(k,v);\r\n        });\r\n        this.node.removeFromParent();\r\n        if(this.destroy_callback){\r\n            this.destroy_callback(this.shield_id);\r\n        }\r\n    }\r\n\r\n    protected update(dt: number): void {\r\n        if(GameManager.getInstance().cur_game_state==GameState.Game_Playing){\r\n            if(this.remain_time>0){\r\n                this.remain_time-=dt;\r\n                if(this.remain_time<0){\r\n                    this.remain_time=0;\r\n                    this.destroySelf();\r\n                }\r\n            }\r\n        }        \r\n    }\r\n}\r\n"]}