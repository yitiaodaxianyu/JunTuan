{"version":3,"sources":["assets\\Scripts\\AccumulatedRecharge\\AccumulatedRechargeUi.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import ApkManager from \"../Ads/ApkManager\";\r\nimport GameManager from \"../GameManager\";\r\nimport { ItemManager } from \"../Prop/Data/Item\";\r\nimport { PropManager } from \"../Prop/PropManager\";\r\nimport { SoundIndex } from \"../Sound/AudioConstants\";\r\nimport { EventManager, RedEventString, RedEventType } from \"../Tools/EventManager\";\r\nimport UIComponent from \"../UI/UIComponent\";\r\nimport { UiAction } from \"../UI/UiInterface\";\r\nimport AccumulatedRechargeItem from \"./AccumulatedRechargeItem\";\r\nimport { CumulativeRechargesManager } from \"./CumulativeRecharges\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class AccumulatedRechargeUi extends UIComponent {\r\n\r\n    @property(cc.Prefab)\r\n    accumulated_recharge_ui:cc.Prefab = null;\r\n\r\n    init(uiAc: UiAction): void {\r\n        super.init(uiAc);\r\n        this.refreshUi();\r\n    }\r\n    \r\n    refreshUi(){\r\n        let content = this.node.getChildByName(\"scroll\").getComponent(cc.ScrollView).content;\r\n        let data = CumulativeRechargesManager.getInstance().rewardMap;\r\n        if(content.childrenCount == 0){\r\n            let rewardList = new Map<number,number>();\r\n            data.forEach((v,k)=>{\r\n                let message = CumulativeRechargesManager.getInstance().getJsonCumulativeRecharges(k);\r\n                if(rewardList.has(message.Item1_ID) == false && ItemManager.getInstance().getType(message.Item1_ID) != 3){\r\n                    rewardList.set(message.Item1_ID,message.Item1_Num);\r\n                }else if(rewardList.has(message.Item1_ID) == true){\r\n                    let num = rewardList.get(message.Item1_ID) + message.Item1_Num;\r\n                    rewardList.set(message.Item1_ID,num);\r\n                }\r\n                if(rewardList.has(message.Item2_ID) == false && ItemManager.getInstance().getType(message.Item2_ID) != 3){\r\n                    rewardList.set(message.Item2_ID,message.Item2_Num);\r\n                }else if(rewardList.has(message.Item2_ID) == true){\r\n                    let num = rewardList.get(message.Item2_ID) + message.Item2_Num;\r\n                    rewardList.set(message.Item2_ID,num);\r\n                }\r\n                if(rewardList.has(message.Item3_ID) == false && ItemManager.getInstance().getType(message.Item3_ID) != 3){\r\n                    rewardList.set(message.Item3_ID,message.Item3_Num);\r\n                }else if(rewardList.has(message.Item3_ID) == true){\r\n                    let num = rewardList.get(message.Item3_ID) + message.Item3_Num;\r\n                    rewardList.set(message.Item3_ID,num);\r\n                }\r\n                let item = cc.instantiate(this.accumulated_recharge_ui);\r\n                item.name = \"item\" + message.CumulativeRechargeID;\r\n                if(v == 0){\r\n                    item.getComponent(AccumulatedRechargeItem).initGoingItem(message);\r\n                }else if(v == 1){\r\n                    item.getComponent(AccumulatedRechargeItem).initFinishItem(message);\r\n                }else{\r\n                    item.getComponent(AccumulatedRechargeItem).initReceivedItem(message);\r\n                }\r\n                content.addChild(item);\r\n            });\r\n            let itemRoot = this.node.getChildByName(\"itemRoot\");\r\n            rewardList.forEach((v,k)=>{\r\n                let item = PropManager.getInstance().createPropItem(k,v);\r\n                item.scale = 0.75;\r\n                itemRoot.addChild(item);\r\n            });\r\n        }else{\r\n            data.forEach((v,k)=>{\r\n                let message = CumulativeRechargesManager.getInstance().getJsonCumulativeRecharges(k);\r\n                let item = content.getChildByName(\"item\" + message.CumulativeRechargeID);\r\n                if(v == 0){\r\n                    item.getComponent(AccumulatedRechargeItem).initGoingItem(message);\r\n                }else if(v == 1){\r\n                    item.getComponent(AccumulatedRechargeItem).initFinishItem(message);\r\n                }else{\r\n                    item.getComponent(AccumulatedRechargeItem).initReceivedItem(message);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    clickBtnClose()\r\n    {\r\n        GameManager.getInstance().sound_manager.playSound(SoundIndex.click);\r\n        this.destroySelf();\r\n    }\r\n\r\n    destroySelf()\r\n    {\r\n        super.onClose();\r\n        ApkManager.getInstance().closeBanner();\r\n        EventManager.postRedEvent(RedEventString.RED_CHECK,RedEventType.Btn_Main_LeiChong);\r\n        // EventManager.postRedEvent(RedEventString.RED_CHECK,RedEventType.Btn_Main_SignIn);\r\n    }\r\n}\r\n"]}