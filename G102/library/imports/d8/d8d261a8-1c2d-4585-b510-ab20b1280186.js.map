{"version":3,"sources":["assets\\Scripts\\Hero\\Game\\LeiShen\\ChainLightning.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["/**闪电链 */\r\n\r\nimport { GameState } from \"../../../Constants\";\r\nimport { GameEffectId, GameEffectsManager } from \"../../../Game/GameEffectsManager\";\r\nimport GameManager from \"../../../GameManager\";\r\nimport Monster from \"../../../Monster/Monster\";\r\nimport MyTool from \"../../../Tools/MyTool\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ChainLightning extends cc.Component {\r\n\r\n    // @property([cc.SpriteFrame])\r\n    // sp_lights: cc.SpriteFrame[] = [];\r\n\r\n    // @property([cc.SpriteFrame])\r\n    // sp_lights_small: cc.SpriteFrame[] = [];\r\n\r\n    game_effect_id:GameEffectId=GameEffectId.lei_shen_shandian;\r\n    _sp:cc.Sprite=null;\r\n    cur_sp_index:number=0;\r\n    /**首个敌人，为NULL时是英雄 */\r\n    first_monster:Monster=null;\r\n    //@property(cc.Node)\r\n    end_monster:Monster=null;\r\n    /**刷新间隔 */\r\n    refresh_jiange:number=0.05;\r\n    /**时间计数值 */\r\n    jishu:number=0;\r\n    /**当前闪电链的长度 */\r\n    cur_move_len:number=0;\r\n    /**加速度 */\r\n    jiasu_num:number=0.0;\r\n    /**到达时间,这个时间累计到一定时间后，闪电要开始消失 */\r\n    end_remain_time:number=0;\r\n    max_remain_time:number=0.2;\r\n    /**到达回调 */\r\n    end_callback:Function=null;\r\n    /**释放需要继续判断 */\r\n    is_need_update:boolean=true;\r\n\r\n    onLoad(){\r\n        this.node.getComponent(cc.Animation).on(cc.Animation.EventType.FINISHED,this.destroySelf.bind(this));\r\n    }\r\n\r\n    init(gameEffectId:GameEffectId,first:Monster,end:Monster,endCallback:Function){\r\n        // if(!this._sp){\r\n        //     this._sp=this.node.getComponent(cc.Sprite);\r\n        // }\r\n        this.end_callback=endCallback;\r\n        this.game_effect_id=gameEffectId;\r\n        this.first_monster=first;\r\n        this.end_monster=end;\r\n        this.jiasu_num=0;\r\n        this.end_remain_time=this.max_remain_time;\r\n        // this._sp.fillStart=0;\r\n        // this._sp.fillRange=0;\r\n        this.is_need_update=true;\r\n        let animation=this.node.getComponent(cc.Animation);\r\n        animation.play();        \r\n        this.setShanDian();\r\n    }\r\n\r\n    onNext(){\r\n        if(this.end_callback){\r\n            this.end_callback(this.end_monster);\r\n            this.end_callback=null;\r\n        }\r\n    }\r\n\r\n    destroySelf(){\r\n        this.is_need_update=false;\r\n        GameEffectsManager.getInstance().destroyGameEffectById(this.game_effect_id,this.node);\r\n    }\r\n\r\n    protected lateUpdate(dt: number): void {\r\n        if(GameManager.getInstance().cur_game_state!=GameState.Game_Playing||this.is_need_update==false){\r\n            return;\r\n        }\r\n        this.setShanDian();\r\n    }\r\n\r\n    // update (dt:number) {\r\n    //     if(GameManager.getInstance().cur_game_state!=GameState.Game_Playing||this.is_need_update==false){\r\n    //         return;\r\n    //     }\r\n    //     this.setShanDian();\r\n    //     // this.jishu+=dt;\r\n    //     // if(this.jishu>=this.refresh_jiange){\r\n    //     //     this.jishu=0;            \r\n    //     //     //刷新帧\r\n    //     //     if(this.node.height>=150){\r\n    //     //         this.cur_sp_index=MyTool.getRandomIndex(this.sp_lights.length,this.cur_sp_index);\r\n    //     //         this._sp.spriteFrame=this.sp_lights[this.cur_sp_index];\r\n    //     //         // this.node.scaleX=this.node.height/300;\r\n    //     //         // if(this.node.scaleX>1){\r\n    //     //         //     this.node.scaleX=1;\r\n    //     //         // }else if(this.node.scaleX<0.5){\r\n    //     //         //     this.node.scaleX=0.5;\r\n    //     //         // }\r\n    //     //     }else{\r\n    //     //         this.cur_sp_index=MyTool.getRandomIndex(this.sp_lights_small.length,this.cur_sp_index);\r\n    //     //         this._sp.spriteFrame=this.sp_lights_small[this.cur_sp_index];\r\n    //     //         // this.node.scaleX=this.node.height/150;\r\n    //     //         // if(this.node.scaleX>1){\r\n    //     //         //     this.node.scaleX=1;\r\n    //     //         // }else if(this.node.scaleX<0.5){\r\n    //     //         //     this.node.scaleX=0.5;\r\n    //     //         // }\r\n    //     //     }\r\n            \r\n    //     // }\r\n\r\n    //     // this.jiasu_num+=1;\r\n    //     // let range=this._sp.fillRange+dt*(1+this.jiasu_num);\r\n    //     // if( range>=1){\r\n    //     //     range=1;\r\n    //     //     this.end_remain_time-=dt;\r\n    //     //     if(this.end_remain_time<0){\r\n    //     //         this.end_remain_time=0;\r\n    //     //     }\r\n    //     //     this._sp.fillStart=(this.max_remain_time-this.end_remain_time)/this.max_remain_time;            \r\n    //     //     if(this._sp.fillStart>=1){\r\n    //     //         this.destroySelf();\r\n    //     //     }\r\n    //     // }\r\n    //     // this._sp.fillRange=range;\r\n    //     // if(range>=1){\r\n    //     //     if(this.end_callback){\r\n    //     //         this.end_callback(this.end_monster);\r\n    //     //         this.end_callback=null;\r\n    //     //     }\r\n    //     // }\r\n    // }\r\n\r\n    setShanDian(){\r\n        if(this.first_monster){\r\n            this.node.setPosition(this.first_monster.getCenterPos());\r\n        }\r\n        //跟随闪电链的末端目标\r\n        let offsetPos=this.end_monster.getCenterPos().sub(this.node.getPosition());\r\n        let pi2=Math.PI*2;\r\n        let dir=(Math.atan2(offsetPos.y,offsetPos.x)+pi2)%pi2;\r\n        let angle=MyTool.radianToAngle(dir)-90;\r\n        this.node.angle=angle;\r\n        this.node.height=offsetPos.mag();\r\n    }\r\n}\r\n"]}