{"version":3,"sources":["assets\\Scripts\\Boss\\Boss.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["\r\n\r\nimport { GameMode } from \"../Constants\";\r\nimport BossHpProgressBar from \"./BossHpProgressBar\";\r\nimport { Enemy_State } from \"../Enemy/EnemyConfig\";\r\nimport { GameEffectId, GameEffectsManager } from \"../Game/GameEffectsManager\";\r\nimport GameManager from \"../GameManager\";\r\nimport Monster from \"../Monster/Monster\";\r\nimport { BuffId, DamageType } from \"../Hero/Game/HeroConfig\";\r\nimport { BuffData } from \"../Hero/Game/BuffData\";\r\n\r\nenum PosType{\r\n    ZhongXin=0,\r\n    Radian0,\r\n    Radian60,\r\n    Radian120,\r\n    Radian180,\r\n    Radian240,\r\n    Radian300,\r\n\r\n    Num,\r\n}\r\n\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Boss extends Monster {\r\n\r\n    /**血条进度条 */\r\n    protected boss_hp_progress: BossHpProgressBar=null;  \r\n    /**怪物血量发生变化时的回调 */\r\n    private change_boss_hp_callback:Function=null;\r\n\r\n    /**初始化回调 */\r\n    private boss_init_callback:Function=null;\r\n    /**-------------------------------统一移动相关属性-------------------------------------- */\r\n    /**当前所处的位置类型 */\r\n    cur_pos_type:PosType=PosType.ZhongXin;\r\n    /**下一个要移动到的位置类型 */\r\n    next_pos_type:PosType=PosType.ZhongXin;\r\n    /**移动轨迹数组 */\r\n    moving_track:cc.Vec2[]=[];\r\n\r\n    /**攻击触发的回调 */\r\n    att_callback:Function=null;\r\n    /**开始移动的触发的回调 */\r\n    move_callback:Function=null;\r\n    is_init_hp:boolean=false;\r\n\r\n\r\n    onLoad () {\r\n        super.onLoad();           \r\n        this.addChangeHpListen(this.onChangeBossHp);\r\n        this.addInitListen(this.onInited);\r\n        //this.initMovingTrack();        \r\n    }\r\n\r\n    onInited(){\r\n        if(GameManager.getInstance().cur_game_mode!=GameMode.Boss_Challenge){\r\n            GameEffectsManager.getInstance().addEffectPoolById(GameEffectId.boss_hp,1,()=>{\r\n                let hpRoot=cc.find('Canvas/Ui_Root/top_ui/BossHpRoot');\r\n                hpRoot.y=-108;\r\n                let hpNode=GameEffectsManager.getInstance().createGameEffectForParent(GameEffectId.boss_hp,cc.v2(0,0),hpRoot);\r\n                this.boss_hp_progress=hpNode.getComponent(BossHpProgressBar); \r\n                this.boss_hp_progress.init(this.getMaxHp(),this.monster_id,this.monster_level);\r\n            });\r\n        }\r\n        if(this.boss_hp_progress){\r\n            this.boss_hp_progress.init(this.getMaxHp(),this.monster_id,this.monster_level);\r\n        }\r\n        if(this.boss_init_callback){\r\n            this.boss_init_callback();\r\n        }\r\n        this.node.opacity=0;\r\n        this.setEnemyState(Enemy_State.born);\r\n        cc.tween(this.node).to(1,{opacity:255}).call(()=>{\r\n            this.setEnemyState(Enemy_State.standby);\r\n        }).start();\r\n        if(GameManager.getInstance().cur_game_mode==GameMode.Boss_Challenge){\r\n            let buffData=new BuffData();\r\n            buffData.buff_id=BuffId.Boss_Mode_JianShang;\r\n            buffData.buff_value=[-1.2];\r\n            buffData.remain_time=30;\r\n            super.addDeBuff(buffData,null);\r\n        }\r\n    }\r\n\r\n    addBossInitedListen(callback:Function){\r\n        this.boss_init_callback=callback;\r\n    }\r\n\r\n    addChangeBossHpListen(callback:Function){\r\n        this.change_boss_hp_callback=callback;\r\n    }\r\n\r\n    addAttackListen(callback:Function){\r\n        this.att_callback=callback;\r\n    }\r\n\r\n    addMoveListen(callback:Function){\r\n        this.move_callback=callback;\r\n    }\r\n\r\n    \r\n\r\n    onChangeBossHp(num:number){\r\n        if(this.boss_hp_progress){\r\n            this.boss_hp_progress.setHp(this.getCurHp());\r\n        }\r\n        if(this.change_boss_hp_callback){\r\n            this.change_boss_hp_callback(num);\r\n        }\r\n    }\r\n\r\n    /**--------------------------------------------统一移动---------------------------------------- */\r\n    /**初始化移动轨迹 */\r\n    // initMovingTrack(){\r\n    //     let width=222;\r\n    //     let cPos=GameManager.getInstance().getFightCenter();\r\n    //     let aRadian=Math.PI/3;\r\n    //     this.moving_track=new Array();\r\n    //     this.moving_track.push(cPos);\r\n    //     // let gg=cc.find('Canvas/Fighting_Root').getComponent(cc.Graphics);\r\n    //     // gg.moveTo(cPos.x,cPos.y);\r\n    //     for(let i=PosType.Radian0; i<PosType.Num; i++){\r\n    //         let radian=(i-1)*aRadian;\r\n    //         let posX=cPos.x+width*Math.cos(radian);\r\n    //         let posY=cPos.y+width*Math.sin(radian);\r\n    //         this.moving_track.push(cc.v2(posX,posY));\r\n    //         //gg.lineTo(posX,posY);\r\n    //     }\r\n    //     //gg.stroke();\r\n    // }\r\n    // /**获取下一个目标地点的坐标 */\r\n    // getNextPos():cc.Vec2{\r\n    //     return this.moving_track[this.next_pos_type];\r\n    // }\r\n    // /**获取一个随机的目标的坐标 */\r\n    // getRandomPos():cc.Vec2{\r\n    //     let pos=cc.v2(0,0);\r\n    //     let randType=[];\r\n    //     if(this.cur_pos_type==PosType.ZhongXin){\r\n    //         for(let i=PosType.Radian0; i<PosType.Num; i++){\r\n    //             randType.push(i);\r\n    //         }\r\n    //     }else{\r\n    //         let nextType=this.cur_pos_type+1;\r\n    //             if(nextType>=PosType.Num){\r\n    //                 nextType=PosType.Radian0;\r\n    //             }\r\n    //             let prevType=this.cur_pos_type-1;\r\n    //             if(prevType<=PosType.ZhongXin){\r\n    //                 prevType=PosType.Radian300;\r\n    //             }\r\n    //             randType=[PosType.ZhongXin,nextType,prevType];\r\n    //     }        \r\n    //     let randIndex=Math.floor(Math.random()*randType.length);\r\n    //     this.next_pos_type=randType[randIndex]\r\n    //     pos=this.moving_track[this.next_pos_type];\r\n    //     return pos;\r\n    // }\r\n    // /**开始移动 */\r\n    // startMove(dt:number,pos?:cc.Vec2){\r\n    //     super.setEnemyState(Enemy_State.move);        \r\n    //     pos=pos?pos:this.getRandomPos();\r\n    //     this.setTargetPos(pos,()=>{\r\n    //         this.cur_pos_type=this.next_pos_type;\r\n    //         if(this.node.x<-128){\r\n    //             this.node.scaleX=this.setup_scale;\r\n    //         }\r\n    //         if(this.node.x>128){\r\n    //             this.node.scaleX=-this.setup_scale;\r\n    //         }\r\n    //         this.startAttack();\r\n    //     })\r\n    //     if(this.move_callback){\r\n    //         this.move_callback();\r\n    //     }\r\n    // }\r\n    // /**设置要移动到的目标地点坐标 */\r\n    // setTargetPos(pos:cc.Vec2,endCallback:Function){\r\n    //     this.move_target_pos=pos;\r\n    //     this.move_end_callback=endCallback;\r\n    // }\r\n    // /**开始攻击 */\r\n    // startAttack(){\r\n    //     //有前摇动作\r\n    //     this.unschedule(this.startMove);\r\n    //     super.setEnemyState(Enemy_State.att);\r\n    //     if(this.att_callback){\r\n    //         this.att_callback();\r\n    //     }\r\n    // }\r\n}\r\n"]}