{"version":3,"sources":["assets\\Scripts\\JsonData\\OfflineRevenue.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["\r\nimport { EquipmentAttributeManager } from \"../Equipment/Data/EquipmentAttribute\";\r\nimport { LevelManager } from \"../Level/LevelManager\";\r\nimport { LoadManager } from \"../Loading/LoadManager\";\r\nimport { DingYueManager } from \"../Payment/DingYueManager\";\r\nimport { PropId } from \"../Prop/PropConfig\";\r\nimport { StorageKey } from \"../Storage/StorageConfig\";\r\nimport { TheStorageManager } from \"../Storage/StorageManager\";\r\nimport { JackpotManager } from \"./Jackpot\";\r\nimport { RewardData } from \"./LevelJsonData\";\r\n\r\nexport class JsonOfflineRevenue {\r\n    /**通关关卡 */\r\n    public PassLevel:number = 0 ;\r\n    /**每分钟金币 */\r\n    public GetGold:number = 0 ;\r\n    /**满溢时间(分钟) */\r\n    public Time:number = 0 ;\r\n    /**掉落装备奖池 */\r\n    public DropJackPot:number = 0 ;\r\n    /**每分钟掉落概率（千分比） */\r\n    public Probability:number = 0 ;\r\n    /**每分钟英雄经验 */\r\n    public GetHeroExp:number = 0 ;\r\n    /**每分钟玩家经验 */\r\n    public GetPlayerExp:number = 0 ;\r\n    /**每分钟晋升石 */\r\n    public GetPromotion:number = 0 ;\r\n    /**每分钟兽粮 */\r\n    public GetAnimalFood:number = 0 ;\r\n    /**每分钟普通精炼石 */\r\n    public GetOrdinaryEnhancementStone:number = 0 ;\r\n    /**每分钟中级精炼石 */\r\n    public GetIntermediateEnhancementStone:number = 0 ;\r\n    /**每分钟高级精炼石 */\r\n    public GetSeniorEnhancementStone:number = 0 ;\r\n}\r\n\r\nexport class OfflineRevenueManager {\r\n    private static _instance: OfflineRevenueManager = null;\r\n    //把json数据转化成map数据\r\n    private data:Map<number,JsonOfflineRevenue>=null;\r\n    private is_load_completed:boolean=false;\r\n\r\n    public static getInstance():OfflineRevenueManager {\r\n        if(this._instance==null) {\r\n            this._instance=new OfflineRevenueManager();\r\n            this._instance.init();\r\n        }\r\n        return this._instance;\r\n    }\r\n    //初始化游戏数据\r\n    private init() {\r\n        if(!this.data) {\r\n            this.loadJson();\r\n        }\r\n    }\r\n    //加载json\r\n    private loadJson() {\r\n        LoadManager.loadJson('OfflineRevenue',LoadManager.load_mode,(error: Error, assets:cc.JsonAsset)=> {\r\n            if(error){\r\n                console.log(error);\r\n                return;\r\n            }\r\n            console.log('加载JsonOfflineRevenue成功');\r\n            this.data=new Map();\r\n            let json=assets.json;\r\n            for(let i=0; i<json.length; i++){\r\n                let jsonData=new JsonOfflineRevenue();\r\n                jsonData=json[i];\r\n                this.data.set(jsonData.PassLevel,jsonData);\r\n            }\r\n            this.is_load_completed=true;\r\n        });\r\n    }\r\n\r\n    /**加载是否完成 */\r\n    public getIsLoadCompleted(): boolean{\r\n        return this.is_load_completed;\r\n    }\r\n    /**根据id号获取Json的各种数据 */\r\n    public getJsonOfflineRevenue(id:number):JsonOfflineRevenue {\r\n        return this.data.get(id);\r\n    }\r\n    /**根据通关关卡获取每分钟金币 */\r\n    public getGetGold(id:number): number {\r\n        return this.data.get(id).GetGold;\r\n    }\r\n    /**根据通关关卡获取满溢时间(分钟) */\r\n    public getTime(id:number): number {\r\n        return this.data.get(id).Time;\r\n    }\r\n    /**根据通关关卡获取掉落装备奖池 */\r\n    public getDropJackPot(id:number): number {\r\n        return this.data.get(id).DropJackPot;\r\n    }\r\n    /**根据通关关卡获取每分钟掉落概率（千分比） */\r\n    public getProbability(id:number): number {\r\n        return this.data.get(id).Probability;\r\n    }\r\n    /**根据通关关卡获取每分钟英雄经验 */\r\n    public getGetHeroExp(id:number): number {\r\n        return this.data.get(id).GetHeroExp;\r\n    }\r\n    /**根据通关关卡获取每分钟玩家经验 */\r\n    public getGetPlayerExp(id:number): number {\r\n        return this.data.get(id).GetPlayerExp;\r\n    }\r\n    /**根据通关关卡获取每分钟晋升石 */\r\n    public getGetPromotion(id:number): number {\r\n        return this.data.get(id).GetPromotion;\r\n    }\r\n    /**根据通关关卡获取每分钟兽粮 */\r\n    public getGetAnimalFood(id:number): number {\r\n        return this.data.get(id).GetAnimalFood;\r\n    }\r\n    /**根据通关关卡获取每分钟普通精炼石 */\r\n    public getGetOrdinaryEnhancementStone(id:number): number {\r\n        return this.data.get(id).GetOrdinaryEnhancementStone;\r\n    }\r\n    /**根据通关关卡获取每分钟中级精炼石 */\r\n    public getGetIntermediateEnhancementStone(id:number): number {\r\n        return this.data.get(id).GetIntermediateEnhancementStone;\r\n    }\r\n    /**根据通关关卡获取每分钟高级精炼石 */\r\n    public getGetSeniorEnhancementStone(id:number): number {\r\n        return this.data.get(id).GetSeniorEnhancementStone;\r\n    }\r\n\r\n    /** 静态方法，获取最大的 通关关卡*/\r\n    public static getMaxPassLevel():number {\r\n        return 240;\r\n    }\r\n\r\n    //以上格式统一，以下写每个json数据的特殊需求\r\n\r\n\r\n    //已经刷新的分钟数\r\n    private refreshed_min:number=0;\r\n    //已经刷新出来的装备id列表\r\n    private refreshed_equip:number[]=[];\r\n\r\n    /**获取已经刷新的分钟数*/\r\n    public getRefreshTime():number{\r\n        return this.refreshed_min;\r\n    }\r\n    /**保存已经刷新的分钟数*/\r\n    public saveRefreshTime(min:number){\r\n        this.refreshed_min=min;\r\n    }\r\n\r\n    /**获取已经刷新的装备id列表*/\r\n    public getRefreshEquipId():number[]{\r\n        return this.refreshed_equip;\r\n    }\r\n    /**添加一个装备id到列表*/\r\n    public addRefreshEquipId(id:number){\r\n        this.refreshed_equip.push(id);\r\n    }\r\n    /**获取最新的装备id列表*/\r\n    public getNowEquipIdList():number[]{\r\n        //\r\n        let totalTime=OfflineRevenueManager.getGuaJiMin();\r\n        let remainTime=totalTime-this.getRefreshTime();\r\n        //获取当前的概率（千分比）\r\n        let finishLevel=LevelManager.getInstance().finish_level;\r\n        let rate=this.getProbability(finishLevel);\r\n        // if(IsDebug)\r\n        // rate=rate*10;\r\n        //获取当前使用的奖池id\r\n        let jId=this.getDropJackPot(finishLevel);        \r\n        for(let i=0; i<remainTime; i++){\r\n            let randomIndex=Math.random()*1000;\r\n            if(randomIndex<rate){\r\n                //从奖池里随机一个装备列表\r\n                let rd=JackpotManager.getInstance().getRewardDataById(jId);\r\n                this.addRefreshEquipId(rd.reward_id);\r\n            }\r\n        }\r\n        this.saveRefreshTime(totalTime);\r\n        this.refreshed_equip.sort((a:number,b:number)=>{\r\n            let levelA=EquipmentAttributeManager.getInstance().getStage(a);\r\n            let levelB=EquipmentAttributeManager.getInstance().getStage(b);\r\n            return levelB-levelA;\r\n        });\r\n        return this.refreshed_equip;\r\n    }\r\n\r\n    /**获取领取挂机奖励的时间-分,有最大值限制*/\r\n    static getGuaJiMin():number\r\n    {\r\n        let offsetSec=this.getGuaJiSec();\r\n        let offsetMin=Math.floor(offsetSec/60);\r\n        return offsetMin;\r\n    }\r\n\r\n    /**获取领取挂机奖励的时间-秒*/\r\n    static getGuaJiSec():number\r\n    {\r\n        let num=cc.sys.localStorage.getItem('guaji_time');\r\n        let curDate = new Date();\r\n        let offsetSec=0;\r\n        //let offsetMin=0;\r\n        if(num!=\"\"&&num!=null)\r\n        {\r\n            num=parseInt(num);\r\n            offsetSec=Math.floor((curDate.getTime()-num)/1000);\r\n        }else\r\n        {\r\n            this.saveGuaJiTime();\r\n        }\r\n        let level=LevelManager.getInstance().finish_level;\r\n        let max=OfflineRevenueManager.getInstance().getTime(level);\r\n        if(offsetSec>max*60)\r\n        offsetSec=max*60;\r\n\r\n        // if(IsDebug)\r\n        // offsetSec=60*60;        \r\n        return offsetSec;\r\n    }\r\n    //保存领取时间\r\n    static saveGuaJiTime()\r\n    {\r\n        let curDate = new Date();\r\n        cc.sys.localStorage.setItem('guaji_time',curDate.getTime());\r\n        this._instance.refreshed_min=0;\r\n        this._instance.refreshed_equip=[];\r\n    }\r\n\r\n    /**每60分钟的金币奖励-*/\r\n    getOfflineReward60():number\r\n    {\r\n        let level=LevelManager.getInstance().finish_level;\r\n        return this.getGetGold(level)*60;\r\n    }\r\n\r\n    /**每分钟的金币奖励-*/\r\n    getOfflineReward():number\r\n    {\r\n        let level=LevelManager.getInstance().finish_level;\r\n        return this.getGetGold(level);\r\n    }\r\n\r\n    /**每60分钟的经验奖励-*/\r\n    getOfflineHeroExp60():number\r\n    {\r\n        let level=LevelManager.getInstance().finish_level;\r\n        return this.getGetHeroExp(level)*60;\r\n    }\r\n\r\n    /**每分钟的英雄经验奖励-秒*/\r\n    getOfflineHeroExp():number\r\n    {\r\n        let level=LevelManager.getInstance().finish_level;\r\n        return this.getGetHeroExp(level);\r\n    }\r\n    /**每60分钟离线奖励-进阶石 */\r\n    getOfflineHeroStone60():number{\r\n        let level=LevelManager.getInstance().finish_level;\r\n        return this.getGetPromotion(level)*60;\r\n    }\r\n    /**每60分钟离线奖励-兽粮 */\r\n    getOfflineAnimalFood60():number{\r\n        let level=LevelManager.getInstance().finish_level;\r\n        return this.getGetAnimalFood(level)*60;\r\n    }\r\n\r\n    /**获得以num分钟离线时间作为奖励 */\r\n    public getRewards(num:number):RewardData[]{\r\n        let finishLevel=LevelManager.getInstance().finish_level;\r\n        let totalTime=num;\r\n        let rewardDatas=new Array();\r\n        let jsonData=this.getJsonOfflineRevenue(finishLevel);\r\n        let coinNum=jsonData.GetGold*totalTime;\r\n        let heroExpNum=jsonData.GetHeroExp*totalTime;\r\n        let userExpNum=jsonData.GetPlayerExp*totalTime;\r\n        //晋升石头\r\n        let stonePromotion=Math.floor(jsonData.GetPromotion*totalTime);\r\n        //普通精炼石\r\n        let jinglian1=Math.floor(jsonData.GetOrdinaryEnhancementStone*totalTime);\r\n        //中级精炼石\r\n        let jinglian2=Math.floor(jsonData.GetIntermediateEnhancementStone*totalTime);\r\n        //高级精炼石\r\n        let jinglian3=Math.floor(jsonData.GetSeniorEnhancementStone*totalTime);\r\n\r\n        // let mInfo=DingYueManager.getInstance().getMonthCardInfo();\r\n        // let qInfo=DingYueManager.getInstance().getQuarterCardInfo();\r\n        if(coinNum>0){\r\n            \r\n            coinNum=Math.floor(coinNum);\r\n            let coinRd=new RewardData();\r\n            coinRd.reward_id=PropId.Coin;\r\n            coinRd.reward_num=coinNum;\r\n            rewardDatas.push(coinRd);\r\n        }\r\n        \r\n        if(heroExpNum>0){\r\n            \r\n            heroExpNum=Math.floor(heroExpNum);\r\n            let heroExpRd=new RewardData();\r\n            heroExpRd.reward_id=PropId.HeroExp;\r\n            heroExpRd.reward_num=heroExpNum;\r\n            rewardDatas.push(heroExpRd);\r\n        }\r\n        if(userExpNum){            \r\n            let userExpRd=new RewardData();\r\n            userExpRd.reward_id=PropId.UserExp;\r\n            userExpRd.reward_num=userExpNum;\r\n            rewardDatas.push(userExpRd);\r\n        }\r\n        if(stonePromotion>0){\r\n            \r\n            stonePromotion=Math.floor(stonePromotion);\r\n            let rd=new RewardData();\r\n            rd.reward_id=PropId.HeroStone;\r\n            rd.reward_num=stonePromotion;\r\n            rewardDatas.push(rd);\r\n        }\r\n        if(jinglian1>0){\r\n            let rd=new RewardData();\r\n            rd.reward_id=PropId.ExclusiveWeaponStone1;\r\n            rd.reward_num=jinglian1;\r\n            rewardDatas.push(rd);\r\n        }\r\n        if(jinglian2>0){\r\n            let rd=new RewardData();\r\n            rd.reward_id=PropId.ExclusiveWeaponStone2;\r\n            rd.reward_num=jinglian2;\r\n            rewardDatas.push(rd);\r\n        }\r\n        if(jinglian3>0){\r\n            let rd=new RewardData();\r\n            rd.reward_id=PropId.ExclusiveWeaponStone3;\r\n            rd.reward_num=jinglian3;\r\n            rewardDatas.push(rd);\r\n        }\r\n        //获取当前的概率（千分比）\r\n        let rate=this.getProbability(finishLevel);\r\n        //获取当前使用的奖池id\r\n        let jId=this.getDropJackPot(finishLevel);\r\n        let sdEquip=new Array();\r\n        for(let i=0; i<totalTime; i++){\r\n            let randomIndex=Math.random()*1000;\r\n            if(randomIndex<rate){\r\n                //从奖池里随机一个装备列表\r\n                let rd=JackpotManager.getInstance().getRewardDataById(jId);\r\n                sdEquip.push(rd.reward_id);\r\n            }\r\n        }\r\n        sdEquip.sort((a:number,b:number)=>{\r\n            let levelA=EquipmentAttributeManager.getInstance().getStage(a);\r\n            let levelB=EquipmentAttributeManager.getInstance().getStage(b);\r\n            return levelB-levelA;\r\n        });\r\n        for(let i=0; i<sdEquip.length; i++){\r\n            let id=sdEquip[i];\r\n            let rd=new RewardData();            \r\n            rd.reward_id=id;\r\n            rd.reward_num=1;\r\n            rewardDatas.push(rd);\r\n            //EquipmentManager.getInstance().addEquipment(id);\r\n        }\r\n        return rewardDatas;\r\n    }\r\n\r\n    /**是否可以通过广告领取快速挂机 */\r\n    isCanAdFastGuaJi():boolean{\r\n        return TheStorageManager.getInstance().getNumber(StorageKey.CanAdFastOffline,0) == 0\r\n    }\r\n\r\n    /**是否可以红点提示挂机按钮 */\r\n    isCanGuaJiRedTip():boolean{\r\n        return OfflineRevenueManager.getGuaJiMin()>=60\r\n    }\r\n}\r\n"]}