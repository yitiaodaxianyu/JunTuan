{"version":3,"sources":["assets\\Scripts\\Hero\\Game\\Hero.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { BuffId, BuffStateType, BuffType, DamageType, GongJi_FangXiang, Hero_DeBuff, Hero_State, Hero_State_Name, Hero_Type, SkillIndicatorType, SkillTipType, SkillType } from \"./HeroConfig\";\r\nimport MpProgress from \"./MpProgress\";\r\nimport BuffState from \"./BuffState\";\r\nimport { GongJiData, HeroData } from \"../Data/HeroData\";\r\nimport Pet from \"../../Pet/Game/Pet\";\r\nimport GameManager from \"../../GameManager\";\r\nimport { GameEffectId, GameEffectsManager } from \"../../Game/GameEffectsManager\";\r\nimport { HeroManager } from \"../Data/HeroManager\";\r\nimport MonsterManager from \"../../Monster/MonsterManager\";\r\nimport { GameMode, GameState } from \"../../Constants\";\r\nimport BuffStateManager from \"../../Game/BuffStateManager\";\r\nimport { InjuredData, KeyFrameData } from \"../../Monster/MonsterData\";\r\nimport SkillManager from \"../../Game/SkillManager\";\r\nimport BuffTimer from \"./BuffTimer\";\r\nimport { BuffData } from \"./BuffData\";\r\nimport SkillTip from \"./SkillTip\";\r\nimport SkyManager from \"../../Game/SkyManager\";\r\nimport LanguageManager from \"../../multiLanguage/LanguageManager\";\r\nimport TaskManager from \"../../Task/TaskManager\";\r\nimport { TaskItem } from \"../../Task/TaskEnum\";\r\nimport WallManager from \"../../Wall/WallManager\";\r\nimport { EndlessBuff, EndlessBuffType } from \"../../copy/endlesschallenges/EndlessConfig\";\r\nimport { SpiritAttributeManager } from \"../../Pet/Data/SpiritAttribute\";\r\nimport FirePet from \"../../Pet/Game/FirePet\";\r\nimport { HeroBaseInfoManager } from \"../Data/HeroBaseInfo\";\r\nimport IcePet from \"../../Pet/Game/IcePet\";\r\nimport WindPet from \"../../Pet/Game/WindPet\";\r\nimport RayPet from \"../../Pet/Game/RayPet\";\r\nimport Monster from \"../../Monster/Monster\";\r\nimport { instance } from \"../../Game/TouchPlane/TouchPlane\";\r\n\r\n\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Hero extends cc.Component {\r\n    /**所有的英雄及其所需资源是否加载完毕 */\r\n    public static max_load_num: number = 0;\r\n    public static cur_loaded_num: number = 0;\r\n    /**所需的动画加载是否ok */\r\n    is_load_ok: boolean = false;\r\n    cur_load_num: number = 0;\r\n    need_load_num: number = 0;\r\n\r\n    is_LoadLoad:boolean=false;//异步加载资源锁\r\n\r\n    @property({ type: cc.Enum(Hero_Type) })\r\n    hero_type: Hero_Type = Hero_Type.ChangMaoShou;\r\n\r\n    @property(cc.Prefab)\r\n    prefab_skill_tip: cc.Prefab = null;\r\n\r\n    //骨骼动画\r\n    spine: sp.Skeleton = null;\r\n    /**当前英雄的面向 */\r\n    cur_fangxiang: GongJi_FangXiang = GongJi_FangXiang.zuo;\r\n    /**英雄的状态 */\r\n    hero_state: Hero_State = Hero_State.idle;\r\n    //攻击计数\r\n    gongji_jishu: number = 1;\r\n    /**是否可以攻击 */\r\n    is_can_gongji: boolean = false;\r\n    /**是否可以攻击计数 */\r\n    is_can_jishu: boolean = true;\r\n    //最大的攻击次数\r\n    max_gongji_num = 1;\r\n    //技能剩余的冷却时间\r\n    skill_cd_time: number = 0;\r\n    /**主动技能技能最大冷却*/\r\n    skill_total_time: number = 5;\r\n    /**施法距离 */\r\n    casting_distance: number = 1000;\r\n    /**子弹速度 */\r\n    bullet_speed: number = 1000;\r\n    //消耗的MP值\r\n    cost_mp: number = 20;\r\n    //英雄位置\r\n    posIndex:number=-1;\r\n    mp_progress: MpProgress = null;\r\n    /**英雄当前拥有的buff */\r\n    protected hero_buff: Map<BuffId, BuffTimer> = null;\r\n    /**英雄当前拥有的debuff */\r\n    protected hero_debuff: Map<BuffId, BuffTimer> = null;\r\n    /**无尽buff */\r\n    protected map_endless_buff: Map<number, EndlessBuff> = null;\r\n    /**眩晕位置 */\r\n    xuanyun_pos: cc.Vec2 = null;\r\n    /**子弹生成的位置 */\r\n    bullet_pos: cc.Vec2[] = [];\r\n    //英雄的数据\r\n    hero_data: HeroData = null;\r\n    is_show_mp_hint: boolean = false;\r\n\r\n    /**当前的韧性 */\r\n    protected cur_toughness: number = 0;\r\n    zhishiqi_type: SkillIndicatorType = SkillIndicatorType.beeline;\r\n    /**技能释放回调 */\r\n    skill_callback: Function = null;\r\n    /**攻击释放回调 */\r\n    attack_callback: Function = null;\r\n    /**眩晕回调 */;\r\n    xuanyun_callback: Function = null;\r\n    /**命中回调 */\r\n    hit_callback: Function = null;\r\n    /**重置回调 */\r\n    reset_callback: Function = null;\r\n    /**胜利回调 */\r\n    win_callback: Function = null;\r\n    /**加载完毕回调回调 */\r\n    loaded_callback: Function = null;\r\n    /**宠物 */\r\n    pet: Pet = null;\r\n    /**宠物技能的一些被动 */\r\n    /**此次伤害必定暴击 */\r\n    must_crit: number = 0;\r\n    /**宠物21可以触发增伤次数 */\r\n    crit_increase_cd_3_num: number = 0;\r\n\r\n    setup_scale: number = 0.50;\r\n    base_att_jiange: number = 0;\r\n\r\n    /**buff状态 */\r\n    map_buff_state: Map<number, BuffState> = null;\r\n    /**debuff状态 */\r\n    map_debuff_state: Map<number, BuffState> = null;\r\n    /**是否需要检查技能释放距离 */\r\n    is_need_check_distance: boolean = true;\r\n    /**指示器类型 */\r\n    protected skill_tip_type: SkillTipType = SkillTipType.Full;\r\n    /**是否可以处理触摸事件，当技能CD完毕切按下了英雄时为true */\r\n    private is_can_touch: boolean = false;\r\n    private skill_tip: SkillTip = null;\r\n    /**是否触发自动释放逻辑 */\r\n    private is_auto_release: boolean = false;\r\n    private touch_rect: cc.Rect = null;\r\n    /**总共使用技能的次数 */\r\n    protected use_skill_num: number = 0;\r\n    protected node_shadow: cc.Node = null;\r\n    /**点击剩余 */\r\n    protected click_remain: number = 0;\r\n    /**攻速记录值，不作判断 */\r\n    gongji_sudu: number = 0;\r\n    /**技能队列 */\r\n    skill_queue: SkillType[] = [];\r\n    /**是否连续攻击 */\r\n    is_double_attack: boolean = false;\r\n    /**层级*/\r\n    public v_Index: number = 0;\r\n\r\n    pos: cc.Vec2;\r\n\r\n    //----------------------------------------------LOAD---------------------------------------------\r\n    protected onLoad() {\r\n        GameManager.getInstance().all_hero.set(this.hero_type, this);\r\n   \r\n        this.spine = this.node.getComponent(sp.Skeleton);\r\n        //this.setSkin();\r\n        this.touchListen();\r\n        this.initPos();\r\n        // if(this.hero_type==Hero_Type.DeLuYi){\r\n        //     this.setup_scale=0.22;\r\n        // }\r\n        // if(this.hero_type==Hero_Type.LeiShen||this.hero_type==Hero_Type.ShouWang){\r\n        //     this.setup_scale=1;\r\n        // }\r\n        this.node.scale = this.setup_scale;\r\n        this.node.scaleX = -this.setup_scale;\r\n        this.addLoadByGameEffectId(GameEffectId.hero_skill_common, 2);\r\n        this.addLoadByGameEffectId(GameEffectId.skill_damage_record, 2);\r\n        this.node.zIndex = 1;\r\n        this.map_buff_state = new Map<number, BuffState>();\r\n        this.map_debuff_state = new Map<number, BuffState>();\r\n        this.hero_buff = new Map<BuffId, BuffTimer>();\r\n        this.hero_debuff = new Map<BuffId, BuffTimer>();\r\n        this.map_endless_buff = new Map<BuffId, EndlessBuff>();\r\n        this.addSkillTipType();\r\n    }\r\n\r\n    protected start() {\r\n        //加载数据\r\n        this.hero_data = GameManager.getInstance().game_hero_data.get(this.hero_type);\r\n        GameManager.getInstance().refreshMainWallDataByaddHero()\r\n        this.bullet_speed = HeroBaseInfoManager.getInstance().getBaseBulletSpeed(this.hero_type);\r\n        this.gongji_jishu = this.hero_data.gongji_jiange;\r\n        this.gongji_sudu = this.getAttackSpeed();\r\n        this.setHeroState(Hero_State.idle, GongJi_FangXiang.zhong);\r\n        //this.playSpineAnimaton(Hero_State_Name.Idle,true,null,null);\r\n        //加载mp进度条\r\n        this.loadMpProgress();\r\n        this.loadPet();\r\n        let selfShadow = this.node.getChildByName('Monster_Shadow');\r\n        this.pos = selfShadow.getPosition();\r\n        this.node_shadow = cc.instantiate(selfShadow);\r\n        this.node_shadow.parent = cc.find('Canvas/Hero_Shadow_Root');\r\n        this.node_shadow.scale = this.setup_scale;\r\n        this.node_shadow.setPosition(cc.v2(this.node.x + this.pos.x * this.setup_scale, this.node.y + this.pos.y * this.setup_scale));\r\n        selfShadow.removeFromParent();\r\n        if (this.getHeroState() == Hero_State.exit) {\r\n            this.node_shadow.opacity = 0;\r\n        }\r\n        // this.node.zIndex = 2;\r\n        this.casting_distance = this.hero_data.gongji_fanwei;\r\n        if (cc.winSize.height / cc.winSize.width > 2) {\r\n            this.casting_distance = this.hero_data.gongji_fanwei + 200;\r\n        }\r\n        // if(this.hero_type==Hero_Type.NvWu){\r\n        //     this.casting_distance=192*3+GameManager.getInstance().enemy_att_y-this.node.y\r\n        // }\r\n        this.setTouchRect();\r\n    }\r\n\r\n    onDestroy() {\r\n        //取消监听触摸事件\r\n        let touchNode = this.node.getChildByName('touchNode');\r\n        if (touchNode) {\r\n            // touchNode.off(cc.Node.EventType.TOUCH_START,this.onTouchStart,this);\r\n            // touchNode.off(cc.Node.EventType.TOUCH_MOVE,this.onTouchMove,this);\r\n            // touchNode.off(cc.Node.EventType.TOUCH_END,this.onTouchEnd,this);\r\n            // touchNode.off(cc.Node.EventType.TOUCH_CANCEL,this.onTouchCancel,this);\r\n            // instance.off(cc.Node.EventType.TOUCH_START, this.onTouchStartByJoy, this);\r\n            // instance.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMoveByJoy, this);\r\n            instance.off(cc.Node.EventType.TOUCH_END, this.onTouchEndByJoy, this);\r\n        }\r\n        GameManager.getInstance().all_hero.delete(this.hero_type)\r\n    }\r\n\r\n    addSkillTipType() {\r\n        let node = cc.instantiate(this.prefab_skill_tip);\r\n        this.skill_tip = node.getComponent(SkillTip);\r\n        this.skill_tip_type = this.skill_tip.getSkillTipType();\r\n        this.skill_tip.node.active = false;\r\n        switch (this.skill_tip_type) {\r\n            case SkillTipType.Full: {\r\n                SkillManager.getInstance().node.addChild(node);\r\n            } break;\r\n            case SkillTipType.Circle: {\r\n                SkillManager.getInstance().node.addChild(node);\r\n            } break;\r\n            case SkillTipType.Rect: {\r\n                SkillManager.getInstance().node.addChild(node);\r\n            } break;\r\n            case SkillTipType.Dir: {\r\n                SkillManager.getInstance().node.addChild(node);\r\n            } break;\r\n        }\r\n    }\r\n\r\n    setTouchRect() {\r\n        let touchNode = this.node.getChildByName('touchNode');\r\n        this.touch_rect = cc.rect(this.node.x + touchNode.x * this.setup_scale - (touchNode.width * this.setup_scale / 2), this.node.y + touchNode.y * this.setup_scale - (touchNode.height * this.setup_scale / 2), touchNode.width * this.setup_scale, touchNode.height * this.setup_scale);\r\n        // let gg=cc.find('Canvas/Fighting_Root').getComponent(cc.Graphics);\r\n        // gg.rect(this.touch_rect.x,this.touch_rect.y,this.touch_rect.width,this.touch_rect.height);\r\n        // gg.stroke();\r\n    }\r\n\r\n    setSkillTipSize(width: number, height: number) {\r\n        this.skill_tip.node.width = width;\r\n        this.skill_tip.node.height = height;\r\n    }\r\n\r\n    getSkillTipSize(): cc.Size {\r\n        return this.skill_tip.node.getContentSize();\r\n    }\r\n\r\n    private touchListen() {\r\n        //监听触摸事件\r\n        let touchNode = this.node.getChildByName('touchNode');\r\n        if (touchNode) {\r\n            // touchNode.on(cc.Node.EventType.TOUCH_START,this.onTouchStart,this);\r\n            // touchNode.on(cc.Node.EventType.TOUCH_MOVE,this.onTouchMove,this);\r\n            // touchNode.on(cc.Node.EventType.TOUCH_END,this.onTouchEnd,this);\r\n            // touchNode.on(cc.Node.EventType.TOUCH_CANCEL,this.onTouchCancel,this);\r\n            // instance.on(cc.Node.EventType.TOUCH_START, this.onTouchStartByJoy, this);\r\n            // instance.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMoveByJoy, this);\r\n            instance.on(cc.Node.EventType.TOUCH_END, this.onTouchEndByJoy, this);\r\n        }\r\n    }\r\n\r\n    private initPos() {\r\n        let xuanyun = this.node.getChildByName('xuanyun');\r\n        this.xuanyun_pos = xuanyun.getPosition();\r\n        xuanyun.removeFromParent();\r\n        this.bullet_pos = new Array();\r\n        let bullet1 = this.node.getChildByName('bullet1');\r\n        let bullet2 = this.node.getChildByName('bullet2');\r\n        this.bullet_pos.push(bullet2.getPosition());\r\n        this.bullet_pos.push(bullet1.getPosition());\r\n        this.bullet_pos.push(bullet2.getPosition());\r\n        bullet1.removeFromParent();\r\n        bullet2.removeFromParent();\r\n    }\r\n\r\n    onGameWin() {\r\n        this.skill_queue = new Array();\r\n        this.setHeroState(Hero_State.idle, GongJi_FangXiang.zhong);\r\n        this.gongji_jishu = 0;\r\n        if (this.win_callback) {\r\n            this.win_callback();\r\n        }\r\n    }\r\n\r\n    protected addSkillListen(callBack: Function) {\r\n        this.skill_callback = callBack;\r\n    }\r\n\r\n    protected addAttackListen(callBack: Function) {\r\n        this.attack_callback = callBack;\r\n    }\r\n\r\n    protected addHitListen(callBack: Function) {\r\n        this.hit_callback = callBack;\r\n    }\r\n\r\n    protected addResetListen(callBack: Function) {\r\n        this.reset_callback = callBack;\r\n    }\r\n\r\n    protected addGameWinListen(callBack: Function) {\r\n        this.win_callback = callBack;\r\n    }\r\n\r\n    protected addLoadedListen(callBack: Function) {\r\n        this.loaded_callback = callBack;\r\n    }\r\n\r\n    private loadMpProgress() {\r\n        // cc.resources.load('heros/skill_icon',cc.Prefab,(error: Error, assets:cc.Prefab)=>{\r\n        //     if(error)\r\n        //     {\r\n        //         console.log(error);\r\n        //         return;\r\n        //     }\r\n        //     let mpNode=cc.instantiate(assets);\r\n        //     mpNode.parent=cc.find('Canvas/Fighting_Ui');\r\n        //     mpNode.setPosition(cc.v2(this.node.x,this.node.y+15));\r\n        //     this.mp_progress=mpNode.getComponent(MpProgress);\r\n        //     this.mp_progress.init(this.hero_type);\r\n        //     this.changeCD(this.hero_data.getSkillColdDown(SkillType.Active)/3);\r\n        //     this.skill_total_time=this.hero_data.getSkillColdDown(SkillType.Active);\r\n        //     if(this.getHeroState()==Hero_State.exit){\r\n        //         this.mp_progress.hide();\r\n        //     }\r\n        // });\r\n    }\r\n\r\n    protected loadZhiShiQi(zhishiqi: string, type: SkillIndicatorType) {\r\n        this.zhishiqi_type = type;\r\n        console.log(\"加载hero\" + zhishiqi);\r\n\r\n        cc.resources.load('heros/' + zhishiqi, cc.Prefab, (error: Error, assets: cc.Prefab) => {\r\n            if (error) {\r\n                console.log(error);\r\n                return;\r\n            }\r\n        });\r\n    }\r\n\r\n    addLoadByGameEffectId(id: GameEffectId, initCount: number) {\r\n        \r\n        this.need_load_num++;\r\n       \r\n        if (GameEffectsManager.getInstance().addEffectPoolById(id, initCount, () => {\r\n            this.cur_load_num++;\r\n         \r\n            if (this.cur_load_num >= this.need_load_num&&this.is_LoadLoad==true) {\r\n                if (this.is_load_ok == false) {\r\n                    this.is_load_ok = true;\r\n                    Hero.cur_loaded_num++;\r\n                    if (this.loaded_callback) {\r\n                        this.loaded_callback();\r\n                    }\r\n                }\r\n            }\r\n        }) == true) {\r\n           \r\n         \r\n        }\r\n    }\r\n\r\n    /**加载宠物 */\r\n    loadPet() {\r\n        if (this.hero_data.pet_id > 0) {\r\n            let type = SpiritAttributeManager.getInstance().getSpiritType(this.hero_data.pet_id);\r\n            this.need_load_num++;\r\n            cc.resources.load('pet/pet' + type, cc.Prefab, (error: Error, assets: cc.Prefab) => {\r\n                if (error) {\r\n                    console.log(error);\r\n                    return;\r\n                }\r\n                let node = cc.instantiate(assets);\r\n                cc.find('Canvas/Pet_Root').addChild(node);\r\n                switch (type) {\r\n                    case 1: {\r\n                        this.pet = node.addComponent(IcePet);\r\n                    }; break;\r\n                    case 2: {\r\n                        this.pet = node.addComponent(FirePet);\r\n                    }; break;\r\n                    case 3: {\r\n                        this.pet = node.addComponent(WindPet);\r\n                    }; break;\r\n                    case 4: {\r\n                        this.pet = node.addComponent(RayPet);\r\n                    }; break;\r\n                }\r\n                this.pet.init(this.hero_data.pet_id, this.hero_type, cc.v2(this.node.x - 64, this.node.y + 64));\r\n                this.pet.setHeroData(this.hero_data);\r\n                this.cur_load_num++;\r\n                node.zIndex = 1000 - node.y;\r\n                if (this.cur_load_num >= this.need_load_num) {\r\n                    this.is_load_ok = true;\r\n                    Hero.cur_loaded_num++;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**隐藏英雄，此时英雄不能攻击或者释放技能 */\r\n    hideHero() {\r\n        this.hero_state = Hero_State.exit;\r\n        this.node.opacity = 0;\r\n        if (this.node_shadow) {\r\n            this.node_shadow.opacity = 0;\r\n        }\r\n        if (this.mp_progress) {\r\n            this.mp_progress.hide();\r\n        }\r\n    }\r\n\r\n    showHero() {\r\n        this.setHeroState(Hero_State.idle, GongJi_FangXiang.zhong);\r\n        this.node.opacity = 255;\r\n        this.node_shadow.opacity = 255;\r\n        this.mp_progress.show();\r\n    }\r\n    posX: number = 0;//初始化时候的位置\r\n    targetX: number = 0;\r\n    easing: number = 0.1;\r\n    onTouchEndByJoy(event: cc.Event.EventTouch, data) {\r\n        this.targetX = (GameManager.getInstance().aniType - 4) * 75 + this.posX;\r\n    }\r\n    //----------------------------------【皮肤】----------------------------------------------\r\n    protected setSkin() {\r\n        //let heroQuality=HeroManager.getInstance().getHeroQuality(this.hero_type);\r\n        //let tier=HeroQualityManager.getInstance().getTier(heroQuality);\r\n        //this.spine.setSkin('stage'+(HeroManager.getSkinIndex(tier)));\r\n    }\r\n    /**---------------------------------操作相关---------------------------------------------- */\r\n    //-----------------------------------触摸移动事件------------------------------------------------------------\r\n\r\n    // leaterNum: number = 0;//延迟数据播放动画\r\n    // leaterSpeed: number = 5;\r\n\r\n    // newPos: cc.Vec2;\r\n    // posYTemp: number;\r\n\r\n    // speedType: SpeedType = SpeedType.STOP;\r\n    // moveDir = cc.v2(0, 1);\r\n    // //抄别人的，本来有两种速度，现在先用一个数据\r\n    // normalSpeed = 600;\r\n    // fastSpeed = 600;\r\n\r\n    // stopSpeed = 0;\r\n\r\n    // moveSpeed = 0;\r\n\r\n\r\n    /**\r\n  * 移动\r\n  */\r\n    // move() {\r\n    //     // this.node.angle =\r\n    //     //   cc.misc.radiansToDegrees(Math.atan2(this.moveDir.y, this.moveDir.x)) - 90;\r\n\r\n    //     // if (this.rigidbody) {\r\n    //     //   this._body.applyForceToCenter(\r\n    //     //     cc.v2(this.moveDir.x * 200, this.moveDir.y * 200),\r\n    //     //     true\r\n    //     //   );\r\n    //     // } else {\r\n    //     //   const oldPos = cc.v2();\r\n    //     //   this.node.getPosition(oldPos);\r\n    //     //   const newPos = oldPos.add(this.moveDir.mul(this._moveSpeed / 120));\r\n    //     //   this.node.setPosition(newPos);\r\n    //     // }\r\n\r\n    //     if (this.speedType !== SpeedType.STOP) {\r\n    //         const oldPos = cc.v2();\r\n    //         this.node.getPosition(oldPos);\r\n    //         this.newPos = oldPos.add(this.moveDir.mul(this.moveSpeed / 120));\r\n    //         this.newPos.y = oldPos.y;\r\n    //         this.posYTemp = oldPos.y;\r\n\r\n    //     }\r\n    //     if (this.leaterNum == 0) {\r\n    //         GameManager.getInstance().moveData.unshift(this.newPos);\r\n\r\n    //     }\r\n\r\n\r\n    //     if (GameManager.getInstance().moveData[this.leaterNum * this.leaterSpeed] != null) {\r\n    //         const newPosTepm = GameManager.getInstance().moveData[this.leaterNum * this.leaterSpeed];\r\n    //         newPosTepm.y=this.posYTemp;\r\n    //         this.node.setPosition(newPosTepm);\r\n    //     }\r\n    //     if(GameManager.getInstance().moveData.length>60){\r\n\r\n    //         GameManager.getInstance().moveData.splice(60,GameManager.getInstance().moveData.length-60);\r\n\r\n\r\n    //     }\r\n\r\n    //     this.node_shadow.setPosition(cc.v2(this.node.x + this.pos.x * this.setup_scale, this.node.y + this.pos.y * this.setup_scale));\r\n    // }\r\n    // onTouchStartByJoy() { }\r\n\r\n    // onTouchMoveByJoy(event: cc.Event.EventTouch, data) {\r\n    //     this.speedType = data.speedType;\r\n    //     this.moveDir = data.moveDistance;\r\n    // }\r\n\r\n    // onTouchEndByJoy(event: cc.Event.EventTouch, data) {\r\n    //     this.speedType = data.speedType;\r\n    // }\r\n    /**---------------------------------操作相关---------------------------------------------- */\r\n    //-----------------------------------触摸事件------------------------------------------------------------//旧版功能\r\n    onTouchStart(e: cc.Event.EventTouch) {\r\n        if (this.isHaveDeBuff(BuffId.Monster_XuanYun) && this.hero_type != Hero_Type.ZhenDe) {\r\n            this.is_can_touch = false;\r\n            GameManager.getInstance().showMessage(LanguageManager.getInstance().getStrByTextId(170002), 1);\r\n            return false;\r\n        }\r\n        if (this.skill_cd_time > 0) {\r\n            this.is_can_touch = false;\r\n            if (this.click_remain > 0) {\r\n                return false;\r\n            }\r\n            GameManager.getInstance().showMessage(LanguageManager.getInstance().getStrByTextId(170001), 1);\r\n            return false;\r\n        }\r\n        if (GameManager.getInstance().cur_game_state != GameState.Game_Playing)\r\n            return false;\r\n        this.is_can_touch = true;\r\n        this.is_auto_release = true;\r\n        this.click_remain = 1;\r\n        SkillManager.getInstance().releaseSkillResult(false);\r\n        let pos = SkyManager.getInstance().node.convertToNodeSpaceAR(e.getLocation());\r\n        //如果可以释放，显示指示器\r\n        switch (this.skill_tip_type) {\r\n            case SkillTipType.Full: {\r\n                this.skill_tip.node.setPosition(cc.v2(0, -cc.winSize.height / 2));\r\n                this.skill_tip.node.active = false;\r\n                this.skill_tip.setIsCanRelease(false);\r\n            } break;\r\n            case SkillTipType.Circle: {\r\n                this.skill_tip.node.setPosition(pos);\r\n                this.skill_tip.node.active = true;\r\n                this.skill_tip.setIsCanRelease(false);\r\n            } break;\r\n            case SkillTipType.Rect: {\r\n                this.skill_tip.node.setPosition(pos);\r\n                this.skill_tip.node.active = true;\r\n                this.skill_tip.setIsCanRelease(false);\r\n            } break;\r\n            case SkillTipType.Dir: {\r\n                this.skill_tip.node.setPosition(this.node.getPosition());\r\n                this.skill_tip.node.active = true;\r\n                this.skill_tip.setIsCanRelease(false);\r\n            } break;\r\n        }\r\n        //显示范围指示器\r\n        SkillManager.getInstance().showSkillRange(this.node.y, this.casting_distance);\r\n    }\r\n\r\n    onTouchMove(e: cc.Event.EventTouch) {\r\n        if (this.is_can_touch == false || GameManager.getInstance().cur_game_state != GameState.Game_Playing)\r\n            return;\r\n        let pos = SkyManager.getInstance().node.convertToNodeSpaceAR(e.getLocation());\r\n        if (!this.touch_rect.contains(pos)) {\r\n            this.is_auto_release = false;\r\n        }\r\n        switch (this.skill_tip_type) {\r\n            case SkillTipType.Full: {\r\n\r\n            } break;\r\n            case SkillTipType.Circle: {\r\n                this.skill_tip.node.setPosition(pos);\r\n            } break;\r\n            case SkillTipType.Rect: {\r\n                this.skill_tip.node.setPosition(pos);\r\n            } break;\r\n            case SkillTipType.Dir: {\r\n\r\n            } break;\r\n        }\r\n\r\n        if (pos.y > GameManager.getInstance().enemy_att_y) {\r\n            let distance = pos.y - this.node.y;\r\n            if (distance <= this.casting_distance) {\r\n                this.skill_tip.setIsCanRelease(true);\r\n            } else {\r\n                this.skill_tip.setIsCanRelease(false);\r\n            }\r\n        } else {\r\n            this.skill_tip.setIsCanRelease(false);\r\n        }\r\n    }\r\n\r\n    onTouchEnd(e: cc.Event.EventTouch) {\r\n        SkillManager.getInstance().releaseSkillResult(true);\r\n        SkillManager.getInstance().hideSkillRange();\r\n        this.skill_tip.node.active = false;\r\n        if (this.is_can_touch == false || GameManager.getInstance().cur_game_state != GameState.Game_Playing)\r\n            return;\r\n        let pos = SkyManager.getInstance().node.convertToNodeSpaceAR(e.getLocation());\r\n        //判断坐标\r\n        if (pos.y > GameManager.getInstance().enemy_att_y) {\r\n            let distance = pos.y - this.node.y;\r\n            if (distance <= this.casting_distance) {\r\n                this.releaseSkill(pos);\r\n            }\r\n        } else {\r\n            if (this.is_auto_release) {\r\n                if (this.startAutoRelease() == false) {\r\n                    GameManager.getInstance().showMessage(LanguageManager.getInstance().getStrByTextId(140023));\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    onTouchCancel(e: cc.Event.EventTouch) {\r\n        SkillManager.getInstance().releaseSkillResult(true);\r\n        SkillManager.getInstance().hideSkillRange();\r\n        this.skill_tip.node.active = false;\r\n        if (this.is_can_touch == false || GameManager.getInstance().cur_game_state != GameState.Game_Playing)\r\n            return;\r\n        let pos = SkyManager.getInstance().node.convertToNodeSpaceAR(e.getLocation());\r\n        if (pos.y > GameManager.getInstance().enemy_att_y) {\r\n            let distance = pos.y - this.node.y;\r\n            if (distance <= this.casting_distance) {\r\n                this.releaseSkill(pos);\r\n            }\r\n        } else {\r\n            if (this.is_auto_release) {\r\n                this.startAutoRelease();\r\n            }\r\n        }\r\n    }\r\n\r\n    startAutoRelease(): boolean {\r\n        //找怪，找不到就不放\r\n        let enemys = MonsterManager.getInstance().getMonstersForNearestBySkill(1, this.node.y, this.casting_distance);\r\n        if (enemys) {\r\n            //最前的敌人\r\n            let enemyPos = enemys[0].getComponent(Monster).getCenterPos();\r\n            this.releaseSkill(enemyPos);\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**触摸的位置 */\r\n    releaseSkill(touchPos: cc.Vec2) {\r\n        if (GameManager.getInstance().cur_game_state != GameState.Game_Playing)\r\n            return;\r\n        this.use_skill_num++;\r\n        //this.mp_progress.showLight();\r\n        if (this.skill_callback) {\r\n            this.skill_callback(touchPos);\r\n        }\r\n        this.resetCD();\r\n        TaskManager.getInstance().emitTask(TaskItem.释放X次人物技能);\r\n    }\r\n\r\n    protected getSkillReleaseId(): number {\r\n        return this.hero_type * 10000 + this.use_skill_num;\r\n    }\r\n\r\n    /**获得子弹生成的位置 */\r\n    getCreateBulletPos(): cc.Vec2 {\r\n        let pos = this.bullet_pos[this.cur_fangxiang];\r\n        return cc.v2(this.node.x + pos.x * this.node.scaleX, this.node.y + pos.y * this.node.scaleY);\r\n    }\r\n    /**获得子弹相对英雄的位置 */\r\n    getHeroBulletPos(): cc.Vec2 {\r\n        return this.bullet_pos[this.cur_fangxiang];\r\n    }\r\n\r\n    //----------------------------------无尽buff-------------------------------------------\r\n    /**\r\n     * 添加无尽buff\r\n     * @param endlessBuff EndlessBuff的实例\r\n     */\r\n    //  Administrator:\r\n    //  1.攻击力+x%\r\n    //  2.攻速+x%\r\n    //  3.暴击值+x\r\n    //  4.暴击增幅+x%\r\n    //  5.防御力+x%\r\n    //  6.最大生命值+x% \r\n    //  7.每秒回复最大生命值x%\r\n    //  8.立即回复最大生命值x%（注：该buff生效后立即消失）\r\n    //  9.连续攻击 概率x%\r\n    //  10.主动技能冷却时间减少x%\r\n    //  11.最终伤害加成x%\r\n    addEndlessBuff(endlessBuff: EndlessBuff) {\r\n        if (!this.isHaveEndlessId(endlessBuff.id)) {\r\n            this.map_endless_buff.set(endlessBuff.id, endlessBuff);\r\n            switch (endlessBuff.type) {\r\n                case EndlessBuffType.Attack: {\r\n                    this.hero_data.total_attack += this.hero_data.fixed_attck * endlessBuff.value;\r\n                } break;\r\n                case EndlessBuffType.AttackSpeed: {\r\n                    this.changeAttackSpeed(endlessBuff.value);\r\n                } break;\r\n                case EndlessBuffType.CritRate: {\r\n                    this.hero_data.Critical += endlessBuff.value;\r\n                } break;\r\n                case EndlessBuffType.CritDamage: {\r\n                    this.hero_data.ExtraCritical += endlessBuff.value;\r\n                } break;\r\n                case EndlessBuffType.Defense: {\r\n                    this.hero_data.total_defense += this.hero_data.fix_defense * endlessBuff.value;\r\n                } break;\r\n                case EndlessBuffType.HealthMax: {\r\n                    this.hero_data.total_hp += this.hero_data.fixed_hp * endlessBuff.value;\r\n                    // console.log(\"城墙加血:\",this.hero_data.total_hp,this.hero_data.fixed_hp,endlessBuff.value)\r\n                    GameManager.getInstance().refreshMainWallData()\r\n                } break;\r\n                case EndlessBuffType.HealthSec: {\r\n                    let buffData = new BuffData();\r\n                    buffData.buff_id = BuffId.Wall_Endless_Add_hp + this.hero_type;\r\n                    buffData.buff_type = BuffType.Gain;\r\n                    buffData.buff_value = [endlessBuff.value * WallManager.getInstance().getMainWall().getMaxHp()];\r\n                    buffData.remain_time = 66666666;\r\n                    // buffData.game_effect_id=GameEffectId.chang_mao_shou_skill_active_1;\r\n                    buffData.recovery_jiange_time = 1;\r\n                    WallManager.getInstance().getMainWall().addBuff(buffData)\r\n                } break;\r\n                case EndlessBuffType.HealthTeamAdd: {\r\n                    // let hp=WallManager.getInstance().getMainWall().getCurHp()+(endlessBuff.value*WallManager.getInstance().getMainWall().getMaxHp())\r\n                    // WallManager.getInstance().getMainWall().changeHp(hp)\r\n                    //及时用\r\n                } break;\r\n                case EndlessBuffType.DoubleAttack: {\r\n                    //连续攻击,不用加buff\r\n                } break;\r\n                case EndlessBuffType.ActiveSkillCd: {\r\n                    this.skill_total_time -= this.hero_data.getSkillColdDown(SkillType.Active) * endlessBuff.value\r\n                } break;\r\n                case EndlessBuffType.AddDamage: {\r\n                    this.hero_data.all_increase_damage += endlessBuff.value;\r\n                } break;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 删除无尽buff\r\n     * @param id 无尽buff-id\r\n     */\r\n    removeEndlessBuff(id: number) {\r\n        if (!this.isHaveEndlessId(id)) {\r\n            let endlessBuff = this.map_endless_buff.get(id);\r\n            this.map_endless_buff.delete(id);\r\n            switch (endlessBuff.type) {\r\n                case EndlessBuffType.Attack: {\r\n                    this.hero_data.total_attack -= this.hero_data.fixed_attck * endlessBuff.value;\r\n                } break;\r\n                case EndlessBuffType.AttackSpeed: {\r\n                    this.changeAttackSpeed(-endlessBuff.value);\r\n                } break;\r\n                case EndlessBuffType.CritRate: {\r\n                    this.hero_data.Critical -= endlessBuff.value;\r\n                } break;\r\n                case EndlessBuffType.CritDamage: {\r\n                    this.hero_data.ExtraCritical -= endlessBuff.value;\r\n                } break;\r\n                case EndlessBuffType.Defense: {\r\n                    this.hero_data.total_defense -= this.hero_data.fix_defense * endlessBuff.value;\r\n                } break;\r\n                case EndlessBuffType.HealthMax: {\r\n                    this.hero_data.total_hp -= this.hero_data.fixed_hp * endlessBuff.value;\r\n                } break;\r\n                case EndlessBuffType.HealthSec: {\r\n                    WallManager.getInstance().getMainWall().subBuff(BuffId.Wall_Endless_Add_hp + this.hero_type)\r\n                } break;\r\n                case EndlessBuffType.HealthTeamAdd: {\r\n\r\n                } break;\r\n                case EndlessBuffType.DoubleAttack: {\r\n\r\n                } break;\r\n                case EndlessBuffType.ActiveSkillCd: {\r\n                    this.skill_total_time += this.hero_data.getSkillColdDown(SkillType.Active) * endlessBuff.value\r\n                } break;\r\n                case EndlessBuffType.AddDamage: {\r\n                    this.hero_data.all_increase_damage -= endlessBuff.value;\r\n                } break;\r\n            }\r\n        }\r\n    }\r\n    /**是否拥有一个无尽buff id */\r\n    isHaveEndlessId(id: number): boolean {\r\n        // console.log(\"++++++++\",id,this.map_endless_buff)\r\n        return this.map_endless_buff.has(id);\r\n    }\r\n    /**是否拥有一个无尽buff 类型 */\r\n    getEndlessByType(type: number): EndlessBuff {\r\n        let buff: EndlessBuff = null;\r\n        this.map_endless_buff.forEach((v, k) => {\r\n            if (v.type == type) {\r\n                buff = v;\r\n            }\r\n        });\r\n        return buff;\r\n    }\r\n    /**获得一个无尽buff */\r\n    getEndlessBuff(id: number): EndlessBuff {\r\n        return this.map_endless_buff.get(id);\r\n    }\r\n\r\n    //----------------------------------BUFF--------------------------------------------------\r\n\r\n    addBuff(buffData: BuffData): BuffTimer {\r\n        let buffId = buffData.buff_id;\r\n        if (!this.isHaveBuff(buffId)) {\r\n            //添加buff节点和特效       \r\n            let node: cc.Node = null;\r\n            if (buffData.game_effect_id == GameEffectId.Null) {\r\n                node = new cc.Node(buffData.game_effect_id.toString());\r\n                this.node.addChild(node);\r\n            } else {\r\n                node = GameEffectsManager.getInstance().createGameEffectForParent(buffData.game_effect_id, this.xuanyun_pos, this.node);\r\n                //node.scale=this.node.width/200;\r\n            }\r\n            //添加buff\r\n            let buff: BuffTimer = node.getComponent(BuffTimer);\r\n            if (!buff) {\r\n                buff = node.addComponent(BuffTimer);\r\n            }\r\n            buff.init(buffData);\r\n            //buff销毁时处理\r\n            buff.addDestroyListen(this.onBuffDestory.bind(this));\r\n            //buff治疗触发时处理\r\n            if (buffData.recovery_jiange_time > 0) {\r\n                buff.addRecoveryListen({\r\n                    doRecovery: (num: number) => {\r\n                        WallManager.getInstance().getMainWall().changeHp(num);\r\n                    }\r\n                }, buff.getFirstBuffValue());\r\n            }\r\n            this.hero_buff.set(buffData.buff_id, buff);\r\n            node.scale = 1 / this.setup_scale;\r\n            switch (buffId) {\r\n                case BuffId.Pet3_JiaSu:\r\n                case BuffId.Hero_MeiMo_GongSu:\r\n                case BuffId.Hero_ZhenDe_Gongsu:\r\n                case BuffId.Hero_KuangZhanShi_DaZhao:\r\n                    {\r\n                        this.changeAttackSpeed(buffData.buff_value[0]);\r\n                    } break;\r\n                case BuffId.Hero_ChangMaoShow_GongSu: {\r\n                    this.changeAttackSpeed(buffData.buff_value[0]);\r\n                    node.setPosition(cc.v2(0, 0));\r\n                    //新增一个背后特效\r\n                    buff.addTeXiao(GameEffectId.chang_mao_shou_skill_active_2, this.node.getPosition(), cc.find('Canvas/Hero_Shadow_Root'))\r\n                } break;\r\n                case BuffId.Hero_ZhenDe_BaoJiMingZhongLv: {\r\n                    this.hero_data.crit_ex += buffData.buff_value[0];\r\n                    this.hero_data.hit_ex += buffData.buff_value[0];\r\n                } break;\r\n            }\r\n            this.addBuffState(buffId, buffData.remain_time);\r\n            return buff;\r\n        } else {\r\n            let buff = this.hero_buff.get(buffId);\r\n            buff.refreshBuff(buffData);\r\n            this.addBuffState(buffId, buffData.remain_time);\r\n            return buff;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    subBuff(buffId: BuffId): boolean {\r\n        let buff = this.hero_buff.get(buffId);\r\n        if (buff) {\r\n            buff.destroySelf();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    onBuffDestory(buffData: BuffData) {\r\n        this.hero_buff.delete(buffData.buff_id);\r\n        switch (buffData.buff_id) {\r\n            case BuffId.Pet3_JiaSu:\r\n            case BuffId.Hero_MeiMo_GongSu:\r\n            case BuffId.Hero_KuangZhanShi_DaZhao:\r\n            case BuffId.Hero_ZhenDe_Gongsu:\r\n            case BuffId.Hero_ChangMaoShow_GongSu: {\r\n                this.changeAttackSpeed(-buffData.buff_value[0]);\r\n            } break;\r\n            case BuffId.Hero_ZhenDe_BaoJiMingZhongLv: {\r\n                this.hero_data.crit_ex -= buffData.buff_value[0];\r\n                this.hero_data.hit_ex -= buffData.buff_value[0];\r\n            } break;\r\n        }\r\n    }\r\n\r\n    isHaveBuff(buff: BuffId): boolean {\r\n        return this.hero_buff.has(buff);\r\n    }\r\n\r\n    removeAllBuff() {\r\n        this.hero_buff.forEach((buff: BuffTimer) => {\r\n            this.subBuff(buff.getBuffId());\r\n        })\r\n    }\r\n\r\n\r\n    addDeBuff(buffData: BuffData, insight: number = 0): boolean {\r\n        if (!this.isHaveDeBuff(buffData.buff_id)) {\r\n            //控制类的debuff需要根据韧性来实现具体的效果\r\n            if (buffData.buff_type == BuffType.Vertigo) {\r\n                if (this.cur_toughness >= 1) {\r\n                    return false;\r\n                }\r\n                if (this.hero_type != Hero_Type.ZhenDe) {\r\n                    this.mp_progress.setDisable(true);\r\n                    SkillManager.getInstance().hideSkillRange();\r\n                    this.skill_tip.node.active = false;\r\n                }\r\n                this.gongji_jishu = 0;\r\n                this.spine.paused = true;\r\n                this.is_can_touch = false;\r\n                if (insight > 0) {\r\n                    buffData.remain_time = InjuredData.calcControlTime(buffData.remain_time, this.cur_toughness, insight);\r\n                }\r\n                if (this.xuanyun_callback) {\r\n                    this.xuanyun_callback(true);\r\n                }\r\n                WallManager.getInstance().getMainWall().showVertigo(buffData.remain_time);\r\n                //关闭时停\r\n                SkillManager.getInstance().setTimeStop(false);\r\n                SkillManager.getInstance().setIsSkillState(false);\r\n            }\r\n            //添加buff节点和特效       \r\n            let node: cc.Node = null;\r\n            if (buffData.game_effect_id == GameEffectId.Null) {\r\n                node = new cc.Node(buffData.game_effect_id.toString());\r\n                this.node.addChild(node);\r\n            } else {\r\n                node = GameEffectsManager.getInstance().createGameEffectForParent(buffData.game_effect_id, this.xuanyun_pos, this.node);\r\n                node.scale = this.node.width / 200;\r\n            }\r\n            //添加buff\r\n            let buff: BuffTimer = node.getComponent(BuffTimer);\r\n            if (!buff) {\r\n                buff = node.addComponent(BuffTimer);\r\n            }\r\n            buff.init(buffData);\r\n            //buff销毁时处理\r\n            buff.addDestroyListen(this.onDeBuffDestory.bind(this));\r\n            this.hero_debuff.set(buffData.buff_id, buff);\r\n            node.scale = 1 / this.setup_scale;\r\n            switch (buffData.buff_id) {\r\n                case BuffId.Boss6_Skill_2_jiangongsu:\r\n                case BuffId.Boss3_JIAN_GongSu: {\r\n                    this.changeAttackSpeed(-buffData.buff_value[0]);\r\n                } break;\r\n                case BuffId.Boss8_Skill_2_attack: {\r\n                    this.hero_data.total_attack -= buffData.buff_value[0] * this.hero_data.fixed_attck;\r\n                } break;\r\n            }\r\n            this.addDeBuffState(buffData.buff_id, buffData.remain_time);\r\n            return true;\r\n        } else {\r\n            let buff = this.hero_debuff.get(buffData.buff_id);\r\n            buff.refreshBuff(buffData);\r\n            this.addDeBuffState(buffData.buff_id, buffData.remain_time);\r\n            switch (buffData.buff_id) {\r\n                case BuffId.Boss6_Skill_2_jiangongsu:\r\n                    {\r\n                        if (buff.getFloorNum() < buffData.max_floor) {\r\n                            this.changeAttackSpeed(-buffData.buff_value[0]);\r\n                        }\r\n                    } break;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 去除一个debuff\r\n     * @param buff debuff类型\r\n     * @param isNeedRecycle 是否需要调用回收\r\n     * @returns \r\n     */\r\n    subDeBuff(buffId: BuffId): boolean {\r\n        let buff = this.hero_debuff.get(buffId);\r\n        if (buff) {\r\n            buff.destroySelf();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    onDeBuffDestory(buffData: BuffData) {\r\n        // let buffState=this.map_debuff_state.get(BuffStateManager.getInstance().getDeBuffType(buffData.buff_id));\r\n        // if(buffState){\r\n        //     buffState.destroySelf();\r\n        // }\r\n        this.hero_debuff.delete(buffData.buff_id);\r\n        switch (buffData.buff_id) {\r\n            case BuffId.Monster_XuanYun: {\r\n                if (this.hero_type != Hero_Type.ZhenDe)\r\n                    this.mp_progress.setDisable(false);\r\n                this.gongji_jishu = 0;\r\n                this.spine.paused = false;\r\n                this.is_can_touch = true;\r\n                WallManager.getInstance().getMainWall().hideVertigo();\r\n                if (this.xuanyun_callback) {\r\n                    this.xuanyun_callback(false);\r\n                }\r\n            } break;\r\n            case BuffId.Boss3_JIAN_GongSu: {\r\n                this.changeAttackSpeed(buffData.buff_value[0]);\r\n                let buffState = this.map_debuff_state.get(BuffStateType.AttackSpeed);\r\n                if (buffState) {\r\n                    buffState.destroySelf();\r\n                }\r\n            } break;\r\n            case BuffId.Boss6_Skill_2_jiangongsu: {\r\n                this.changeAttackSpeed(buffData.buff_value[0] * buffData.cur_floor);\r\n                let buffState = this.map_debuff_state.get(BuffStateType.AttackSpeed);\r\n                if (buffState) {\r\n                    buffState.destroySelf();\r\n                }\r\n            } break;\r\n            case BuffId.Boss8_Skill_2_attack: {\r\n                this.hero_data.total_attack += buffData.buff_value[0] * this.hero_data.fixed_attck;\r\n                let buffState = this.map_debuff_state.get(BuffStateType.Attack);\r\n                if (buffState) {\r\n                    buffState.destroySelf();\r\n                }\r\n            } break;\r\n        }\r\n    }\r\n\r\n    isHaveDeBuff(buffId: BuffId): boolean {\r\n        return this.hero_debuff.has(buffId);\r\n    }\r\n\r\n    removeAllDeBuff() {\r\n        this.hero_debuff.forEach((v, k) => {\r\n            this.subDeBuff(v.getBuffId())\r\n        });\r\n\r\n    }\r\n\r\n    getGameEffectIdByDebuff(buff: Hero_DeBuff): GameEffectId {\r\n        let gameEffectId = GameEffectId.Null;\r\n        switch (buff) {\r\n            case Hero_DeBuff.XuanYun: {\r\n                gameEffectId = GameEffectId.xuanyun;\r\n            } break;\r\n        }\r\n        return gameEffectId;\r\n    }\r\n\r\n    getGameEffectNameByDebuff(buff: Hero_DeBuff): string {\r\n        let name = '0';\r\n        switch (buff) {\r\n            case Hero_DeBuff.XuanYun: {\r\n                name = GameEffectId.xuanyun + '';\r\n            } break;\r\n        }\r\n        return name;\r\n    }\r\n\r\n    addXuanYunListen(callback: Function) {\r\n        this.xuanyun_callback = callback;\r\n    }\r\n\r\n    resetState() {\r\n        this.setCD(1 / 3);\r\n        this.removeAllBuff();\r\n        this.removeAllDeBuff();\r\n        this.map_buff_state.forEach((v, k) => {\r\n            v.destroySelf();\r\n        });\r\n        this.map_debuff_state.forEach((v, k) => {\r\n            v.destroySelf();\r\n        });\r\n        if (this.reset_callback) {\r\n            this.reset_callback();\r\n        }\r\n        //同步数据信息\r\n        this.hero_data = GameManager.getInstance().game_hero_data.get(this.hero_type);\r\n    }\r\n\r\n    /**添加一个buff状态图标 */\r\n    addBuffState(buffId: BuffId, remainTime: number) {\r\n        let types = BuffStateManager.getInstance().getBuffType(buffId);\r\n        for (let i = 0; i < types.length; i++) {\r\n            let type = types[i];\r\n            if (this.map_buff_state.has(type)) {\r\n                this.map_buff_state.get(type).refreshTime(remainTime);\r\n            } else {\r\n                let bfState = BuffStateManager.getInstance().createBuffState(type, this.hero_type);\r\n                bfState.init(type, remainTime, this.onBuffStateDestory.bind(this));\r\n                this.map_buff_state.set(type, bfState);\r\n                //this.node.addChild(shield.node);\r\n            }\r\n        }\r\n    }\r\n\r\n    onBuffStateDestory(type: BuffStateType) {\r\n        this.map_buff_state.delete(type);\r\n    }\r\n\r\n    /**添加一个buff状态图标 */\r\n    addDeBuffState(buffId: BuffId, remainTime: number) {\r\n        let types = BuffStateManager.getInstance().getDeBuffType(buffId);\r\n        for (let i = 0; i < types.length; i++) {\r\n            let type = types[i];\r\n            if (this.map_debuff_state.has(type)) {\r\n                this.map_debuff_state.get(type).refreshTime(remainTime);\r\n            } else {\r\n                let bfState = BuffStateManager.getInstance().createDeBuffState(type, this.hero_type);\r\n                bfState.init(type, remainTime, this.onDeBuffStateDestory.bind(this));\r\n                this.map_debuff_state.set(type, bfState);\r\n                //this.node.addChild(shield.node);\r\n            }\r\n        }\r\n    }\r\n\r\n    onDeBuffStateDestory(type: BuffStateType) {\r\n        this.map_debuff_state.delete(type);\r\n    }\r\n\r\n    /**设置攻速，每秒攻击次数 */\r\n    private setAttackSpeed(numSec: number) {\r\n        this.gongji_sudu = numSec;\r\n        if (numSec > 10) {\r\n            numSec = 10;\r\n        }\r\n        if (numSec < 0.1) {\r\n            numSec = 0.1;\r\n        }\r\n        this.hero_data.gongji_jiange = 1 / numSec;\r\n    }\r\n    /**改变当前攻速,buffData:比率 */\r\n    private changeAttackSpeed(rate: number) {\r\n        let gjsd = this.getAttackSpeed();\r\n        gjsd += (rate) * (1 / this.hero_data.base_jiange);\r\n        this.setAttackSpeed(gjsd);\r\n    }\r\n    /**获得当前攻速 */\r\n    private getAttackSpeed(): number {\r\n        return 1 / this.hero_data.gongji_jiange;\r\n    }\r\n\r\n    //---------------------------状态,动画----------------------------------------------\r\n    public setHeroState(state: Hero_State, fangxiang: GongJi_FangXiang, data?: KeyFrameData[], endCallback?: Function) {\r\n        this.hero_state = state;\r\n        this.cur_fangxiang = fangxiang;\r\n        switch (this.cur_fangxiang) {\r\n            case GongJi_FangXiang.zuo: {\r\n                this.node.scaleX = this.setup_scale;\r\n                //this.node.scaleX = -this.setup_scale;\r\n            } break;\r\n            case GongJi_FangXiang.zhong: {\r\n                this.node.scaleX = this.setup_scale;\r\n            } break;\r\n            case GongJi_FangXiang.you: {\r\n                this.node.scaleX = this.setup_scale;\r\n            } break;\r\n        }\r\n        //播放动画\r\n        switch (this.hero_state) {\r\n            case Hero_State.idle: {\r\n                this.playSpineAnimation(this.getSpineName(), true, null, null);\r\n            } break;\r\n            case Hero_State.attack: {\r\n                this.playSpineAnimation(this.getSpineName(), false, data, endCallback);\r\n            } break;\r\n            case Hero_State.skill:\r\n                {\r\n                    this.playSpineAnimation(this.getSpineName(), false, data, endCallback);\r\n                } break;\r\n        }\r\n    }\r\n\r\n    protected setHeroStateAndAnimation(state: Hero_State, name: string, loop: boolean, data?: KeyFrameData[], endCallback?: Function) {\r\n        this.hero_state = state;\r\n        this.playSpineAnimation(name, loop, data, endCallback);\r\n    }\r\n\r\n    getHeroState() {\r\n        return this.hero_state;\r\n    }\r\n\r\n    /**根据敌人位置获得攻击方向 */\r\n    protected getFangXiangByPos(pos: cc.Vec2): GongJi_FangXiang {\r\n        //对敌人单位进行方向判断，确定打击方向\r\n        let fangxiang = GongJi_FangXiang.zhong;\r\n        let offsetPos = pos.sub(this.node.getPosition());\r\n        let pi2 = Math.PI * 2;\r\n        let radian = (Math.atan2(offsetPos.y, offsetPos.x) + pi2) % pi2;\r\n        let angle = 180 * radian / Math.PI;\r\n        if (angle <= 60) {\r\n            fangxiang = GongJi_FangXiang.you;\r\n        } else if (angle > 60 && angle < 120) {\r\n            fangxiang = GongJi_FangXiang.zhong;\r\n        } else if (angle >= 120 && angle <= 180) {\r\n            fangxiang = GongJi_FangXiang.zuo;\r\n        }\r\n        return fangxiang;\r\n    }\r\n\r\n    getSpineName(): string {\r\n        switch (this.hero_state) {\r\n            case Hero_State.attack: {\r\n                return Hero_State_Name.Attack;\r\n            } break;\r\n            case Hero_State.skill: {\r\n                return Hero_State_Name.Skill;\r\n            } break;\r\n            case Hero_State.idle: {\r\n                return Hero_State_Name.Idle;\r\n            } break;\r\n        }\r\n    }\r\n    /**\r\n     * 播放一个骨骼动画\r\n     * @param name 骨骼动画名称\r\n     * @param isLoop 是否循环\r\n     * @param data 是否监听关键帧，关键帧数据包含关键帧名称，监听到关键帧后的回调\r\n     * @param endCallback 播放结束后的回调\r\n     */\r\n    playSpineAnimation(name: string, isLoop: boolean = false, data?: KeyFrameData[], endCallback?: Function) {\r\n        let anima = this.spine.setAnimation(0, name, isLoop);\r\n        if (data) {\r\n            this.spine.setTrackEventListener(anima, (entry: sp.spine.TrackEntry, event) => {\r\n                for (let i = 0; i < data.length; i++) {\r\n                    if (event.data.name == data[i].name) {\r\n                        data[i].callback();\r\n                    }\r\n                }\r\n            })\r\n        }\r\n        if (endCallback) {\r\n            this.spine.setTrackCompleteListener(anima, (entry: sp.spine.TrackEntry, event) => {\r\n                anima.listener = null;\r\n                endCallback();\r\n            })\r\n        }\r\n    }\r\n\r\n    //------------------------------CD--------------------------------------\r\n\r\n    public resetSkill() {\r\n        this.skill_cd_time = 0;\r\n        this.showCD();\r\n    }\r\n\r\n    public resetCD() {\r\n        this.skill_cd_time = this.skill_total_time;\r\n        this.showCD();\r\n        //释放了技能，立马减去MP\r\n        //GameManager.getInstance().wall_data.changeMp(-this.hero_data.cost_mp);\r\n    }\r\n    /**百分比 */\r\n    public setCD(perTime: number) {\r\n        this.skill_cd_time = perTime * this.hero_data.getSkillColdDown(SkillType.Active);;\r\n        this.changeCD(0);\r\n    }\r\n\r\n    public changeCD(time: number) {\r\n        this.skill_cd_time += time;\r\n        if (this.skill_cd_time <= 0) {\r\n            this.skill_cd_time = 0;\r\n            if (this.mp_progress) {\r\n                this.mp_progress.setNormalSP();\r\n            }\r\n            if (GameManager.getInstance().auto_fighting && GameManager.getInstance().cur_game_state == GameState.Game_Playing && this.getIsCanSkill() && SkillManager.getInstance().getIsSkillState() == false) {\r\n                this.startAutoRelease();\r\n            }\r\n        } else {\r\n            //显示蒙板和倒计时\r\n            if (this.mp_progress) {\r\n                this.mp_progress.setCDSP();\r\n            }\r\n        }\r\n        this.showCD();\r\n    }\r\n\r\n    private showCD() {\r\n        if (this.mp_progress) {\r\n            let progress = 1 - this.skill_cd_time / this.skill_total_time;\r\n            this.mp_progress.setProgress(progress);\r\n        }\r\n    }\r\n\r\n    getIsCanSkill(): boolean {\r\n        if (this.isHaveDeBuff(BuffId.Monster_XuanYun) || this.getHeroState() == Hero_State.exit) {\r\n            return false;\r\n        }\r\n        this.is_show_mp_hint = false;\r\n        if (this.skill_cd_time <= 0) {\r\n            if (this.is_need_check_distance) {\r\n                //如果需要判断释放距离的，则需要判断释放距离内有没有怪物，没有则返回false\r\n                let enemys = MonsterManager.getInstance().getMonstersForNearestBySkill(this.max_gongji_num, this.node.y, this.casting_distance);\r\n                if (enemys == null) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * \r\n     * @param damage 本次不暴击的伤害值\r\n     * @param isBullet 是否子弹类型\r\n     * @param skillType 技能类型\r\n     * @param skillRate 如果是技能，技能的比率\r\n     * @param continuousRate 伤害比率-应用在持续伤害比率\r\n     * @returns 攻击数据\r\n     */\r\n    getGongJiData(damageType: DamageType, isBullet: boolean, skillType: SkillType, skillRate: number = 1, continuousRate: number = 0): GongJiData {\r\n        let gjData = new GongJiData();\r\n        gjData.hero_data = cc.instantiate(this.hero_data);\r\n        gjData.is_bullet = isBullet;\r\n        gjData.damage_type = damageType;\r\n        gjData.hero_type = this.hero_type;\r\n        if (damageType == DamageType.Normal) {\r\n\r\n        } else {\r\n            //技能伤害比率\r\n            gjData.skill_damage_rate = skillRate;\r\n            gjData.continuous_damage_rate = continuousRate;\r\n            if (skillType == SkillType.Active) {\r\n                gjData.skill_release_id = this.getSkillReleaseId();\r\n            }\r\n        }\r\n        return gjData;\r\n    }\r\n\r\n    onDamageMonster(damageType: DamageType, isCrit: boolean, monster: cc.Node) {\r\n        if (damageType == DamageType.Normal) {\r\n            if (this.pet) {\r\n                this.pet.onHeroHitMonster(monster);\r\n            }\r\n        }\r\n        if (this.hit_callback) {\r\n            this.hit_callback(damageType, isCrit, monster);\r\n        }\r\n    }\r\n\r\n    resetGongJiJiShu() {\r\n        this.gongji_jishu = 0;\r\n        this.is_can_jishu = true;\r\n    }\r\n\r\n    resetNormalAttack() {\r\n        this.gongji_jishu = this.hero_data.gongji_jiange;\r\n        this.is_can_jishu = true;\r\n    }\r\n\r\n    setAttSpineScale() {\r\n        this.spine.timeScale = this.hero_data.base_jiange / this.hero_data.gongji_jiange;\r\n    }\r\n\r\n    startNormalAttack(monster: cc.Node) {\r\n        let isDouble: boolean = this.is_double_attack;\r\n        if (this.is_double_attack) {\r\n            this.spine.timeScale = this.hero_data.base_jiange / this.hero_data.gongji_jiange * 2;\r\n        }\r\n        this.is_double_attack = false;\r\n        this.attack_callback(monster);\r\n        if (this.pet) {\r\n            this.pet.startReleaseSkill(monster);\r\n        }\r\n        if (GameManager.getInstance().cur_game_mode == GameMode.Endless) {\r\n            if (isDouble == false) {\r\n                let buff = this.getEndlessByType(EndlessBuffType.DoubleAttack)\r\n                if (buff) {\r\n                    //概率\r\n                    let rate = buff.value;\r\n                    if (Math.random() < rate) {\r\n                        this.is_double_attack = true;\r\n                        this.spine.timeScale = this.hero_data.base_jiange / this.hero_data.gongji_jiange * 2;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //---------------------------UPDATE-----------------------------------\r\n    update(dt: number) {\r\n        if (GameManager.getInstance().cur_game_state != GameState.Game_Playing || Hero_State.exit == this.getHeroState())\r\n            return;\r\n        this.checkSkill(dt);\r\n        if (this.isHaveDeBuff(BuffId.Monster_XuanYun)) {\r\n            return;\r\n        }\r\n        this.checkAttack(dt);\r\n        if (this.click_remain > 0) {\r\n            this.click_remain -= dt;\r\n        }\r\n\r\n        let vx: number = (this.targetX - this.node.x) * this.easing;\r\n        this.node.x += vx;\r\n        if(this.posIndex==2){\r\n            GameManager.getInstance().charPosX=this.node.x;\r\n        }\r\n        if(this.node_shadow){\r\n            this.node_shadow.setPosition(cc.v2(this.node.x + this.pos.x * this.setup_scale, this.node.y + this.pos.y * this.setup_scale));\r\n        }\r\n        // switch (this.speedType) {\r\n        //     case SpeedType.STOP:\r\n        //         this.moveSpeed = this.stopSpeed;\r\n        //         break;\r\n        //     case SpeedType.NORMAL:\r\n        //         this.moveSpeed = this.normalSpeed;\r\n        //         break;\r\n        //     case SpeedType.FAST:\r\n        //         this.moveSpeed = this.fastSpeed;\r\n        //         break;\r\n        //     default:\r\n        //         break;\r\n        // }\r\n\r\n\r\n        // this.move();\r\n\r\n    }\r\n\r\n    protected updateCheck(dt): boolean {\r\n        if (this.isHaveDeBuff(BuffId.Monster_XuanYun)) {\r\n            return false;\r\n        }\r\n        this.checkAttack(dt);\r\n\r\n        return true;\r\n    }\r\n\r\n    private checkSkill(dt: number) {\r\n        if (this.hero_state != Hero_State.skill) {\r\n            this.changeCD(-dt);\r\n        }\r\n    }\r\n\r\n    private checkAttack(dt) {\r\n        if (this.is_can_jishu && this.is_load_ok) {\r\n            this.gongji_jishu += dt;\r\n            if (this.gongji_jishu >= this.hero_data.gongji_jiange) {\r\n                //开始攻击\r\n                this.gongji_jishu = 0;\r\n                this.is_can_gongji = true;\r\n            }\r\n        }\r\n        //自动攻击\r\n        if (this.is_can_gongji && this.getHeroState() != Hero_State.skill) {\r\n            this.is_can_gongji = false;\r\n            let monsters = MonsterManager.getInstance().getMonstersForNearest(this.max_gongji_num, this.node.getPosition(), this.hero_data.gongji_fanwei,this.posIndex);\r\n            if (monsters) {\r\n                this.gongji_jishu = 0;\r\n                this.is_can_gongji = true;\r\n                this.setAttSpineScale();\r\n                this.startNormalAttack(monsters[0]);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n}\r\n"]}