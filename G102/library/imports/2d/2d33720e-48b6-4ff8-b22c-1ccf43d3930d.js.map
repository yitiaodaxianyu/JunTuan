{"version":3,"sources":["assets\\Scripts\\Monster\\MonsterManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { GameMode, IsDebug } from \"../Constants\";\r\nimport { GameEffectId, GameEffectsManager } from \"../Game/GameEffectsManager\";\r\nimport GameManager from \"../GameManager\";\r\nimport MapNodePool from \"../Game/MapNodePool\";\r\nimport { SoundIndex } from \"../Sound/AudioConstants\";\r\nimport { MonsterConfigureManager } from \"./Data/MonsterConfigure\";\r\nimport Monster from \"./Monster\";\r\nimport { StrengthType } from \"./MonsterData\";\r\nimport GroundManager from \"../Game/GroundManager\";\r\nimport { BingNvWallData } from \"../Hero/Game/HeroConfig\";\r\nimport { JsonMonsterGrowthAttributes } from \"./Data/MonsterGrowthAttributes\";\r\nimport { Enemy_State } from \"../Enemy/EnemyConfig\";\r\nimport WallManager from \"../Wall/WallManager\";\r\n\r\n\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class MonsterManager extends MapNodePool {\r\n\r\n    is_load_ok: boolean = false;\r\n    private ok_num: number = 0;\r\n    /**当前关总共有多少敌人 */\r\n    total_monster_num: number = 0;\r\n    /**击杀怪物数量 */\r\n    killed_monster_num: number = 0;\r\n    //上船的怪物数量\r\n    private _ship_monster_num: number = 0;\r\n    /**剩余怪物数量 */\r\n    drop_root: cc.Node = null;\r\n    coin_pos: cc.Vec2 = cc.v2();\r\n\r\n    private static _instance: MonsterManager = null;\r\n\r\n\r\n    public static getInstance(): MonsterManager {\r\n        return this._instance;\r\n    }\r\n\r\n    onLoad() {\r\n        MonsterManager._instance = this;\r\n        this.drop_root = cc.find('Canvas/Drop_Root');\r\n        let iconBag = cc.find('Canvas/Ui_Root/top_ui/iconBg/iconCoin');\r\n        let worldPos = iconBag.parent.convertToWorldSpaceAR(iconBag.getPosition());\r\n        this.coin_pos = this.drop_root.convertToNodeSpaceAR(worldPos);\r\n        super.onLoad();\r\n    }\r\n\r\n    protected start(): void {\r\n        this.loadData();\r\n    }\r\n\r\n    onDestroy() {\r\n        super.onDestroy();\r\n        MonsterManager._instance = null;\r\n    }\r\n\r\n    //加载当前关卡会出现的怪物\r\n    loadData() {\r\n    \r\n        this.is_load_ok = false;\r\n        this.ok_num = 0;\r\n        let fightingInfo = GameManager.getInstance().fighting_info;\r\n        this.killed_monster_num = 0;\r\n        this.ship_monster_num = 0;\r\n\r\n        this.total_monster_num = fightingInfo.total_monster_num;\r\n        this.prev_uuid = \"\";\r\n        //怪物id数组\r\n        let monsterDataMap = fightingInfo.getOnlyMonsterTypeMap();\r\n        //let MSM=MonsterConfigureManager.getInstance();        \r\n        let len = monsterDataMap.size;\r\n        let bossLoadNum = 0;\r\n        // console.log(\"+++++++++\",monsterDataMap)\r\n        monsterDataMap.forEach((v, k) => {\r\n            super.addNodePool(k, 'monster/Monster_' + k, 4, (node: cc.Node) => {\r\n                this.ok_num++;\r\n\r\n                if (this.ok_num >= len && bossLoadNum <= 0) {\r\n                    this.is_load_ok = true;\r\n                }\r\n            });\r\n            if (v == StrengthType.Boss) {\r\n                if (GameEffectsManager.getInstance().addEffectPoolById(GameEffectId.boss_hp, 1, () => {\r\n                    bossLoadNum--;\r\n                    if (this.ok_num >= len && bossLoadNum <= 0) {\r\n                        this.is_load_ok = true;\r\n                    }\r\n                })) {\r\n                    bossLoadNum++;\r\n                }\r\n                if (GameEffectsManager.getInstance().addEffectPoolById(GameEffectId.boss_coming, 1, () => {\r\n                    bossLoadNum--;\r\n                    if (this.ok_num >= len && bossLoadNum <= 0) {\r\n                        this.is_load_ok = true;\r\n                    }\r\n                })) {\r\n                    bossLoadNum++;\r\n                }\r\n            }\r\n        })\r\n        GameEffectsManager.getInstance().addEffectPoolById(GameEffectId.drop_coin, 16);\r\n        GameEffectsManager.getInstance().addEffectPoolById(GameEffectId.drop_gem, 16);\r\n        GameEffectsManager.getInstance().addEffectPoolById(GameEffectId.drop_gem_shadow, 16);\r\n        GameEffectsManager.getInstance().addEffectPoolById(GameEffectId.drop_coin_shadow, 16);\r\n        GameEffectsManager.getInstance().addEffectPoolById(GameEffectId.monster_normal_att,8);\r\n        // GameEffectsManager.getInstance().addEffectPoolById(GameEffectId.boss1_att_move,2);\r\n        // GameEffectsManager.getInstance().addEffectPoolById(GameEffectId.boss1_att_end,2);\r\n        GameEffectsManager.getInstance().addEffectPoolById(GameEffectId.monster_die,8);\r\n    }\r\n\r\n    public set ship_monster_num(v: number) {\r\n        this._ship_monster_num = v;\r\n        if (this._ship_monster_num >= 10) {\r\n            GameManager.getInstance().showGameLose();\r\n        }\r\n    }\r\n\r\n\r\n    public get ship_monster_num(): number {\r\n        return this._ship_monster_num;\r\n    }\r\n\r\n\r\n    addMonsterPool(id: number, initCount: number, loadCallback?: Function) {\r\n        let MSM = MonsterConfigureManager.getInstance();\r\n        let jsonData = MSM.getJsonMonsterConfigure(id);\r\n        let type = jsonData.MonsterClass;\r\n        super.addNodePool(type, 'monster/Monster_' + type, initCount, loadCallback);\r\n    }\r\n    /**\r\n     * 根据怪物id创建一个敌人\r\n     * @param id 怪物id\r\n     * @param pos 生成位置\r\n     * @param level 怪物等级\r\n     * @param hpRate 血量比率\r\n     * @param isCanCount 是否可以计数（用于区分召唤物）\r\n     * @returns \r\n     */\r\n    createMonsterById(id: number, pos: cc.Vec2, level: number, hpRate: number, isCanCount: boolean = true): cc.Node {\r\n        // console.log(\"_______\",pos.x,pos.y)\r\n        let type = MonsterConfigureManager.getInstance().getMonsterClass(id);\r\n        let node = super.getNodeById(type);\r\n        this.node.addChild(node);\r\n        node.setPosition(pos);\r\n        node.getComponent(Monster).init(id, level, hpRate, isCanCount);\r\n        return node;\r\n    }\r\n    /**\r\n     * boss创建召唤物\r\n     * @param monsterId 怪物id\r\n     * @param pos 生成位置\r\n     * @param bossAttribute boss的属性\r\n     * @returns \r\n     */\r\n    createSummonMonster(monsterId: number, level: number, pos: cc.Vec2) {\r\n        //召唤特效\r\n        let quan = GroundManager.getInstance().createGameEffectById(GameEffectId.monster_zhaohuan, pos);\r\n        let spine = quan.getComponent(sp.Skeleton);\r\n        let track = spine.setAnimation(0, \"Boss10_Skill2_ZhaoHuan_2\", false);\r\n        spine.setTrackEventListener(track, (entry: sp.spine.TrackEntry, event) => {\r\n            if (event.data.name == \"ZhaoHuan\") {\r\n                this.createMonsterById(monsterId, pos, level, 1, false)\r\n            }\r\n        })\r\n        spine.setCompleteListener(() => {\r\n            spine.setCompleteListener(null);\r\n            GameEffectsManager.getInstance().destroyGameEffectById(GameEffectId.monster_zhaohuan, quan);\r\n        });\r\n    }\r\n    prev_uuid: string = \"\";\r\n    /**即将删除敌人，可以在此播放音效 */\r\n    willDestroyMonster(monsterTs: Monster): boolean {\r\n        //是否要运行动作后再销毁\r\n        let isActionDie = true;\r\n        GameManager.getInstance().sound_manager.playSound(SoundIndex.YX_Shouji);\r\n        //爆金币\r\n        // let pos = monsterTs.node.getPosition();\r\n        // if (GameManager.getInstance().cur_game_mode == GameMode.Main) {\r\n        //     this.createDropProp(pos, GameEffectId.drop_coin);\r\n        //     this.createDropProp(pos, GameEffectId.drop_coin);\r\n        //     this.createDropProp(pos, GameEffectId.drop_gem);\r\n        // }\r\n        return isActionDie;\r\n    }\r\n    //有怪上船了\r\n    upShipMonster(): void {\r\n        if (this.killed_monster_num + this.ship_monster_num >= this.total_monster_num) {\r\n\r\n            if (this.getRemainMonster() <= 0) {\r\n                GameManager.getInstance().showGameWin();\r\n            }\r\n\r\n        }\r\n    }\r\n    /**回收敌人到对象池 */\r\n    destroyMonster(node: cc.Node, type: number, isCanWin: boolean = true) {\r\n      \r\n        node.color = cc.Color.WHITE;\r\n        let monsterTs = node.getComponent(Monster);\r\n        monsterTs.setEnemyState(Enemy_State.die);\r\n        //要区分召唤怪\r\n        if (monsterTs.is_can_count) {\r\n            if (monsterTs.uuid == this.prev_uuid) {\r\n                //console.error(\"可能重复计数了:\");\r\n                return;\r\n            }\r\n            this.prev_uuid = monsterTs.uuid;\r\n            this.killed_monster_num++;\r\n            GameManager.getInstance().onEnemyDie(monsterTs.score, monsterTs.is_can_count);\r\n        }\r\n\r\n        if (this.killed_monster_num + this.ship_monster_num >= this.total_monster_num) {\r\n            if (isCanWin) {\r\n\r\n                if (this.getRemainMonster() <= 0) {\r\n                    GameManager.getInstance().showGameWin();\r\n                }\r\n            }\r\n        }\r\n        // //回收前标记可以\r\n        // if(monsterTs){\r\n        //     monsterTs.setIsCanCount(true);\r\n        // }\r\n\r\n        super.destroyNode(type, node);\r\n    }\r\n\r\n    private getRemainMonster(): number {\r\n        let num = 0;\r\n        let len = this.node.childrenCount;\r\n        for (let i = 0; i < len; i++) {\r\n            let monster = this.node.children[i];\r\n            let monsterTS = monster.getComponent(Monster);\r\n            if (monsterTS && monsterTS.getIsDie() == false) {\r\n                num++;\r\n            }\r\n        }\r\n        return num;\r\n    }\r\n\r\n    createDropProp(pos: cc.Vec2, id: GameEffectId) {\r\n        let prop = GroundManager.getInstance().createGameEffectById(id, pos, 2);\r\n        //this.node.getComponent(cc.Sprite).spriteFrame=PropManager.getInstance().getSpByPropId(PropId.Coin);\r\n        prop.opacity = 255;\r\n        //prop.scale=0.5;\r\n        let xx = Math.random() * 20 + 30;\r\n        xx *= Math.random() < 0.5 ? 1 : -1;\r\n        let yy = Math.random() * 40 - 20;\r\n        let height = Math.random() * 20 + 30;\r\n        // cc.tween(prop).then(cc.jumpBy(0.5,xx,yy,height,1)).delay(1).call(()=>{\r\n        //     prop.parent=UIManager.getInstance().node;\r\n        // }).then(MyTool.getBezierAct(prop.getPosition(),this.coin_pos)).call(()=>{\r\n        //     GameEffectsManager.getInstance().destroyGameEffectById(id,prop);\r\n        //     GameManager.getInstance().game.showCoin();\r\n        // }).start();\r\n\r\n        cc.tween(prop).then(cc.jumpBy(0.5, xx, yy, height, 1))\r\n            // .call(()=>{\r\n            //     //生成阴影\r\n            //     let shadowId=GameEffectId.drop_gem;\r\n            //     let distXX=0;\r\n            //     let distYY=0;\r\n            //     switch(id){\r\n            //         case GameEffectId.drop_coin:{                    \r\n            //             distXX=prop.x;\r\n            //             distYY=prop.y-9.5;\r\n            //             shadowId=GameEffectId.drop_coin_shadow;\r\n            //         }break;\r\n            //         case GameEffectId.drop_gem:{\r\n            //             shadowId=GameEffectId.drop_gem_shadow;\r\n            //             distXX=prop.x+1;\r\n            //             distYY=prop.y-10;\r\n            //         }break;\r\n            //     }           \r\n            //     let shadow=GroundManager.getInstance().createGameEffectById(shadowId,cc.v2(distXX,distYY),1);\r\n            //     shadow.opacity=100;\r\n            //     cc.tween(shadow).delay(10).to(0.5,{opacity:0}).call(()=>{\r\n            //         GameEffectsManager.getInstance().destroyGameEffectById(shadowId,shadow);\r\n            //     }).start();\r\n            // })\r\n            .delay(10).to(0.5, { opacity: 0 }).call(() => {\r\n                GameEffectsManager.getInstance().destroyGameEffectById(id, prop);\r\n            }).start();\r\n    }\r\n\r\n    destroyAllDrop() {\r\n        let drops = this.drop_root.children;\r\n        let len = drops.length;\r\n        for (let i = 0; i < len; i++) {\r\n            let prop = drops[0];\r\n            let id = parseInt(prop.name);\r\n            if (id) {\r\n                cc.tween(prop).to(0.5, { opacity: 0 }).call(() => {\r\n                    GameEffectsManager.getInstance().destroyGameEffectById(id, prop);\r\n                }).start();\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    destroyAllMonster() {\r\n        let allMonster = this.node.children;\r\n        let len = allMonster.length;\r\n\r\n       \r\n        \r\n        for (let i = 0; i < len; i++) {\r\n            let monster = allMonster[0];\r\n       \r\n            if (monster) {\r\n                let monsterTS = monster.getComponent(Monster);\r\n                if (monsterTS) {\r\n                    monsterTS.hidShadow();\r\n                    this.destroyMonster(monster, monsterTS.monster_type);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //--------------------------GET--------------------------------------------------\r\n    /**\r\n     * 获取指定位置targetPos的指定范围fanwei内靠近城墙最近的cheakNum个敌人\r\n     * @param cheakNum 检测数量\r\n     * @param targetPos 指定的位置，一般是自身位置\r\n     * @param fanwei 指定的检测范围，一般是攻击距离\r\n     * @returns 所有满足条件的敌人\r\n     */\r\n    getMonstersForNearest(cheakNum: number, targetPos: cc.Vec2, fanwei: number, posIndex: number = null): cc.Node[] {\r\n        if (cheakNum == 0) {\r\n            return null;\r\n        }\r\n        let len = this.node.childrenCount;\r\n        if (len <= 0) {\r\n            return null;\r\n        }\r\n        //1.先检测在攻击范围内符合攻击单位的敌人\r\n        let attMonsters: cc.Node[] = [];\r\n        for (let i = 0; i < len; i++) {\r\n            let monster = this.node.children[i];\r\n            let monsterTS = monster.getComponent(Monster);\r\n            if (monsterTS && monsterTS.getIsCanCheck()) {\r\n                let distance = targetPos.sub(monster.getPosition()).mag();\r\n                if (distance <= fanwei) {\r\n                    if (posIndex == null || posIndex == -1) {\r\n                        attMonsters.push(monster);\r\n                    } else {\r\n                        if(monsterTS.monster_id>=30381){\r\n                            if (Math.abs(monster.x - GameManager.getInstance().charPosX) <= 200 && monster.y > WallManager.getInstance().getMainWall().getWallRect().yMax) {\r\n                                attMonsters.push(monster);\r\n                            }\r\n                        }else{\r\n                            if (Math.abs(monster.x - GameManager.getInstance().charPosX) <= 100 && monster.y > WallManager.getInstance().getMainWall().getWallRect().yMax) {\r\n                                attMonsters.push(monster);\r\n                            }\r\n                        }\r\n                       \r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n        if (attMonsters.length <= 0) {\r\n            return null;\r\n        }\r\n        //小于0，代表要所有\r\n        if (cheakNum < 0) {\r\n            return attMonsters;\r\n        }\r\n        if (cheakNum >= attMonsters.length) {\r\n            return attMonsters;\r\n        }\r\n        //2.对可以攻击的敌人进行优先级判断,选出cheakNum个目标作为打击单位\r\n        //2.1优先攻击跟城墙最近的单位\r\n        attMonsters.sort((a: cc.Node, b: cc.Node) => {\r\n            return a.getPosition().sub(targetPos).mag() - b.getPosition().sub(targetPos).mag();\r\n        });\r\n        attMonsters.splice(cheakNum);\r\n        return attMonsters;\r\n    }\r\n    /**\r\n     * 获取指定位置targetPos的指定范围fanwei内靠近城墙最近的cheakNum个敌人\r\n     * @param cheakNum 检测数量\r\n     * @param targetPos 指定的位置，一般是自身位置\r\n     * @param fanwei 指定的检测范围，一般是攻击距离\r\n     * @returns 所有满足条件的敌人\r\n     */\r\n    getMonstersForNearestBySkill(cheakNum: number, targetPosY: number, fanwei: number): cc.Node[] {\r\n        if (cheakNum == 0) {\r\n            return null;\r\n        }\r\n        let len = this.node.childrenCount;\r\n        if (len <= 0) {\r\n            return null;\r\n        }\r\n        //1.先检测在攻击范围内符合攻击单位的敌人\r\n        let attMonsters: cc.Node[] = [];\r\n        for (let i = 0; i < len; i++) {\r\n            let monster = this.node.children[i];\r\n            let monsterTS = monster.getComponent(Monster);\r\n            if (monsterTS && monsterTS.getIsCanCheck()) {\r\n                let distance = monsterTS.getCenterPos().y - targetPosY;\r\n                if (distance <= fanwei) {\r\n                    attMonsters.push(monster);\r\n                }\r\n            }\r\n        }\r\n        if (attMonsters.length <= 0) {\r\n            return null;\r\n        }\r\n        //小于0，代表要所有\r\n        if (cheakNum < 0) {\r\n            return attMonsters;\r\n        }\r\n        if (cheakNum >= attMonsters.length) {\r\n            return attMonsters;\r\n        }\r\n        //2.对可以攻击的敌人进行优先级判断,选出cheakNum个目标作为打击单位\r\n        //2.1优先攻击跟城墙最近的单位\r\n        attMonsters.sort((a: cc.Node, b: cc.Node) => {\r\n            return (a.y - targetPosY) - (b.y - targetPosY);\r\n        });\r\n        attMonsters.splice(cheakNum);\r\n        return attMonsters;\r\n    }\r\n    /**\r\n     * //获取指定位置targetPos的指定范围fanwei内cheakNum个敌人\r\n     * @param cheakNum 检测数量，小于0表示所有，如-1\r\n     * @param targetPos 目标位置\r\n     * @param fanwei 范围\r\n     * @returns 所有符合条件的敌人\r\n     */\r\n    getMonstersForCenterPos(cheakNum: number, targetPos: cc.Vec2, fanwei: number): cc.Node[] {\r\n        if (cheakNum == 0) {\r\n            return null;\r\n        }\r\n        let len = this.node.childrenCount;\r\n        if (len <= 0) {\r\n            return null;\r\n        }\r\n        //1.先检测在攻击范围内符合攻击单位的敌人\r\n        let attMonsters: cc.Node[] = [];\r\n        for (let i = 0; i < len; i++) {\r\n            let monster = this.node.children[i];\r\n            let monsterTS = monster.getComponent(Monster);\r\n            if (monsterTS && monsterTS.getIsCanCheck()) {\r\n                let distance = targetPos.sub(monsterTS.getCenterPos()).mag();\r\n                if (distance <= fanwei) {\r\n                    attMonsters.push(monster);\r\n                }\r\n            }\r\n        }\r\n        if (attMonsters.length <= 0) {\r\n            return null;\r\n        }\r\n        //小于0，代表要所有\r\n        if (cheakNum < 0) {\r\n            return attMonsters;\r\n        }\r\n        //如果检测到的数量没有要检测的那么多，直接返回全部.\r\n        if (cheakNum >= attMonsters.length) {\r\n            return attMonsters;\r\n        }\r\n        //2.1优先攻击跟目标位置最近的单位，按照与pos的距离大小进行排列，从小到大\r\n        attMonsters.sort((a: cc.Node, b: cc.Node) => {\r\n            return a.getPosition().sub(targetPos).mag() - b.getPosition().sub(targetPos).mag();\r\n        });\r\n        attMonsters.splice(cheakNum);\r\n        return attMonsters;\r\n    }\r\n    /**\r\n     * //获取指定位置targetPos的指定范围fanwei内cheakNum个敌人\r\n     * @param cheakNum 检测数量，小于0表示所有，如-1\r\n     * @param targetPos 目标位置\r\n     * @param fanwei 范围\r\n     * @returns 所有符合条件的敌人\r\n     */\r\n    getMonstersForBingNvWallRect(rect: cc.Rect): BingNvWallData {\r\n        let len = this.node.childrenCount;\r\n        //1.先检测在攻击范围内符合攻击单位的敌人\r\n        let bnwd = new BingNvWallData();\r\n        let attMonsters: cc.Node[] = [];\r\n        for (let i = 0; i < len; i++) {\r\n            let monster = this.node.children[i];\r\n            let monsterTS = monster.getComponent(Monster);\r\n            if (monsterTS && monsterTS.getIsCanCheck()) {\r\n                if (rect.contains(monster.getPosition())) {\r\n                    attMonsters.push(monster);\r\n                    if (monsterTS.getStrengthType() == StrengthType.Boss) {\r\n                        bnwd.boss_ts = monsterTS;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        bnwd.back_monsters = attMonsters;\r\n        return bnwd;\r\n    }\r\n    /**\r\n     * 返回生命值最高的敌人序列\r\n     * @param cheakNum 检测数量，小于0表示所有，如-1\r\n     * @param targetPos \r\n     * @param fanwei \r\n     * @returns \r\n     */\r\n    getMonstersForMaxHp(cheakNum: number, targetPos: cc.Vec2, fanwei: number): cc.Node[] {\r\n        if (cheakNum == 0) {\r\n            return null;\r\n        }\r\n        let len = this.node.childrenCount;\r\n        if (len <= 0) {\r\n            return null;\r\n        }\r\n        //1.先检测在攻击范围内符合攻击单位的敌人\r\n        let attMonsters: cc.Node[] = [];\r\n        for (let i = 0; i < len; i++) {\r\n            let monster = this.node.children[i];\r\n            let monsterTS = monster.getComponent(Monster);\r\n            if (monsterTS && monsterTS.getIsCanCheck()) {\r\n                let distance = targetPos.sub(monster.getPosition()).mag();\r\n                if (distance <= fanwei) {\r\n                    attMonsters.push(monster);\r\n                }\r\n            }\r\n        }\r\n        if (attMonsters.length <= 0) {\r\n            return null;\r\n        }\r\n        //小于0，代表要所有\r\n        if (cheakNum < 0) {\r\n            return attMonsters;\r\n        }\r\n        if (cheakNum >= attMonsters.length) {\r\n            return attMonsters;\r\n        }\r\n        //2.对可以攻击的敌人进行优先级判断,选出cheakNum个目标作为打击单位\r\n        //2.1优先攻击跟城墙最近的单位\r\n        attMonsters.sort((a: cc.Node, b: cc.Node) => {\r\n            return b.getComponent(Monster).getCurHp() - a.getComponent(Monster).getCurHp();\r\n        });\r\n        attMonsters.splice(cheakNum);\r\n        return attMonsters;\r\n    }\r\n\r\n    /**\r\n     * 返回生命值最高的敌人序列\r\n     * @param cheakNum 检测数量，小于0表示所有，如-1\r\n     * @param targetPos \r\n     * @param fanwei \r\n     * @returns \r\n     */\r\n    getMonstersForMaxAttak(cheakNum: number, targetPos: cc.Vec2, fanwei: number): cc.Node[] {\r\n        if (cheakNum == 0) {\r\n            return null;\r\n        }\r\n        let len = this.node.childrenCount;\r\n        if (len <= 0) {\r\n            return null;\r\n        }\r\n        //1.先检测在攻击范围内符合攻击单位的敌人\r\n        let attMonsters: cc.Node[] = [];\r\n        for (let i = 0; i < len; i++) {\r\n            let monster = this.node.children[i];\r\n            let monsterTS = monster.getComponent(Monster);\r\n            if (monsterTS && monsterTS.getIsCanCheck()) {\r\n                let distance = targetPos.sub(monster.getPosition()).mag();\r\n                if (distance <= fanwei) {\r\n                    attMonsters.push(monster);\r\n                }\r\n            }\r\n        }\r\n        if (attMonsters.length <= 0) {\r\n            return null;\r\n        }\r\n        //小于0，代表要所有\r\n        if (cheakNum < 0) {\r\n            return attMonsters;\r\n        }\r\n        if (cheakNum >= attMonsters.length) {\r\n            return attMonsters;\r\n        }\r\n        //2.对可以攻击的敌人进行优先级判断,选出cheakNum个目标作为打击单位\r\n        //2.1优先攻击跟城墙最近的单位\r\n        attMonsters.sort((a: cc.Node, b: cc.Node) => {\r\n            return b.getComponent(Monster).getCurAtt() - a.getComponent(Monster).getCurAtt();\r\n        });\r\n        attMonsters.splice(cheakNum);\r\n        return attMonsters;\r\n    }\r\n\r\n    /**\r\n     * //获取指定位置targetPos的指定范围fanwei内cheakNum个敌人\r\n     * @param cheakNum 检测数量，小于0表示所有，如-1\r\n     * @param targetPos 目标位置\r\n     * @param radius 范围半径\r\n     * @param minRadian 最小的弧度值\r\n     * @param maxRadian 最大的弧度值\r\n     * @returns 所有符合条件的敌人\r\n     */\r\n    getMonstersForRadian(cheakNum: number, targetPos: cc.Vec2, radius: number, minRadian: number, maxRadian: number): cc.Node[] {\r\n        if (cheakNum == 0) {\r\n            return null;\r\n        }\r\n        let len = this.node.childrenCount;\r\n        if (len <= 0) {\r\n            return null;\r\n        }\r\n        let p2 = Math.PI * 2;\r\n        minRadian = (p2 + minRadian) % p2\r\n        maxRadian = (p2 + maxRadian) % p2\r\n        //1.先检测在攻击范围内符合攻击单位的敌人\r\n        let attMonsters: cc.Node[] = [];\r\n        for (let i = 0; i < len; i++) {\r\n            let monster = this.node.children[i];\r\n            let monsterTS = monster.getComponent(Monster);\r\n            if (monsterTS && monsterTS.getIsCanCheck()) {\r\n                //先判断是否在弧度范围内\r\n                let offsetPos = monsterTS.getCenterPos().sub(targetPos);\r\n                let radian = Math.atan2(offsetPos.y, offsetPos.x);\r\n                radian = (p2 + radian) % p2\r\n                // let angle=MyTool.radianToAngle(radian);\r\n                // cc.log(angle);\r\n                if (radian >= minRadian && radian <= maxRadian) {\r\n                    let distance = offsetPos.mag();\r\n                    if (distance <= radius) {\r\n                        attMonsters.push(monster);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (attMonsters.length <= 0) {\r\n            return null;\r\n        }\r\n        //小于0，代表要所有\r\n        if (cheakNum < 0) {\r\n            return attMonsters;\r\n        }\r\n        // //如果检测到的数量没有要检测的那么多，直接返回全部.\r\n        // if(cheakNum>=attMonsters.length)\r\n        // {\r\n        //     return attMonsters;\r\n        // }\r\n        // //2.1优先攻击跟目标位置最近的单位，按照与pos的距离大小进行排列，从小到大\r\n        // attMonsters.sort((a:cc.Node,b:cc.Node)=>{\r\n        //     return a.getPosition().sub(targetPos).mag()-b.getPosition().sub(targetPos).mag();\r\n        // });\r\n        // attMonsters.splice(cheakNum);\r\n        return attMonsters;\r\n    }\r\n\r\n    //获取指定位置targetPos的指定范围fanwei内cheakNum个敌人(敌人专用，检测队友)\r\n    getMonstersForMonsterPos(cheakNum: number, targetPos: cc.Vec2, fanwei: number): cc.Node[] {\r\n        if (cheakNum == 0) {\r\n            return null;\r\n        }\r\n        let len = this.node.childrenCount;\r\n        if (len <= 0) {\r\n            return null;\r\n        }\r\n        //1.先检测在攻击范围内符合攻击单位的敌人\r\n        let attMonsters: cc.Node[] = [];\r\n        for (let i = 0; i < len; i++) {\r\n            let monster = this.node.children[i];\r\n            let monsterTS = monster.getComponent(Monster);\r\n            if (monsterTS && !monsterTS.getIsDie()) {\r\n                let distance = targetPos.sub(monster.getPosition()).mag();\r\n                if (distance <= fanwei) {\r\n                    attMonsters.push(monster);\r\n                }\r\n            }\r\n        }\r\n        if (attMonsters.length <= 0) {\r\n            return null;\r\n        }\r\n        //小于0，代表要所有\r\n        if (cheakNum < 0) {\r\n            return attMonsters;\r\n        }\r\n        //如果检测到的数量没有要检测的那么多，直接返回全部.\r\n        if (cheakNum >= attMonsters.length) {\r\n            return attMonsters;\r\n        }\r\n        attMonsters.splice(cheakNum);\r\n        return attMonsters;\r\n    }\r\n    /**是否有敌人在城墙checkDistance距离内 */\r\n    checkWallMonster(checkDistance: number): boolean {\r\n        let len = this.node.childrenCount;\r\n        let wallY = GameManager.getInstance().enemy_att_y;\r\n        for (let i = 0; i < len; i++) {\r\n            let monster = this.node.children[i];\r\n            let monsterTS = monster.getComponent(Monster);\r\n            if (monsterTS && !monsterTS.getIsDie()) {\r\n                let distance = Math.abs(wallY - monster.y)\r\n                if (distance <= checkDistance) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false\r\n    }\r\n\r\n    onAllBack() {\r\n        return;\r\n    }\r\n\r\n    protected lateUpdate(dt: number): void {\r\n        this.prev_uuid = \"\";\r\n    }\r\n}\r\n"]}