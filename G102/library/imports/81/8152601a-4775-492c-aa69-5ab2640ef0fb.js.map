{"version":3,"sources":["assets\\Scripts\\Monster\\MonsterData.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { Enemy_Injured_Type } from \"../Enemy/EnemyConfig\";\r\nimport { DamageType } from \"../Hero/Game/HeroConfig\";\r\nimport { JsonMonsterGrowthAttributes } from \"./Data/MonsterGrowthAttributes\";\r\nimport Monster from \"./Monster\";\r\n\r\n\r\n\r\n/**怪物动作名称 */\r\nexport enum MonsterActionName{\r\n    /**待机 */\r\n    Idle=\"Idle\",\r\n    /**走路 */\r\n    Walk=\"Walk\",\r\n    /**攻击 */\r\n    Attack=\"Attack\",\r\n    /**死亡 */\r\n    Death=\"Death\",\r\n    /**受击 */\r\n    Hurt=\"Hurt\",\r\n    /**超级技能 */\r\n    SupportSkill=\"SupportSkill\",\r\n}\r\n\r\n/**怪物朝向名称 */\r\nexport enum MonsterFaceName{\r\n    /**背面 */\r\n    Back=\"Back\",\r\n    /**正面 */\r\n    Front=\"Front\",\r\n    /**向右侧面 */\r\n    SideR=\"Side\",\r\n    /**向左侧面 */\r\n    SideL=\"Side\",  \r\n}\r\n\r\n/**怪物皮肤类型 */\r\nexport enum MonsterSkinType{\r\n    /**皮肤1 */\r\n    Skin1=1,\r\n    /**皮肤2 */\r\n    Skin2,\r\n    /**皮肤3 */\r\n    Skin3,\r\n    /**皮肤4 */\r\n    Skin4,\r\n}\r\n\r\nexport enum ColorType{\r\n    /**无，表示白色 */\r\n    Null=0,\r\n    /**受伤，表示红色 */\r\n    Injured,\r\n    /**减速，表示蓝色 */\r\n    SlowDown,\r\n    \r\n}\r\n\r\n/**关键事件帧数据 */\r\nexport class KeyFrameData{\r\n    /**名称 */\r\n    name:string='Attack';\r\n    /**触发事件帧时的回调函数 */\r\n    callback:Function=null;\r\n}\r\n\r\n/**反馈类型 */\r\nexport enum FeedBackType{\r\n    /**无 */\r\n    Null=0,\r\n    /**闪避 */\r\n    ShanBi,\r\n    /**格挡 */\r\n    GeDang,\r\n    /**免疫 */\r\n    MainYi,\r\n    /**已经死亡 */\r\n    Die,\r\n    /**暴击 */\r\n    BaoJi,\r\n    /**免疫 */\r\n}\r\n/**受伤数据 */\r\nexport class InjuredData{\r\n    /**是否死亡 */\r\n    is_die:boolean=false;\r\n    /**造成的最终伤害数值 */\r\n    private damage_num:number=0;    \r\n    /**伤害反馈的类型 */\r\n    feedback_type:FeedBackType=FeedBackType.Null;\r\n    /**伤害文本类型 */\r\n    text_type:Enemy_Injured_Type=Enemy_Injured_Type.Normal_Attack;\r\n    /**设置伤害值 */\r\n    setDamageNum(num:number){\r\n        if(num<0){\r\n            num=0;\r\n        }\r\n        this.damage_num=num;\r\n    }\r\n    /**获得本次的伤害值 */\r\n    getDamageNum():number{\r\n        return this.damage_num;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param missValue 受击方-闪避值\r\n     * @param hitValue 打击方-命中值\r\n     * @returns 闪避率\r\n     */\r\n    static calcMissRate(missValue:number,hitValue:number):number{\r\n        //闪避率计算,先计算 差值=受击方闪避值-攻击方命中值,30点及以下的差值每一点转换成1.5%闪避率,300点以上的差值每一点转换为1%闪避率,闪避率最小为0，必定无法闪避；闪避最大为100%，必定闪避\r\n        let value=missValue-hitValue;\r\n        let rate=value<300?value*0.001:value*0.0005;\r\n        if(rate<0){\r\n            rate=0;\r\n        }else if(rate>1){\r\n            rate=1;\r\n        }\r\n        return rate;\r\n    }\r\n    /**\r\n     * \r\n     * @param critValue 打击方-暴击值\r\n     * @param antiCritValue 被击方-防暴值\r\n     * @returns 暴击率\r\n     */\r\n    static calcCritRate(critValue:number,antiCritValue:number):number{\r\n        //暴击率 先计算 差值=攻击方暴击值-受击方防暴值,30点及以下的差值每一点转换成1.5%暴击率,300点以上的差值每一点转换为1%暴击率,暴击率最小为0，必定无法暴击；暴击率最大为100%，必定暴击\r\n        let value=critValue-antiCritValue;\r\n        let rate=value<300?value*0.001:value*0.0005;\r\n        if(rate<0){\r\n            rate=0;\r\n        }else if(rate>1){\r\n            rate=1;\r\n        }\r\n        return rate;\r\n    }\r\n    /**\r\n     * \r\n     * @param rateArr 概率数组，数据根据优先级排列\r\n     * @returns 返回产生对应概率的下标，表示其类型\r\n     * @example \r\n     * let type1=0.2;//--闪避率\r\n     * let type2=0.3;//--暴击率\r\n     * let type3=1;//命中\r\n\t\tlet type=InjuredData.getOnceType([type1,type2,type3]);//计算后数组的值会变为[0.2,0.3,0.5],然后从这3个中随机一个类型下标并且返回\r\n        type=1;\r\n     */\r\n    static calcOnceType(rateArr:number[]):number{\r\n        //cc.log(\"之前:\"+rateArr);\r\n        //先处理数组\r\n        let remainRate=1;\r\n        for(let i=0; i<rateArr.length; i++){\r\n            if(remainRate>0){\r\n                let rate=rateArr[i];\r\n                let newRemainRate=remainRate-rate;\r\n                if(newRemainRate>0){                    \r\n                    //末尾的还剩余概率\r\n                    if(i==rateArr.length-1){\r\n                        rateArr[i]=remainRate;\r\n                    }else{\r\n                        remainRate=newRemainRate;\r\n                    }\r\n                }else{\r\n                    rateArr[i]=remainRate;\r\n                    remainRate=0;\r\n                }\r\n            }else{\r\n                rateArr[i]=0;\r\n            }                        \r\n        }\r\n        //cc.log(\"后来:\"+rateArr);\r\n        //根据权重随机一个\r\n        let curValue=0;\r\n        let randValue=Math.random();;\r\n        let type=0;\r\n        for(let i=0; i<rateArr.length; i++){\r\n            curValue+=rateArr[i];\r\n            if(randValue<curValue){\r\n                type=i;\r\n                break;\r\n            }\r\n        }\r\n        //cc.log(\"使用:\"+type);\r\n        return type;\r\n    }\r\n    /**\r\n     * 计算普通攻击不暴击（攻方攻击力*（1±3%）-防方防御力）*（1+攻方增伤率）*（1-防方减伤率）实际普攻伤害低于5时，触发保底机制，随机造成5~10点伤害\r\n     * @param attack 打击方-攻击力\r\n     * @param defense 受击方-防御力\r\n     * @param zengShang 攻击方-增伤比率\r\n     * @param jianShang 受击方-减伤比率\r\n     * @returns 最终普攻伤害\r\n     */\r\n    static calcNormalDamageNum(attack:number,defense:number,zengShang:number,jianShang:number):number{\r\n        //（攻方攻击力*（1±3%）-防方防御力）*（1+攻方增伤率）*（1-防方减伤率）实际普攻伤害低于5时，触发保底机制，随机造成5~10点伤害        \r\n        let randNum=Math.random()*0.03;\r\n        attack=Math.random()>0.5?(attack*(1-randNum)):(attack*(1+randNum));\r\n        //（攻方攻击力*（1±3%）-防方防御力）\r\n        let num=attack-defense;\r\n        //（1+攻方增伤率）*（1-防方减伤率）\r\n        num=num*(1+zengShang)*(1-jianShang);        \r\n        //实际普攻伤害低于5时，触发保底机制，随机造成5~10点伤害\r\n        num=num<5?(Math.random()*5+5):num;\r\n        num=Math.round(num);\r\n        return num;\r\n    }\r\n    /**\r\n     * 计算普通攻击暴击伤害数值,（攻方攻击力*（1±3%）*最终暴击增幅-防方防御力）*（1+攻方增伤率）*（1-防方减伤率）\r\n     * @param attack 打击方-攻击力\r\n     * @param defense 受击方-防御力\r\n     * @param zengShang 攻击方-增伤比率\r\n     * @param jianShang 受击方-减伤比率\r\n     * @param finalExtraCrit 最终暴击增幅\r\n     * @returns 最终暴击后的伤害\r\n     */\r\n    static calcNormalCritDamageNum(attack:number,defense:number,zengShang:number,jianShang:number,finalExtraCrit:number):number{\r\n        //（攻方攻击力*（1±3%）\r\n        let randNum=Math.random()*0.03;\r\n        attack=Math.random()>0.5?(attack*(1-randNum)):(attack*(1+randNum));\r\n        //（攻方攻击力*（1±3%）*最终暴击增幅-防方防御力）\r\n        let num=attack*finalExtraCrit-defense;\r\n        //（1+攻方增伤率）*（1-防方减伤率）\r\n        num=num*(1+zengShang)*(1-jianShang);        \r\n        //实际普攻伤害低于5时，触发保底机制，随机造成5~10点伤害\r\n        num=num<5?(Math.random()*5+5):num;\r\n        num=Math.round(num);\r\n        return num;\r\n    }\r\n\r\n    /**\r\n     * 计算技能不暴击（攻方攻击力*技能伤害系数-防方防御力）*（1+攻方增伤率）*（1-防方减伤率）\r\n     * @param attack 打击方-攻击力\r\n     * @param damageRate 伤害比率\r\n     * @param defense 受击方-防御力\r\n     * @param zengShang 攻击方-增伤比率\r\n     * @param jianShang 受击方-减伤比率\r\n     * @returns 最终技能伤害\r\n     */\r\n     static calcSkillDamageNum(attack:number,damageRate:number,defense:number,zengShang:number,jianShang:number):number{\r\n        //（攻方攻击力*技能伤害系数-防方防御力）*（1+攻方增伤率）*（1-防方减伤率）\r\n        //（攻方攻击力*技能伤害系数）\r\n        attack*=damageRate;\r\n        //（攻方攻击力*（1±3%）\r\n        let randNum=Math.random()*0.03;\r\n        attack=Math.random()>0.5?(attack*(1-randNum)):(attack*(1+randNum));\r\n        //（攻方攻击力*技能伤害系数-防方防御力）\r\n        let num=attack-defense;\r\n        //（1+攻方增伤率）*（1-防方减伤率）\r\n        num=num*(1+zengShang)*(1-jianShang);        \r\n        //实际普攻伤害低于5时，触发保底机制，随机造成5~10点伤害\r\n        num=num<1?1:num;\r\n        num=Math.round(num);\r\n        return num;\r\n    }    \r\n\r\n    /**\r\n     * 计算技能暴击伤害数值,（攻方攻击力*技能伤害系数*最终暴击增幅-防方防御力）*（1+攻方增伤率）*（1-防方减伤率）\r\n     * @param attack 打击方-攻击力\r\n     * @param defense 受击方-防御力\r\n     * @param zengShang 攻击方-增伤比率\r\n     * @param jianShang 受击方-减伤比率\r\n     * @param finalExtraCrit 最终暴击增幅\r\n     * @returns 最终暴击后的伤害\r\n     */\r\n    static calcSkillCritDamageNum(attack:number,damageRate:number,defense:number,zengShang:number,jianShang:number,finalExtraCrit:number):number{\r\n        //（攻方攻击力*技能伤害系数*最终暴击增幅-防方防御力）*（1+攻方增伤率）*（1-防方减伤率）\r\n        //（攻方攻击力*技能伤害系数）\r\n        attack*=damageRate;\r\n        //（攻方攻击力*（1±3%）\r\n        let randNum=Math.random()*0.03;\r\n        attack=Math.random()>0.5?(attack*(1-randNum)):(attack*(1+randNum));\r\n        //（攻方攻击力*技能伤害系数-防方防御力）\r\n        let num=attack*finalExtraCrit-defense;\r\n        //（1+攻方增伤率）*（1-防方减伤率）\r\n        num=num*(1+zengShang)*(1-jianShang);        \r\n        //实际普攻伤害低于5时，触发保底机制，随机造成5~10点伤害\r\n        num=num<5?(Math.random()*5+5):num;\r\n        num=Math.round(num);\r\n        return num;\r\n    }\r\n\r\n    /**\r\n     * 计算技能真伤(攻方攻击力*技能伤害系数)\r\n     * @param attack 打击方-攻击力\r\n     * @param damageRate 伤害比率\r\n     * @returns 最终技能伤害\r\n     */\r\n     static calcSkillRealDamageNum(attack:number,damageRate:number):number{\r\n        //（攻方攻击力*技能伤害系数）\r\n        let num=attack*damageRate;\r\n        num=num<5?(Math.random()*5+5):num;\r\n        num=Math.round(num);\r\n        return num;\r\n    }\r\n\r\n    /**\r\n     * 计算技能暴击真伤(攻方攻击力*技能伤害系数)\r\n     * @param attack 打击方-攻击力\r\n     * @param damageRate 伤害比率\r\n     * @param finalExtraCrit 最终暴击增幅\r\n     * @returns 最终技能伤害\r\n     */\r\n     static calcSkillCritRealDamageNum(attack:number,damageRate:number,finalExtraCrit:number):number{\r\n        //（攻方攻击力*技能伤害系数）\r\n        let num=attack*damageRate*finalExtraCrit;\r\n        num=num<5?(Math.random()*5+5):num;\r\n        num=Math.round(num);\r\n        return num;\r\n    }\r\n\r\n    /**\r\n     * 计算普通攻击真伤(攻方攻击力)\r\n     * @param attack 打击方-攻击力\r\n     * @returns 最终伤害\r\n     */\r\n     static calcNormalRealDamageNum(attack:number):number{\r\n        //（攻方攻击力\r\n        let num=attack;\r\n        num=num<5?(Math.random()*5+5):num;\r\n        num=Math.round(num);\r\n        return num;\r\n    }\r\n\r\n    /**\r\n     * 计算普通攻击暴击真伤(攻方攻击力*最终暴击增幅)\r\n     * @param attack 打击方-攻击力\r\n     * @param finalExtraCrit 最终暴击增幅\r\n     * @returns 最终伤害\r\n     */\r\n     static calcNormalCritRealDamageNum(attack:number,finalExtraCrit:number):number{\r\n        //（攻方攻击力*最终暴击增幅\r\n        let num=attack*finalExtraCrit;\r\n        num=num<5?(Math.random()*5+5):num;\r\n        num=Math.round(num);\r\n        return num;\r\n    }\r\n    \r\n    /**\r\n     * 最终暴击增幅:攻方暴击增幅-防方暴击抗性\r\n     * @param extraCrit 攻方暴击增幅\r\n     * @param antiExtraCrit 防方暴击抗性\r\n     * @returns 最终暴击增幅\r\n     */\r\n    static calcFinalExtraCrit(extraCrit:number,antiExtraCrit:number):number{\r\n        //*最终暴击增幅:攻方暴击增幅-防方暴击抗性\r\n        let finalExtraCrit=extraCrit-antiExtraCrit;\r\n        if(finalExtraCrit<1.2){\r\n            finalExtraCrit=1.2;\r\n        }\r\n        return finalExtraCrit\r\n    }\r\n\r\n    /**\r\n     * 最终防御:防御方防御力*（1-攻方无视防御比率）\r\n     * @param defense 防御方防御力\r\n     * @param ignoreRate 攻方无视防御比率\r\n     * @returns 最终防御\r\n     */\r\n     static calcFinalDefense(defense:number,ignoreRate:number):number{\r\n        //最终防御:防御方防御力*（1-攻方无视防御）\r\n        let finalDefense=defense*(1-ignoreRate);\r\n        if(finalDefense<0){\r\n            finalDefense=0;\r\n        }\r\n        return finalDefense\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param damage 最终伤害值\r\n     * @param bloodRate 吸血率\r\n     * @param zhongshangRate 重伤率\r\n     * @returns 吸血值\r\n     */\r\n    static calcBloodSucking(damage:number,bloodRate:number,zhongshangRate:number):number{\r\n        //造成普攻伤害时，可以按比例获得普攻伤害的生命值；吸血值=普攻实际伤害*吸血率*（1-重伤率）\r\n        let num=damage*bloodRate*(1-zhongshangRate);\r\n        num=Math.round(num);\r\n        return num;\r\n    }\r\n\r\n    /**\r\n     * 计算具体的减速数值\r\n     * @param baseSpeed 基础移动速度\r\n     * @param subNum 减速效果%\r\n     * @param resistNum 减速抗性\r\n     * @param addNum 加速效果\r\n     * @returns 最终的速度\r\n     */\r\n    static calcSlowDownNum(baseSpeed:number,subNum:number,resistNum:number,addNum:number):number{\r\n        //减速后的移动速度=初始移动速度*（1+加速效果-攻击方减速效果*（1-受击方减速抗性））\r\n        let num=baseSpeed*((1+addNum-subNum)*(1-resistNum));\r\n        if(num<0){\r\n            num=0;\r\n        }\r\n        return num;\r\n    }\r\n    /**\r\n     * 计算减速的持续时间\r\n     * @param subNum 减速效果\r\n     * @param resistNum 减速抗性\r\n     * @param toughness 受击方韧性\r\n     * @param insight 攻击方洞察\r\n     * @returns 最终的持续时间\r\n     */\r\n    static calcSlowDownTime(subNum:number,resistNum:number,toughness:number,insight:number):number{\r\n        //减速后的移动速度=初始移动速度*（1-攻击方减速效果*（1-受击方减速抗性-受击方韧性+攻击方洞察））\r\n\r\n        return subNum;\r\n    }\r\n    /**\r\n     * 计算控制时间（眩晕、减速）\r\n     * @param xuanyunTime 眩晕时间\r\n     * @param toughness 受击方韧性\r\n     * @param insight 攻击方洞察力\r\n     * @returns 最终的眩晕时间\r\n     */\r\n     static calcControlTime(xuanyunTime:number,toughness:number,insight:number):number{\r\n        //控制时长=眩晕时间*（1-受击方韧性+攻击方洞察），控制时长最低为0.1秒\r\n        let num=xuanyunTime*(1-toughness+insight);\r\n        if(num<0.1){\r\n            num=0.1;\r\n        }\r\n        return num;\r\n    }\r\n}\r\n/**隐藏属性 */\r\nexport class HiddenAttribute{\r\n    /**生命回复 */\r\n    life_recovery:number=0;\r\n    /**穿透值 */\r\n    penetration_value:number=0;\r\n    /**穿透率 */\r\n    penetration_rate:number=0;\r\n    /**吸血率 */\r\n    blood_sucking_rate:number=0;\r\n    /**重伤率 */\r\n    serious_injury_rate:number=0;\r\n    /**减速抗性 */\r\n    slow_resistance:number=0;\r\n    /**韧性 */\r\n    toughness:number=0;\r\n    /**洞察 */\r\n    insight:number=0;\r\n}\r\n\r\nexport enum GongJiMode{\r\n    /**近战 */\r\n    Melee=1,\r\n    /**远程 */\r\n    Far=2,\r\n}\r\n/**怪物类型 */\r\nexport enum StrengthType{\r\n    /**普通怪 */\r\n    Normal=1,\r\n    /**精英怪 */\r\n    Elite=2,\r\n    /**首领怪 */\r\n    Boss=3,\r\n}\r\n/**怪物攻击数据 */\r\nexport class MonsterAttData{\r\n    /**是否为子弹类型的攻击 */\r\n    is_bullet:boolean=true;\r\n    /**怪物属性 */\r\n    monster_attribute:JsonMonsterGrowthAttributes=null;\r\n    /**伤害类型 */\r\n    damage_type:DamageType=DamageType.Normal;\r\n    /**技能伤害比率*/\r\n    skill_rate:number=0;\r\n    /**增伤率 */  \r\n    zengshang_rate:number=0;\r\n    /**怪物强度类型 */\r\n    strength_type:StrengthType=StrengthType.Normal;\r\n    monster_ts:Monster=null;\r\n    /**技能震屏效果 */\r\n    is_big:boolean=true;\r\n}\r\n\r\nexport class MonsterSkillData{\r\n\r\n    /**初始冷却时间 */\r\n    public InitColdDown:Map<number,number> = null ;\r\n    /**技能冷却时间 */\r\n    public ColdDown:Map<number,number> = null ;\r\n    /**技能-技能参数1,获得具体技能槽的技能1参数，使用：SkillValue_1.get(1) */\r\n    public SkillValue_1:Map<number,number> = null ;\r\n    /**被动技能-技能参数2 */\r\n    public SkillValue_2:Map<number,number> = null ;\r\n    /**被动技能-技能参数3 */\r\n    public SkillValue_3:Map<number,number> = null ;\r\n    /**被动技能-技能参数4 */\r\n    public SkillValue_4:Map<number,number> = null ;\r\n\r\n    public CastingRange:Map<number,number> = null ;\r\n    /**怪物释放距离 */\r\n    getCastingRange(type:number):number{\r\n        return this.CastingRange.get(type);\r\n    }\r\n\r\n    /**怪物技能技能冷却时间 */\r\n    getSkillColdDown(type:number):number{\r\n        return this.ColdDown.get(type);\r\n    }\r\n\r\n    /**怪物技能初始的技能冷却时间 */\r\n    getSkillInitColdDown(type:number):number{\r\n        return this.ColdDown.get(type);\r\n    }\r\n\r\n    getSkillValue1(type:number):number{\r\n        return this.SkillValue_1.get(type);\r\n    }\r\n\r\n    getSkillValue2(type:number):number{\r\n        return this.SkillValue_2.get(type);\r\n    }\r\n\r\n    getSkillValue3(type:number):number{\r\n        return this.SkillValue_3.get(type);\r\n    }\r\n\r\n    getSkillValue4(type:number):number{\r\n        return this.SkillValue_4.get(type);\r\n    }\r\n}"]}