{"version":3,"sources":["assets\\Scripts\\copy\\voidcrack\\RogueLevel.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { LoadManager } from \"../../Loading/LoadManager\";\r\n\r\nexport class JsonRogueLevel {\r\n    /**关卡ID */\r\n    public Level:number = 0 ;\r\n    /**怪物组配置 */\r\n    public MonsterGroupConfigure:number[] = [] ;\r\n    /**最大波次 */\r\n    public MaxWave:number = 0 ;\r\n    /**怪潮波次 */\r\n    public MonsterTideWave:number[] = [] ;\r\n    /**每波时间间隔 */\r\n    public TimeInterval:number[] = [] ;\r\n    /**怪物等级 */\r\n    public MonsterLevel:number[] = [] ;\r\n    /**血量系数 */\r\n    public HpCoefficient:number[] = [] ;\r\n}\r\n\r\nexport class RogueLevelManager {\r\n    private static _instance: RogueLevelManager = null;\r\n    //把json数据转化成map数据\r\n    private data:Map<number,JsonRogueLevel>=null;\r\n    private is_load_completed:boolean=false;\r\n\r\n    public static getInstance():RogueLevelManager {\r\n        if(this._instance==null) {\r\n            this._instance=new RogueLevelManager();\r\n            this._instance.init();\r\n        }\r\n        return this._instance;\r\n    }\r\n    //初始化游戏数据\r\n    private init() {\r\n        if(!this.data) {\r\n            this.loadJson();\r\n        }\r\n    }\r\n    //加载json\r\n    private loadJson() {\r\n        LoadManager.loadJson('RogueLevel',LoadManager.load_mode,(error: Error, assets:cc.JsonAsset)=> {\r\n            if(error){\r\n                console.log(error);\r\n                return;\r\n            }\r\n            console.log('加载JsonRogueLevel成功');\r\n            this.data=new Map();\r\n            let json=assets.json;\r\n            for(let i=0; i<json.length; i++){\r\n                let jsonData=new JsonRogueLevel();\r\n                jsonData=json[i];\r\n                this.data.set(jsonData.Level,jsonData);\r\n            }\r\n            this.is_load_completed=true;\r\n        });\r\n    }\r\n\r\n    /**加载是否完成 */\r\n    public getIsLoadCompleted(): boolean{\r\n        return this.is_load_completed;\r\n    }\r\n    /**根据id号获取Json的各种数据 */\r\n    public getJsonRogueLevel(id:number):JsonRogueLevel {\r\n        return this.data.get(id);\r\n    }\r\n    /**根据关卡ID获取怪物组配置 */\r\n    public getMonsterGroupConfigure(id:number): number[] {\r\n        return this.data.get(id).MonsterGroupConfigure;\r\n    }\r\n    /**根据关卡ID获取最大波次 */\r\n    public getMaxWave(id:number): number {\r\n        return this.data.get(id).MaxWave;\r\n    }\r\n    /**根据关卡ID获取怪潮波次 */\r\n    public getMonsterTideWave(id:number): number[] {\r\n        return this.data.get(id).MonsterTideWave;\r\n    }\r\n    /**根据关卡ID获取每波时间间隔 */\r\n    public getTimeInterval(id:number): number[] {\r\n        return this.data.get(id).TimeInterval;\r\n    }\r\n    /**根据关卡ID获取怪物等级 */\r\n    public getMonsterLevel(id:number): number[] {\r\n        return this.data.get(id).MonsterLevel;\r\n    }\r\n    /**根据关卡ID获取血量系数 */\r\n    public getHpCoefficient(id:number): number[] {\r\n        return this.data.get(id).HpCoefficient;\r\n    }\r\n\r\n    /** 静态方法，获取最大的 关卡ID*/\r\n    public static getMaxLevel():number {\r\n        return 80092;\r\n    }\r\n\r\n    //以上格式统一，以下写每个json数据的特殊需求\r\n\r\n\r\n}\r\n"]}