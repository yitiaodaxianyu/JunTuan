{"version":3,"sources":["assets\\Scripts\\Task\\Data\\AccumulatedInformation.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { LoadManager } from \"../../Loading/LoadManager\";\r\n\r\nexport class JsonAccumulatedInformation {\r\n    /**累计积分奖励ID */\r\n    public AccumulatedPointsID:number = 0 ;\r\n    /**任务类型 */\r\n    public TaskType:number = 0 ;\r\n    /**累计积分 */\r\n    public AccumulatedPoints:number = 0 ;\r\n    /**道具1ID */\r\n    public PropID_1:number = 0 ;\r\n    /**道具1数量 */\r\n    public PropNum_1:number = 0 ;\r\n}\r\n\r\nexport class AccumulatedInformationManager {\r\n    private static _instance: AccumulatedInformationManager = null;\r\n    //把json数据转化成map数据\r\n    private data:Map<number,JsonAccumulatedInformation>=null;\r\n    private is_load_completed:boolean=false;\r\n\r\n    public static getInstance():AccumulatedInformationManager {\r\n        if(this._instance==null) {\r\n            this._instance=new AccumulatedInformationManager();\r\n            this._instance.init();\r\n        }\r\n        return this._instance;\r\n    }\r\n    //初始化游戏数据\r\n    private init() {\r\n        if(!this.data) {\r\n            this.loadJson();\r\n        }\r\n    }\r\n    //加载json\r\n    private loadJson() {\r\n        LoadManager.loadJson('AccumulatedInformation',LoadManager.load_mode,(error: Error, assets:cc.JsonAsset)=> {\r\n            if(error){\r\n                console.log(error);\r\n                return;\r\n            }\r\n            console.log('加载JsonAccumulatedInformation成功');\r\n            this.data=new Map();\r\n            let json=assets.json;\r\n            for(let i=0; i<json.length; i++){\r\n                let jsonData=new JsonAccumulatedInformation();\r\n                jsonData=json[i];\r\n                this.data.set(jsonData.AccumulatedPointsID,jsonData);\r\n            }\r\n            this.is_load_completed=true;\r\n        });\r\n    }\r\n\r\n    /**加载是否完成 */\r\n    public getIsLoadCompleted(): boolean{\r\n        return this.is_load_completed;\r\n    }\r\n    /**根据id号获取Json的各种数据 */\r\n    public getJsonAccumulatedInformation(id:number):JsonAccumulatedInformation {\r\n        return this.data.get(id);\r\n    }\r\n    /**根据累计积分奖励ID获取任务类型 */\r\n    public getTaskType(id:number): number {\r\n        return this.data.get(id).TaskType;\r\n    }\r\n    /**根据累计积分奖励ID获取累计积分 */\r\n    public getAccumulatedPoints(id:number): number {\r\n        return this.data.get(id).AccumulatedPoints;\r\n    }\r\n    /**根据累计积分奖励ID获取道具1ID */\r\n    public getPropID_1(id:number): number {\r\n        return this.data.get(id).PropID_1;\r\n    }\r\n    /**根据累计积分奖励ID获取道具1数量 */\r\n    public getPropNum_1(id:number): number {\r\n        return this.data.get(id).PropNum_1;\r\n    }\r\n\r\n    /** 静态方法，获取最大的 累计积分奖励ID*/\r\n    public static getMaxAccumulatedPointsID():number {\r\n        return 250010;\r\n    }\r\n\r\n    //以上格式统一，以下写每个json数据的特殊需求\r\n\r\n    getRewardByTaskType(type:number):JsonAccumulatedInformation[]{\r\n        let info = [];\r\n        this.data.forEach((v,k)=>{\r\n            if(v.TaskType == type){\r\n                info.push(v);\r\n            }\r\n        });\r\n        return info;\r\n    }\r\n\r\n}\r\n"]}