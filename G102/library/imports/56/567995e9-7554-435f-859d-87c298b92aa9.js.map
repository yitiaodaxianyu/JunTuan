{"version":3,"sources":["assets\\Scripts\\Equipment\\Data\\EquipmentAttribute.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { LoadManager } from \"../../Loading/LoadManager\";\r\nimport { EquipType } from \"../EquipConfig\";\r\n\r\n\r\nexport class JsonEquipmentAttribute {\r\n    /**装备ID */\r\n    public Equipment_ID:number = 0 ;\r\n    /**装备位置 */\r\n    public EquipmentPosition:number = 0 ;\r\n    /**装备阶段 */\r\n    public Stage:number = 0 ;\r\n    /**装备品质 */\r\n    public Quality:number = 0 ;\r\n    /**基础生命值 */\r\n    public BaseHealth:number = 0 ;\r\n    /**基础攻击力 */\r\n    public BaseAttack:number = 0 ;\r\n    /**基础防御力 */\r\n    public BaseDefense:number = 0 ;\r\n}\r\n\r\nexport class EquipmentAttributeManager {\r\n    private static _instance: EquipmentAttributeManager = null;\r\n    //把json数据转化成map数据\r\n    private data:Map<number,JsonEquipmentAttribute>=null;\r\n    private is_load_completed:boolean=false;\r\n\r\n    public static getInstance():EquipmentAttributeManager {\r\n        if(this._instance==null) {\r\n            this._instance=new EquipmentAttributeManager();\r\n            this._instance.init();\r\n        }\r\n        return this._instance;\r\n    }\r\n    //初始化游戏数据\r\n    private init() {\r\n        if(!this.data) {\r\n            this.loadJson();\r\n        }\r\n    }\r\n    //加载json\r\n    private loadJson() {\r\n        LoadManager.loadJson('EquipmentAttribute',LoadManager.load_mode,(error: Error, assets:cc.JsonAsset)=> {\r\n            if(error){\r\n                console.log(error);\r\n                return;\r\n            }\r\n            console.log('加载JsonEquipmentAttribute成功');\r\n            this.data=new Map();\r\n            let json=assets.json;\r\n            for(let i=0; i<json.length; i++){\r\n                let jsonData=new JsonEquipmentAttribute();\r\n                jsonData=json[i];\r\n                this.data.set(jsonData.Equipment_ID,jsonData);\r\n            }\r\n            this.is_load_completed=true;\r\n        });\r\n    }\r\n\r\n    /**加载是否完成 */\r\n    public getIsLoadCompleted(): boolean{\r\n        return this.is_load_completed;\r\n    }\r\n    /**根据id号获取Json的各种数据 */\r\n    public getJsonEquipmentAttribute(id:number):JsonEquipmentAttribute {\r\n        return this.data.get(id);\r\n    }\r\n    /**根据装备ID获取装备位置 */\r\n    public getEquipmentPosition(id:number): number {\r\n        return this.data.get(id).EquipmentPosition;\r\n    }\r\n    /**根据装备ID获取装备阶段 */\r\n    public getStage(id:number): number {\r\n        return this.data.get(id).Stage;\r\n    }\r\n    /**根据装备ID获取装备品质 */\r\n    public getQuality(id:number): number {\r\n        return this.data.get(id).Quality;\r\n    }\r\n    /**根据装备ID获取基础生命值 */\r\n    public getBaseHealth(id:number): number {\r\n        return this.data.get(id).BaseHealth;\r\n    }\r\n    /**根据装备ID获取基础攻击力 */\r\n    public getBaseAttack(id:number): number {\r\n        return this.data.get(id).BaseAttack;\r\n    }\r\n    /**根据装备ID获取基础防御力 */\r\n    public getBaseDefense(id:number): number {\r\n        return this.data.get(id).BaseDefense;\r\n    }\r\n\r\n    /** 静态方法，获取最大的 装备ID*/\r\n    public static getMaxEquipment_ID():number {\r\n        return 30431;\r\n    }\r\n\r\n    //以上格式统一，以下写每个json数据的特殊需求\r\n\r\n    static getID(type:EquipType,level:number):number {\r\n        return type*100+level+30000;\r\n        //=B4*100+C4+30000   装备位置   品质\r\n    }\r\n    //解析id，获得LevelType\r\n    static getEquipTypeById(id:number):number {\r\n        return Math.floor(id/1000); \r\n    }\r\n\r\n    static getMaxQuality():number{\r\n        return 6;\r\n    }\r\n    getMaxStage():number{\r\n        return 31;\r\n    }\r\n\r\n    getIsMaxStage(id:number):boolean{\r\n        let stage=this.getStage(id);\r\n        return stage>=this.getMaxStage();\r\n    }\r\n}"]}