{"version":3,"sources":["assets\\Scripts\\Activity\\ActivityManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["\r\nimport { FuncType, GameMode } from \"../Constants\";\r\nimport { FunctionDefinitionManager } from \"../JsonData/FunctionDefinition\";\r\nimport { DingYueManager } from \"../Payment/DingYueManager\";\r\nimport { PropId } from \"../Prop/PropConfig\";\r\nimport { PropManager } from \"../Prop/PropManager\";\r\nimport { AssetsEventType, EventManager } from \"../Tools/EventManager\";\r\n\r\nexport enum ActivityType{\r\n    Endless = 1,\r\n    Boss = 2,\r\n    Tower = 3,\r\n    Maze = 4,\r\n    num,\r\n}\r\n\r\nexport class ActivityManager {\r\n\r\n    private static _instance: ActivityManager = null;\r\n\r\n    \r\n    \r\n    public static getInstance():ActivityManager {\r\n        if(this._instance==null) {\r\n            this._instance=new ActivityManager();\r\n            this._instance.init();\r\n        }\r\n        return this._instance;\r\n    }\r\n    //初始化游戏数据\r\n    private init () {\r\n\r\n    }\r\n    \r\n    changeTicket(type:ActivityType,num:number):boolean\r\n    {\r\n        let newNum=this.getTicket(type)+num;\r\n        if(newNum>=0){\r\n            this.saveTicket(type,newNum);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    saveTicket(type:ActivityType,num:number)\r\n    {\r\n        // cc.sys.localStorage.setItem('activity_ticket'+type,num); \r\n        if(type == ActivityType.Boss){\r\n            PropManager.getInstance().setPropNum(PropId.BossTicket,num);\r\n        }else if(type == ActivityType.Endless){\r\n            PropManager.getInstance().setPropNum(PropId.EndlessChallenge,num);\r\n        }\r\n        EventManager.postAssetsEvent(AssetsEventType.TICKET);\r\n    }\r\n\r\n    getTicket(type:ActivityType):number\r\n    {\r\n        // let num=cc.sys.localStorage.getItem('activity_ticket'+type);\r\n        let num;\r\n        if(type == ActivityType.Boss){\r\n            num = PropManager.getInstance().getPropNum(PropId.BossTicket);\r\n        }else if(type == ActivityType.Endless){\r\n            num = PropManager.getInstance().getPropNum(PropId.EndlessChallenge);\r\n        }\r\n        // if(num===''||num===null)\r\n        // {\r\n        //     num=2;\r\n        // }\r\n        // num=parseInt(num);\r\n        return num;\r\n        // for(let i=ActivityType.Endless; i<ActivityType.num; i++){\r\n            \r\n        // }    \r\n    }\r\n\r\n    changeTodayRemain(type:ActivityType,num:number):boolean\r\n    {\r\n        let newNum=this.getTodayRemain(type)+num;\r\n        if(newNum>=0){\r\n            this.saveTodayRemain(type,newNum);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    saveTodayRemain(type:ActivityType,num:number)\r\n    {\r\n        cc.sys.localStorage.setItem('today_remain'+type,num); \r\n    }\r\n\r\n    getTodayRemain(type:ActivityType):number\r\n    {\r\n        let num=cc.sys.localStorage.getItem('today_remain'+type);\r\n        if(num===''||num===null)\r\n        {\r\n            num=2;\r\n        }\r\n        num=parseInt(num);\r\n        return num;  \r\n    }\r\n    \r\n    getIsUnlock(type:ActivityType):boolean{\r\n        let isUnlock=false;\r\n        isUnlock=FunctionDefinitionManager.getInstance().getIsUnlock(this.getFuncType(type));\r\n        return isUnlock;\r\n    }\r\n\r\n    getFuncType(type:ActivityType):FuncType{\r\n        let funcType=FuncType.WuJinTiaoZhan;\r\n        switch(type){\r\n            case ActivityType.Endless:{\r\n                funcType=FuncType.WuJinTiaoZhan;\r\n            } break;\r\n            case ActivityType.Boss:{\r\n                funcType=FuncType.GeRenBoss;\r\n            } break;\r\n            case ActivityType.Tower:{\r\n                funcType=FuncType.PaTa;\r\n            } break;\r\n            case ActivityType.Maze:{\r\n                funcType = FuncType.MiGong;\r\n            }\r\n        }\r\n        return funcType;\r\n    }\r\n\r\n    getActivityType(mode:GameMode):ActivityType{\r\n        let at=ActivityType.Endless;\r\n        switch(mode){\r\n            case GameMode.Endless:{\r\n                at=ActivityType.Endless;\r\n            } break;\r\n            case GameMode.Boss_Challenge:{\r\n                at=ActivityType.Boss;\r\n            } break;\r\n            case GameMode.Tower:{\r\n                at=ActivityType.Tower;\r\n            } break;\r\n        }\r\n        return at;\r\n    }\r\n\r\n    resetTicket(){\r\n        let maxNum=2;\r\n        // if(DingYueManager.getInstance().getMonthCardInfo().is_buy){\r\n        //     maxNum++;\r\n        // }\r\n        // if(DingYueManager.getInstance().getQuarterCardInfo().is_buy){\r\n        //     maxNum+=2;\r\n        // }\r\n        for(let i=ActivityType.Endless; i<=ActivityType.Boss; i++){\r\n            let num=this.getTicket(i);\r\n            if(num<maxNum){\r\n                this.saveTicket(i,maxNum);\r\n            }\r\n        }\r\n    }\r\n}\r\n"]}