{"version":3,"sources":["assets\\Scripts\\Monster\\Data\\MonsterConfigure.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { LoadManager } from \"../../Loading/LoadManager\";\r\n\r\n\r\nexport class JsonMonsterConfigure {\r\n    /**怪物ID */\r\n    public MonsterId:number = 0 ;\r\n    /**怪物种类 */\r\n    public MonsterClass:number = 0 ;\r\n    /**皮肤 */\r\n    public Skin:number = 0 ;\r\n    /**强度类型 */\r\n    public StrengthType:number = 0 ;\r\n    /**怪物名文本 */\r\n    public NameTextId:number = 0 ;\r\n    /**介绍文本 */\r\n    public IntroTextId:number = 0 ;\r\n    /**移速 */\r\n    public Speed:number = 0 ;\r\n    /**攻击方式 */\r\n    public AttackMode:number = 0 ;\r\n    /**攻击距离 */\r\n    public AttackDistance:number = 0 ;\r\n    /**基础攻速 */\r\n    public AttackSpeed:number = 0 ;\r\n    /**缩放倍率 */\r\n    public Scale:number = 0 ;\r\n    /**怪物间隔 */\r\n    public MonsterSpacing:number = 0 ;\r\n    /**技能数量 */\r\n    public SkillNum:number = 0 ;\r\n}\r\n\r\nexport class MonsterConfigureManager {\r\n    private static _instance: MonsterConfigureManager = null;\r\n    //把json数据转化成map数据\r\n    private data:Map<number,JsonMonsterConfigure>=null;\r\n    private is_load_completed:boolean=false;\r\n\r\n    public static getInstance():MonsterConfigureManager {\r\n        if(this._instance==null) {\r\n            this._instance=new MonsterConfigureManager();\r\n            this._instance.init();\r\n        }\r\n        return this._instance;\r\n    }\r\n    //初始化游戏数据\r\n    private init() {\r\n        if(!this.data) {\r\n            this.loadJson();\r\n        }\r\n    }\r\n    //加载json\r\n    private loadJson() {\r\n        LoadManager.loadJson('MonsterConfigure',LoadManager.load_mode,(error: Error, assets:cc.JsonAsset)=> {\r\n            if(error){\r\n                console.log(error);\r\n                return;\r\n            }\r\n            console.log('加载JsonMonsterConfigure成功');\r\n            this.data=new Map();\r\n            let json=assets.json;\r\n            for(let i=0; i<json.length; i++){\r\n                let jsonData=new JsonMonsterConfigure();\r\n                jsonData=json[i];\r\n                this.data.set(jsonData.MonsterId,jsonData);\r\n            }\r\n            this.is_load_completed=true;\r\n        });\r\n    }\r\n\r\n    /**加载是否完成 */\r\n    public getIsLoadCompleted(): boolean{\r\n        return this.is_load_completed;\r\n    }\r\n    /**根据id号获取Json的各种数据 */\r\n    public getJsonMonsterConfigure(id:number):JsonMonsterConfigure {\r\n        return this.data.get(id);\r\n    }\r\n    /**根据怪物ID获取怪物种类 */\r\n    public getMonsterClass(id:number): number {\r\n        return this.data.get(id).MonsterClass;\r\n    }\r\n    /**根据怪物ID获取皮肤 */\r\n    public getSkin(id:number): number {\r\n        return this.data.get(id).Skin;\r\n    }\r\n    /**根据怪物ID获取强度类型 */\r\n    public getStrengthType(id:number): number {\r\n       \r\n        return this.data.get(id).StrengthType;\r\n    }\r\n    /**根据怪物ID获取怪物名文本 */\r\n    public getNameTextId(id:number): number {\r\n        return this.data.get(id).NameTextId;\r\n    }\r\n    /**根据怪物ID获取介绍文本 */\r\n    public getIntroTextId(id:number): number {\r\n        return this.data.get(id).IntroTextId;\r\n    }\r\n    /**根据怪物ID获取移速 */\r\n    public getSpeed(id:number): number {\r\n        return this.data.get(id).Speed;\r\n    }\r\n    /**根据怪物ID获取攻击方式 */\r\n    public getAttackMode(id:number): number {\r\n        return this.data.get(id).AttackMode;\r\n    }\r\n    /**根据怪物ID获取攻击距离 */\r\n    public getAttackDistance(id:number): number {\r\n        return this.data.get(id).AttackDistance;\r\n    }\r\n    /**根据怪物ID获取基础攻速 */\r\n    public getAttackSpeed(id:number): number {\r\n        return this.data.get(id).AttackSpeed;\r\n    }\r\n    /**根据怪物ID获取缩放倍率 */\r\n    public getScale(id:number): number {\r\n        return this.data.get(id).Scale;\r\n    }\r\n    /**根据怪物ID获取怪物间隔 */\r\n    public getMonsterSpacing(id:number): number {\r\n        return this.data.get(id).MonsterSpacing;\r\n    }\r\n    /**根据怪物ID获取技能数量 */\r\n    public getSkillNum(id:number): number {\r\n        return this.data.get(id).SkillNum;\r\n    }\r\n\r\n    /** 静态方法，获取最大的 怪物ID*/\r\n    public static getMaxMonsterId():number {\r\n        return 30871;\r\n    }\r\n\r\n    //以上格式统一，以下写每个json数据的特殊需求\r\n\r\n\r\n}\r\n"]}