{"version":3,"sources":["assets\\Scripts\\Boss\\BatDevil.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { Enemy_DeBuff_Type, Enemy_State } from \"../Enemy/EnemyConfig\";\r\nimport Move from \"../Game/Move\";\r\nimport { GameEffectId, GameEffectsManager } from \"../Game/GameEffectsManager\";\r\nimport GameManager from \"../GameManager\";\r\nimport { GameState } from \"../Constants\";\r\nimport MonsterManager from \"../Monster/MonsterManager\";\r\nimport { SoundIndex } from \"../Sound/AudioConstants\";\r\nimport { KeyFrameData } from \"../Monster/MonsterData\";\r\nimport Boss from \"./Boss\";\r\nimport { BuffType, DamageType } from \"../Hero/Game/HeroConfig\";\r\n\r\nenum Animation_Name\r\n{\r\n    Idle = \"idle\",       //-- 正面待机\r\n    attack1 = \"attack1\",          //-- 攻击1\r\n    run = \"run\",                //-- 跑路\r\n    hurt1 = \"hurt1\",          //-- 受击1\r\n    skill1 = \"skill1\",          //-- 技能动作1\r\n    dead= \"dead\",   //死亡\r\n}\r\n\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class BatDevil extends Boss {\r\n\r\n    \r\n\r\n    onLoad(): void {\r\n        super.onLoad();\r\n        GameEffectsManager.getInstance().addEffectPoolById(GameEffectId.boss3_att_move,2);\r\n        GameEffectsManager.getInstance().addEffectPoolById(GameEffectId.boss3_att_end,2);\r\n        GameEffectsManager.getInstance().addEffectPoolById(GameEffectId.boss3_skill_move,1);\r\n        this.addDeathCallback(this.onDeath);\r\n        this.addXuanYunListen(this.onXuanYunResult);\r\n        this.addBossInitedListen(this.onBossInited);\r\n        this.addAttackListen(this.onAttack);\r\n        this.addMoveListen(this.onMove);\r\n    }\r\n\r\n    // initMovingTrack(){\r\n    //     let width=222;\r\n    //     let cPos=GameManager.getInstance().getFightCenter();\r\n    //     let aRadian=Math.PI/3;\r\n    //     this.moving_track=new Array();\r\n    //     this.moving_track.push(cPos);\r\n    //     let gg=cc.find('Canvas/Fighting_Root').getComponent(cc.Graphics);\r\n    //     gg.moveTo(cPos.x,cPos.y);\r\n    //     for(let i=PosType.Radian0; i<PosType.Num; i++){\r\n    //         let radian=(i-1)*aRadian;\r\n    //         let posX=cPos.x+width*Math.cos(radian);\r\n    //         let posY=cPos.y+width*Math.sin(radian);\r\n    //         this.moving_track.push(cc.v2(posX,posY));\r\n    //         gg.lineTo(posX,posY);\r\n    //     }\r\n    //     gg.stroke();\r\n    // }\r\n\r\n    onBossInited(): void {\r\n        this.startIdle();\r\n        this.schedule(this.startSkill,10);\r\n    }\r\n\r\n\r\n    startIdle(){        \r\n        super.setEnemyState(Enemy_State.standby);\r\n        super.playSpinAnimaton(Animation_Name.Idle,true);\r\n        this.scheduleOnce(this.startMove,2)\r\n    }\r\n\r\n    onXuanYunResult(isXuanYun:boolean){\r\n        if(isXuanYun){\r\n            this.startXuanYun();\r\n        }else{\r\n            //根据上个状态判断需要做什么\r\n            if(!super.isHaveDeBuffType(BuffType.Vertigo)){\r\n                if(!super.getIsDie())\r\n                this.startIdle();\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    startXuanYun(){\r\n        super.playSpinAnimaton(Animation_Name.hurt1,false,null,()=>{\r\n            if(super.isHaveDeBuffType(BuffType.Vertigo)&&!super.getIsDie())\r\n                this.spine.paused=true;\r\n        });\r\n    }\r\n\r\n    onAttack(){\r\n        //有前摇动作\r\n        let data=new KeyFrameData();\r\n        data.name=\"attack1_Start\";\r\n        data.callback=()=>{\r\n            this.startLaunch(cc.v2(this.node.x+this.att_pos.x*this.node.scaleX,this.node.y+this.att_pos.y*this.node.scaleY));\r\n        }\r\n        super.playSpinAnimaton(Animation_Name.attack1,false,data,()=>{\r\n            this.startIdle();\r\n        });\r\n    }\r\n\r\n    onMove(){\r\n        super.playSpinAnimaton(Animation_Name.run,true);\r\n    }\r\n\r\n    startSkill(){\r\n        if(GameManager.getInstance().cur_game_state!=GameState.Game_Playing || super.isHaveDeBuffType(BuffType.Vertigo))\r\n            return;        \r\n        this.unschedule(this.startMove);\r\n        super.setEnemyState(Enemy_State.skill);\r\n        GameManager.getInstance().sound_manager.playSound(SoundIndex.YX_BossXuli);\r\n        //蓄力\r\n        let data=new KeyFrameData();\r\n        data.name=\"skill_Start\";\r\n        data.callback=()=>{\r\n            this.releaseSkill();\r\n        }\r\n        super.playSpinAnimaton(Animation_Name.skill1,false,data,()=>{\r\n            //如果有技能等待释放，那么就直接释放\r\n            //根据上个状态判断需要做什么\r\n            if(this.getEnemyPrevState()==Enemy_State.move){\r\n                this.startMove(0,this.getNextPos());\r\n            }else{\r\n                this.startMove(0);\r\n            }\r\n        });\r\n    }\r\n\r\n    releaseSkill(){\r\n        let pos=cc.v2(cc.v2(this.node.x+this.att_pos.x*this.node.scaleX,this.node.y+this.att_pos.y*this.node.scaleY));\r\n        let node=GameEffectsManager.getInstance().createGameEffectById(GameEffectId.boss3_skill_move,pos);\r\n        let moveTS=node.getComponent(Move);\r\n        moveTS.init(640,0,GameEffectId.boss3_skill_move);\r\n        moveTS.setTargetPos(cc.v2(Math.random()*512-256,-1000),()=>{            \r\n            //GameEffectsManager.getInstance().destroyGameEffectById(GameEffectId.boss3_skill_move,node);            \r\n        },()=>{            \r\n            //造成伤害\r\n            super.injureWall(this.cur_att,DamageType.Skill);\r\n            GameManager.getInstance().sound_manager.playSound(SoundIndex.YX_BossAttackMinzhong);\r\n        });\r\n    }\r\n\r\n    startLaunch(pos:cc.Vec2){\r\n        GameManager.getInstance().sound_manager.playSound(SoundIndex.YX_BossAttackGuodu);\r\n        let node=GameEffectsManager.getInstance().createGameEffectById(GameEffectId.boss3_att_move,pos);\r\n        let moveTS=node.getComponent(Move);\r\n        moveTS.init(540,0,GameEffectId.boss3_att_move);\r\n        moveTS.setTargetPos(cc.v2(Math.random()*512-256,GameManager.getInstance().enemy_att_y-20),()=>{\r\n            GameEffectsManager.getInstance().createGameEffectById(GameEffectId.boss3_att_end,node.getPosition());\r\n            GameEffectsManager.getInstance().destroyGameEffectById(GameEffectId.boss3_att_move,node);\r\n            //造成伤害\r\n            super.injureWall(this.cur_att,DamageType.Normal);            \r\n        });\r\n    }\r\n\r\n    onDeath() {\r\n        this.unscheduleAllCallbacks();\r\n        super.playDeadAnimaton(Animation_Name.dead,()=>{\r\n            MonsterManager.getInstance().destroyMonster(this.node,this.monster_type);\r\n        })\r\n        GameManager.getInstance().sound_manager.playSound(SoundIndex.rewardBox2);         \r\n    }\r\n\r\n    update(dt)\r\n    {\r\n        if((GameManager.getInstance().cur_game_state!=GameState.Game_Playing)||this.getIsDie())\r\n        {\r\n            return;\r\n        }\r\n        super.update(dt);\r\n        if(this.getEnemyState()==Enemy_State.move){\r\n            this.checkMove(dt);\r\n        }        \r\n    }\r\n\r\n    private checkMove(dt)\r\n    {        \r\n        if(!super.isHaveDeBuffType(BuffType.Vertigo)){\r\n            let speed=this.cur_move_speed*dt;\r\n            if(this.move_target_pos){\r\n                let offsetPos=this.move_target_pos.sub(this.node.getPosition());\r\n                this.node.scaleX=offsetPos.x>0?this.setup_scale:-this.setup_scale;\r\n                if(offsetPos.mag()<speed)\r\n                {\r\n                    if(this.move_end_callback){\r\n                        this.move_end_callback();\r\n                        this.move_end_callback=null;\r\n                    }\r\n                }else\r\n                {\r\n                    let pi2=Math.PI*2;\r\n                    this.move_direction=(Math.atan2(offsetPos.y,offsetPos.x)+pi2)%pi2;\r\n                    this.moving(dt);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    moving(dt){\r\n        let disX=this.node.x;\r\n        let disY=this.node.y;\r\n        let speed=this.cur_move_speed*dt;\r\n        disX+=speed*Math.cos(this.move_direction);\r\n        disY+=speed*Math.sin(this.move_direction);\r\n        this.node.x=disX;\r\n        this.node.y=disY;\r\n        if(this.node.x>320)\r\n        {\r\n            this.node.x=320;\r\n        }\r\n        if(this.node.x<-320)\r\n        {\r\n            this.node.x=-320;\r\n        }\r\n        //不能穿过城墙\r\n        if(this.node.y<this.wall_yy){\r\n            this.node.y=this.wall_yy;\r\n        }\r\n    }\r\n\r\n}\r\n"]}