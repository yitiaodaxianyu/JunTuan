{"version":3,"sources":["assets\\Scripts\\TakeEgg\\EggCumulative.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { LoadManager } from \"../Loading/LoadManager\";\r\n\r\n\r\nexport class JsonEggCumulative {\r\n    /**累计次数奖励ID */\r\n    public CumulativeEggsRewardID:number = 0 ;\r\n    /**开蛋池类型 */\r\n    public EggsType:number = 0 ;\r\n    /**累计开蛋次数 */\r\n    public CumulativeEggsDrawingTimes:number = 0 ;\r\n    /**道具ID */\r\n    public ItemID:number = 0 ;\r\n    /**数量 */\r\n    public RewardNum:number = 0 ;\r\n}\r\n\r\nexport class EggCumulativeManager {\r\n    private static _instance: EggCumulativeManager = null;\r\n    //把json数据转化成map数据\r\n    private data:Map<number,JsonEggCumulative>=null;\r\n    private is_load_completed:boolean=false;\r\n\r\n    public static getInstance():EggCumulativeManager {\r\n        if(this._instance==null) {\r\n            this._instance=new EggCumulativeManager();\r\n            this._instance.init();\r\n        }\r\n        return this._instance;\r\n    }\r\n    //初始化游戏数据\r\n    private init() {\r\n        if(!this.data) {\r\n            this.loadJson();\r\n        }\r\n    }\r\n    //加载json\r\n    private loadJson() {\r\n        LoadManager.loadJson('EggCumulative',LoadManager.load_mode,(error: Error, assets:cc.JsonAsset)=> {\r\n            if(error){\r\n                console.log(error);\r\n                return;\r\n            }\r\n            console.log('加载JsonEggCumulative成功');\r\n            this.data=new Map();\r\n            let json=assets.json;\r\n            for(let i=0; i<json.length; i++){\r\n                let jsonData=new JsonEggCumulative();\r\n                jsonData=json[i];\r\n                this.data.set(jsonData.CumulativeEggsRewardID,jsonData);\r\n            }\r\n            this.is_load_completed=true;\r\n        });\r\n    }\r\n\r\n    /**加载是否完成 */\r\n    public getIsLoadCompleted(): boolean{\r\n        return this.is_load_completed;\r\n    }\r\n    /**根据id号获取Json的各种数据 */\r\n    public getJsonEggCumulative(id:number):JsonEggCumulative {\r\n        return this.data.get(id);\r\n    }\r\n    /**根据累计次数奖励ID获取开蛋池类型 */\r\n    public getEggsType(id:number): number {\r\n        return this.data.get(id).EggsType;\r\n    }\r\n    /**根据累计次数奖励ID获取累计开蛋次数 */\r\n    public getCumulativeEggsDrawingTimes(id:number): number {\r\n        return this.data.get(id).CumulativeEggsDrawingTimes;\r\n    }\r\n    /**根据累计次数奖励ID获取道具ID */\r\n    public getItemID(id:number): number {\r\n        return this.data.get(id).ItemID;\r\n    }\r\n    /**根据累计次数奖励ID获取数量 */\r\n    public getRewardNum(id:number): number {\r\n        return this.data.get(id).RewardNum;\r\n    }\r\n\r\n    /** 静态方法，获取最大的 累计次数奖励ID*/\r\n    public static getMaxCumulativeEggsRewardID():number {\r\n        return 200020;\r\n    }\r\n\r\n    //以上格式统一，以下写每个json数据的特殊需求\r\n\r\n    /**\r\n     * 根据许愿池类型获取累计奖励列表\r\n     * @param type \r\n     * @returns \r\n     */\r\n     getTakeEggRewardList(type:number):JsonEggCumulative[]{\r\n        let arr=new Array<JsonEggCumulative>()\r\n        this.data.forEach((v,k)=>{\r\n            if(v.EggsType==type){\r\n                arr.push(v);\r\n            }\r\n        })\r\n        return arr;\r\n    }\r\n}\r\n"]}