{"version":3,"sources":["assets\\Scripts\\JsonData\\FunctionDefinition.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { ActivityManager, ActivityType } from \"../Activity/ActivityManager\";\r\nimport { Btn_Index, FuncType } from \"../Constants\";\r\nimport { LevelManager } from \"../Level/LevelManager\";\r\nimport { LoadManager } from \"../Loading/LoadManager\";\r\nimport { Follow_Type } from \"../multiLanguage/FollowConstants\";\r\nimport FollowManager from \"../multiLanguage/FollowManager\";\r\nimport UserData from \"../UserData\";\r\n\r\nexport class JsonFunctionDefinition {\r\n    /**功能ID */\r\n    public FunctionID:number = 0 ;\r\n    /**功能名文本 */\r\n    public TextID:number = 0 ;\r\n    /**解锁条件类型 */\r\n    public UnlockConditionType:number = 0 ;\r\n    /**解锁条件参数 */\r\n    public UnlockCondictionParameter:number = 0 ;\r\n}\r\n\r\nexport class FunctionDefinitionManager {\r\n    private static _instance: FunctionDefinitionManager = null;\r\n    //把json数据转化成map数据\r\n    private data:Map<number,JsonFunctionDefinition>=null;\r\n    private is_load_completed:boolean=false;\r\n\r\n    public static getInstance():FunctionDefinitionManager {\r\n        if(this._instance==null) {\r\n            this._instance=new FunctionDefinitionManager();\r\n            this._instance.init();\r\n        }\r\n        return this._instance;\r\n    }\r\n    //初始化游戏数据\r\n    private init() {\r\n        if(!this.data) {\r\n            this.loadJson();\r\n        }\r\n    }\r\n    //加载json\r\n    private loadJson() {\r\n        LoadManager.loadJson('FunctionDefinition',LoadManager.load_mode,(error: Error, assets:cc.JsonAsset)=> {\r\n            if(error){\r\n                console.log(error);\r\n                return;\r\n            }\r\n            console.log('加载JsonFunctionDefinition成功');\r\n            this.data=new Map();\r\n            let json=assets.json;\r\n            for(let i=0; i<json.length; i++){\r\n                let jsonData=new JsonFunctionDefinition();\r\n                jsonData=json[i];\r\n                this.data.set(jsonData.FunctionID,jsonData);\r\n            }\r\n            this.is_load_completed=true;\r\n        });\r\n    }\r\n\r\n    /**加载是否完成 */\r\n    public getIsLoadCompleted(): boolean{\r\n        return this.is_load_completed;\r\n    }\r\n    /**根据id号获取Json的各种数据 */\r\n    public getJsonFunctionDefinition(id:number):JsonFunctionDefinition {\r\n        return this.data.get(id);\r\n    }\r\n    /**根据功能ID获取功能名文本 */\r\n    public getTextID(id:number): number {\r\n        return this.data.get(id).TextID;\r\n    }\r\n    /**根据功能ID获取解锁条件类型 */\r\n    public getUnlockConditionType(id:number): number {\r\n        return this.data.get(id).UnlockConditionType;\r\n    }\r\n    /**根据功能ID获取解锁条件参数 */\r\n    public getUnlockCondictionParameter(id:number): number {\r\n        return this.data.get(id).UnlockCondictionParameter;\r\n    }\r\n\r\n    /** 静态方法，获取最大的 功能ID*/\r\n    public static getMaxFunctionID():number {\r\n        return 10;\r\n    }\r\n\r\n    //以上格式统一，以下写每个json数据的特殊需求\r\n\r\n    /**获取需要提示的功能的列表 */\r\n    public static getFuncList():FuncType[]{\r\n        let funcList=new Array();\r\n        let idStrList:string=cc.sys.localStorage.getItem('func_list');\r\n        if(idStrList!=null && idStrList!=\"\")\r\n        {\r\n            let list=idStrList.split(',');\r\n            for(let i=0; i<list.length; i++)\r\n            {\r\n                let id=parseInt(list[i]);\r\n                funcList.push(id)\r\n            }\r\n        }\r\n        return funcList;\r\n    }\r\n    /**保存需要提示的功能的列表 */\r\n    public static saveFuncList(temp:FuncType[])\r\n    {\r\n        cc.sys.localStorage.setItem('func_list',temp.toString());\r\n    }\r\n\r\n    /**获取功能的提示情况 */\r\n    public static getFuncHint(funcId:FuncType):number{\r\n        let num=cc.sys.localStorage.getItem('func_hint_'+funcId);\r\n        if(num===\"\" || num===null)\r\n        {\r\n            num=0;            \r\n        }else\r\n        {\r\n            num=parseInt(num);            \r\n        }\r\n        return num;\r\n    }\r\n\r\n    /**保存功能的提示情况 */\r\n    public static saveFuncHint(funcId:number,num:number){\r\n        cc.sys.localStorage.setItem('func_hint_'+funcId,num);        \r\n    }\r\n\r\n    // public static cheakFuncUnlock(){\r\n    //     if(TutorailsManager.getInstance().is_tutorails_state==false){\r\n    //         let unlockIds=this.getFuncList();\r\n    //         if(unlockIds.length>0){\r\n    //             let id=unlockIds.pop();\r\n    //             UIManager.getInstance().showFuncUnlockUi(id);\r\n    //             this.saveFuncList(unlockIds);\r\n    //             this.saveFuncHint(id,1);\r\n    //         }\r\n    //     }        \r\n    // }\r\n    /**是否解锁功能 */\r\n    public getIsUnlock(funcType:FuncType):boolean{\r\n        let isUnlock=false;\r\n        let finishLevel=LevelManager.getInstance().finish_level;\r\n        let userLevel=UserData.getInstance().getUserLevel();\r\n        let jsonData=this.getJsonFunctionDefinition(funcType);\r\n        let type=jsonData.UnlockConditionType;\r\n        let value=jsonData.UnlockCondictionParameter;\r\n        if(type==1){\r\n            if(userLevel>=value){                \r\n                isUnlock=true;\r\n            }\r\n        }else\r\n        if(type==2){\r\n            if(finishLevel>=value){\r\n                isUnlock=true;\r\n            }\r\n        }\r\n        return isUnlock;\r\n    }\r\n\r\n    public static getIconIndex(funcType:FuncType):number{\r\n        let spIndex=funcType;\r\n        if(funcType==FuncType.WuJinTiaoZhan || funcType==FuncType.GeRenBoss || funcType==FuncType.PaTa){\r\n            spIndex=10;\r\n        } \r\n        return spIndex;\r\n    }\r\n    /**获取是否解锁了底部的按钮 */\r\n    public getIsUnlockIndex(index:Btn_Index):boolean{\r\n        let isUnlock=false;\r\n        switch(index){\r\n            case Btn_Index.Btn_City:{\r\n                //主城\r\n                // isUnlock=this.getIsUnlock(FuncType.XuYuanChi);\r\n                // if(!isUnlock){\r\n                //     isUnlock=this.getIsUnlock(FuncType.LongChao);\r\n                //     if(!isUnlock){\r\n                //         isUnlock=this.getIsUnlock(FuncType.TieJiangPu);\r\n                //         if(!isUnlock){\r\n                //             isUnlock=this.getIsUnlock(FuncType.ShangDian);\r\n                //             if(!isUnlock){\r\n                //                 isUnlock=this.getIsUnlock(FuncType.Shengtang);\r\n                //             }\r\n                //         }\r\n                //     }\r\n                // }\r\n                // if(isUnlock&&FollowManager.getInstance().getFirstDo(Follow_Type.主城功能解锁)){\r\n                //     FollowManager.getInstance().followEvent(Follow_Type.主城功能解锁);\r\n                //     FollowManager.getInstance().addFirstDo(Follow_Type.主城功能解锁);\r\n                // }                \r\n                isUnlock=true;\r\n            }break;\r\n            case Btn_Index.Btn_Pet:{\r\n                isUnlock=this.getIsUnlock(FuncType.ChongWuXiTong)\r\n            }break;\r\n            case Btn_Index.Btn_FuBen:{\r\n                for(let i=ActivityType.Endless; i<=ActivityType.num; i++){\r\n                    let type=ActivityManager.getInstance().getFuncType(i);\r\n                    if(this.getIsUnlock(type)){\r\n                        isUnlock=true;\r\n                        break;\r\n                    }\r\n                }\r\n            }break;\r\n            default:{\r\n                isUnlock=true;\r\n            }\r\n        }\r\n        return isUnlock;\r\n    }\r\n\r\n}\r\n"]}