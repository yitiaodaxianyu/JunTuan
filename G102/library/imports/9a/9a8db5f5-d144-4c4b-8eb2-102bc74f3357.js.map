{"version":3,"sources":["assets\\Scripts\\Pet\\Data\\SpiritMessage.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { LoadManager } from \"../../Loading/LoadManager\";\r\n\r\nexport class JsonSpiritMessage {\r\n    /**灵宠种类 */\r\n    public SpiritType:number = 0 ;\r\n    /**灵宠名字 */\r\n    public SpiritName:number = 0 ;\r\n    /**初始品质 */\r\n    public InitialQuality:number = 0 ;\r\n    /**阶段上限 */\r\n    public StageLimit:number = 0 ;\r\n    /**宠物技能介绍 */\r\n    public ActiveSkillsIntro:number = 0 ;\r\n    /**宠物技能名字 */\r\n    public SpiritSkillName:number = 0 ;\r\n}\r\n\r\nexport class SpiritMessageManager {\r\n    private static _instance: SpiritMessageManager = null;\r\n    //把json数据转化成map数据\r\n    private data:Map<number,JsonSpiritMessage>=null;\r\n    private is_load_completed:boolean=false;\r\n\r\n    public static getInstance():SpiritMessageManager {\r\n        if(this._instance==null) {\r\n            this._instance=new SpiritMessageManager();\r\n            this._instance.init();\r\n        }\r\n        return this._instance;\r\n    }\r\n    //初始化游戏数据\r\n    private init() {\r\n        if(!this.data) {\r\n            this.loadJson();\r\n        }\r\n    }\r\n    //加载json\r\n    private loadJson() {\r\n        LoadManager.loadJson('SpiritMessage',LoadManager.load_mode,(error: Error, assets:cc.JsonAsset)=> {\r\n            if(error){\r\n                console.log(error);\r\n                return;\r\n            }\r\n            console.log('加载JsonSpiritMessage成功');\r\n            this.data=new Map();\r\n            let json=assets.json;\r\n            for(let i=0; i<json.length; i++){\r\n                let jsonData=new JsonSpiritMessage();\r\n                jsonData=json[i];\r\n                this.data.set(jsonData.SpiritType,jsonData);\r\n            }\r\n            this.is_load_completed=true;\r\n        });\r\n    }\r\n\r\n    /**加载是否完成 */\r\n    public getIsLoadCompleted(): boolean{\r\n        return this.is_load_completed;\r\n    }\r\n    /**根据id号获取Json的各种数据 */\r\n    public getJsonSpiritMessage(id:number):JsonSpiritMessage {\r\n        return this.data.get(id);\r\n    }\r\n    /**根据灵宠种类获取灵宠名字 */\r\n    public getSpiritName(id:number): number {\r\n        return this.data.get(id).SpiritName;\r\n    }\r\n    /**根据灵宠种类获取初始品质 */\r\n    public getInitialQuality(id:number): number {\r\n        return this.data.get(id).InitialQuality;\r\n    }\r\n    /**根据灵宠种类获取阶段上限 */\r\n    public getStageLimit(id:number): number {\r\n        return this.data.get(id).StageLimit;\r\n    }\r\n    /**根据灵宠种类获取宠物技能介绍 */\r\n    public getActiveSkillsIntro(id:number): number {\r\n        return this.data.get(id).ActiveSkillsIntro;\r\n    }\r\n    /**根据灵宠种类获取宠物技能名字 */\r\n    public getSpiritSkillName(id:number): number {\r\n        return this.data.get(id).SpiritSkillName;\r\n    }\r\n\r\n    /** 静态方法，获取最大的 灵宠种类*/\r\n    public static getMaxSpiritType():number {\r\n        return 7;\r\n    }\r\n\r\n    //以上格式统一，以下写每个json数据的特殊需求\r\n\r\n\r\n}\r\n"]}