{"version":3,"sources":["assets\\Scripts\\Hero\\Data\\CombatEffectiveness.ts"],"names":[],"mappings":";;;;;;;AAAA,yDAAwD;AAExD;IAAA;QACI,UAAU;QACH,cAAS,GAAU,CAAC,CAAE;QAC7B,UAAU;QACH,qBAAgB,GAAU,CAAC,CAAE;IACxC,CAAC;IAAD,8BAAC;AAAD,CALA,AAKC,IAAA;AALY,0DAAuB;AAOpC;IAAA;QAEI,iBAAiB;QACT,SAAI,GAAqC,IAAI,CAAC;QAC9C,sBAAiB,GAAS,KAAK,CAAC;QAoDxC,yBAAyB;IAG7B,CAAC;IArDiB,sCAAW,GAAzB;QACI,IAAG,IAAI,CAAC,SAAS,IAAE,IAAI,EAAE;YACrB,IAAI,CAAC,SAAS,GAAC,IAAI,0BAA0B,EAAE,CAAC;YAChD,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;SACzB;QACD,OAAO,IAAI,CAAC,SAAS,CAAC;IAC1B,CAAC;IACD,SAAS;IACD,yCAAI,GAAZ;QACI,IAAG,CAAC,IAAI,CAAC,IAAI,EAAE;YACX,IAAI,CAAC,QAAQ,EAAE,CAAC;SACnB;IACL,CAAC;IACD,QAAQ;IACA,6CAAQ,GAAhB;QAAA,iBAgBC;QAfG,yBAAW,CAAC,QAAQ,CAAC,qBAAqB,EAAC,yBAAW,CAAC,SAAS,EAAC,UAAC,KAAY,EAAE,MAAmB;YAC/F,IAAG,KAAK,EAAC;gBACL,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACnB,OAAO;aACV;YACD,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;YAC3C,KAAI,CAAC,IAAI,GAAC,IAAI,GAAG,EAAE,CAAC;YACpB,IAAI,IAAI,GAAC,MAAM,CAAC,IAAI,CAAC;YACrB,KAAI,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;gBAC5B,IAAI,QAAQ,GAAC,IAAI,uBAAuB,EAAE,CAAC;gBAC3C,QAAQ,GAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACjB,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,SAAS,EAAC,QAAQ,CAAC,CAAC;aAC9C;YACD,KAAI,CAAC,iBAAiB,GAAC,IAAI,CAAC;QAChC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,YAAY;IACL,uDAAkB,GAAzB;QACI,OAAO,IAAI,CAAC,iBAAiB,CAAC;IAClC,CAAC;IACD,sBAAsB;IACf,+DAA0B,GAAjC,UAAkC,EAAS;QACvC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IAC7B,CAAC;IACD,kBAAkB;IACX,wDAAmB,GAA1B,UAA2B,EAAS;QAChC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,gBAAgB,CAAC;IAC9C,CAAC;IAED,qBAAqB;IACP,0CAAe,GAA7B;QACI,OAAO,CAAC,CAAC;IACb,CAAC;IArDc,oCAAS,GAA+B,IAAI,CAAC;IA0DhE,iCAAC;CA3DD,AA2DC,IAAA;AA3DY,gEAA0B","file":"","sourceRoot":"/","sourcesContent":["import { LoadManager } from \"../../Loading/LoadManager\";\r\n\r\nexport class JsonCombatEffectiveness {\r\n    /**属性ID */\r\n    public Attribute:number = 0 ;\r\n    /**转换系数 */\r\n    public ConversionFactor:number = 0 ;\r\n}\r\n\r\nexport class CombatEffectivenessManager {\r\n    private static _instance: CombatEffectivenessManager = null;\r\n    //把json数据转化成map数据\r\n    private data:Map<number,JsonCombatEffectiveness>=null;\r\n    private is_load_completed:boolean=false;\r\n\r\n    public static getInstance():CombatEffectivenessManager {\r\n        if(this._instance==null) {\r\n            this._instance=new CombatEffectivenessManager();\r\n            this._instance.init();\r\n        }\r\n        return this._instance;\r\n    }\r\n    //初始化游戏数据\r\n    private init() {\r\n        if(!this.data) {\r\n            this.loadJson();\r\n        }\r\n    }\r\n    //加载json\r\n    private loadJson() {\r\n        LoadManager.loadJson('CombatEffectiveness',LoadManager.load_mode,(error: Error, assets:cc.JsonAsset)=> {\r\n            if(error){\r\n                console.log(error);\r\n                return;\r\n            }\r\n            console.log('加载JsonCombatEffectiveness成功');\r\n            this.data=new Map();\r\n            let json=assets.json;\r\n            for(let i=0; i<json.length; i++){\r\n                let jsonData=new JsonCombatEffectiveness();\r\n                jsonData=json[i];\r\n                this.data.set(jsonData.Attribute,jsonData);\r\n            }\r\n            this.is_load_completed=true;\r\n        });\r\n    }\r\n\r\n    /**加载是否完成 */\r\n    public getIsLoadCompleted(): boolean{\r\n        return this.is_load_completed;\r\n    }\r\n    /**根据id号获取Json的各种数据 */\r\n    public getJsonCombatEffectiveness(id:number):JsonCombatEffectiveness {\r\n        return this.data.get(id);\r\n    }\r\n    /**根据属性ID获取转换系数 */\r\n    public getConversionFactor(id:number): number {\r\n        return this.data.get(id).ConversionFactor;\r\n    }\r\n\r\n    /** 静态方法，获取最大的 属性ID*/\r\n    public static getMaxAttribute():number {\r\n        return 9;\r\n    }\r\n\r\n    //以上格式统一，以下写每个json数据的特殊需求\r\n\r\n\r\n}\r\n"]}