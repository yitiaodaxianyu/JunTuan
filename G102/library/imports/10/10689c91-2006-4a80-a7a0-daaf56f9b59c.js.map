{"version":3,"sources":["assets\\Scripts\\Maze\\Data\\RogueConfiguration.ts"],"names":[],"mappings":";;;;;;;AAAA,yDAAwD;AAGxD;IAAA;QACI,UAAU;QACH,kBAAa,GAAU,CAAC,CAAE;QACjC,eAAe;QACR,sBAAiB,GAAU,CAAC,CAAE;IACzC,CAAC;IAAD,6BAAC;AAAD,CALA,AAKC,IAAA;AALY,wDAAsB;AAOnC;IAAA;QAEI,iBAAiB;QACT,SAAI,GAAoC,IAAI,CAAC;QAC7C,sBAAiB,GAAS,KAAK,CAAC;QAoDxC,yBAAyB;IAG7B,CAAC;IArDiB,qCAAW,GAAzB;QACI,IAAG,IAAI,CAAC,SAAS,IAAE,IAAI,EAAE;YACrB,IAAI,CAAC,SAAS,GAAC,IAAI,yBAAyB,EAAE,CAAC;YAC/C,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;SACzB;QACD,OAAO,IAAI,CAAC,SAAS,CAAC;IAC1B,CAAC;IACD,SAAS;IACD,wCAAI,GAAZ;QACI,IAAG,CAAC,IAAI,CAAC,IAAI,EAAE;YACX,IAAI,CAAC,QAAQ,EAAE,CAAC;SACnB;IACL,CAAC;IACD,QAAQ;IACA,4CAAQ,GAAhB;QAAA,iBAgBC;QAfG,yBAAW,CAAC,QAAQ,CAAC,oBAAoB,EAAC,yBAAW,CAAC,SAAS,EAAC,UAAC,KAAY,EAAE,MAAmB;YAC9F,IAAG,KAAK,EAAC;gBACL,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACnB,OAAO;aACV;YACD,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;YAC1C,KAAI,CAAC,IAAI,GAAC,IAAI,GAAG,EAAE,CAAC;YACpB,IAAI,IAAI,GAAC,MAAM,CAAC,IAAI,CAAC;YACrB,KAAI,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;gBAC5B,IAAI,QAAQ,GAAC,IAAI,sBAAsB,EAAE,CAAC;gBAC1C,QAAQ,GAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACjB,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,EAAC,QAAQ,CAAC,CAAC;aAClD;YACD,KAAI,CAAC,iBAAiB,GAAC,IAAI,CAAC;QAChC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,YAAY;IACL,sDAAkB,GAAzB;QACI,OAAO,IAAI,CAAC,iBAAiB,CAAC;IAClC,CAAC;IACD,sBAAsB;IACf,6DAAyB,GAAhC,UAAiC,EAAS;QACtC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IAC7B,CAAC;IACD,uBAAuB;IAChB,wDAAoB,GAA3B,UAA4B,EAAS;QACjC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,iBAAiB,CAAC;IAC/C,CAAC;IAED,qBAAqB;IACP,6CAAmB,GAAjC;QACI,OAAO,GAAG,CAAC;IACf,CAAC;IArDc,mCAAS,GAA8B,IAAI,CAAC;IA0D/D,gCAAC;CA3DD,AA2DC,IAAA;AA3DY,8DAAyB","file":"","sourceRoot":"/","sourcesContent":["import { LoadManager } from \"../../Loading/LoadManager\";\r\n\r\n\r\nexport class JsonRogueConfiguration {\r\n    /**主线关卡 */\r\n    public MainlineLevel:number = 0 ;\r\n    /**第一个战斗格子战力 */\r\n    public FirstfightHexagon:number = 0 ;\r\n}\r\n\r\nexport class RogueConfigurationManager {\r\n    private static _instance: RogueConfigurationManager = null;\r\n    //把json数据转化成map数据\r\n    private data:Map<number,JsonRogueConfiguration>=null;\r\n    private is_load_completed:boolean=false;\r\n\r\n    public static getInstance():RogueConfigurationManager {\r\n        if(this._instance==null) {\r\n            this._instance=new RogueConfigurationManager();\r\n            this._instance.init();\r\n        }\r\n        return this._instance;\r\n    }\r\n    //初始化游戏数据\r\n    private init() {\r\n        if(!this.data) {\r\n            this.loadJson();\r\n        }\r\n    }\r\n    //加载json\r\n    private loadJson() {\r\n        LoadManager.loadJson('RogueConfiguration',LoadManager.load_mode,(error: Error, assets:cc.JsonAsset)=> {\r\n            if(error){\r\n                console.log(error);\r\n                return;\r\n            }\r\n            console.log('加载JsonRogueConfiguration成功');\r\n            this.data=new Map();\r\n            let json=assets.json;\r\n            for(let i=0; i<json.length; i++){\r\n                let jsonData=new JsonRogueConfiguration();\r\n                jsonData=json[i];\r\n                this.data.set(jsonData.MainlineLevel,jsonData);\r\n            }\r\n            this.is_load_completed=true;\r\n        });\r\n    }\r\n\r\n    /**加载是否完成 */\r\n    public getIsLoadCompleted(): boolean{\r\n        return this.is_load_completed;\r\n    }\r\n    /**根据id号获取Json的各种数据 */\r\n    public getJsonRogueConfiguration(id:number):JsonRogueConfiguration {\r\n        return this.data.get(id);\r\n    }\r\n    /**根据主线关卡获取第一个战斗格子战力 */\r\n    public getFirstfightHexagon(id:number): number {\r\n        return this.data.get(id).FirstfightHexagon;\r\n    }\r\n\r\n    /** 静态方法，获取最大的 主线关卡*/\r\n    public static getMaxMainlineLevel():number {\r\n        return 100;\r\n    }\r\n\r\n    //以上格式统一，以下写每个json数据的特殊需求\r\n\r\n\r\n}\r\n"]}