{"version":3,"sources":["assets\\Scripts\\Turntable\\Times.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AACA,iEAAiE;AACjE,+CAA+C;AAC/C,+CAA+C;AAC/C,mDAAmD;AACnD,8CAAyC;AACzC,0DAAsD;AACtD,4DAA8D;AAC9D,iDAA4C;AAC5C,yCAAoC;AAEpC,mDAAmD;AAC7C,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAC1C;;;;;;;;;;GAUG;AAEF;IAAmC,yBAAY;IAA/C;;IAuDD,CAAC;cAvDqB,KAAK;IAKvB,sBAAM,GAAN;QACI,IAAI,QAAQ,GAAG,CAAC,CAAC,CAAuB,aAAa;QACrD,IAAI,MAAM,GAAG,EAAE,CAAC,KAAK,CAAC,cAAc,CAAC,CAAG,sCAAsC;QAC9E,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,EAAE,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAoB,YAAY;QACtE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAE,QAAQ,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;QACxD,WAAW;QACX,uCAAuC;QACvC,uBAAuB;QACvB,YAAY;IAEhB,CAAC;IACD,0BAAU,GAAV;QACI,uCAAuC;QACvC,IAAI,gBAAgB,GAAC,kCAAiB,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,0BAAU,CAAC,gBAAgB,EAAC,CAAC,CAAC,CAAC;QAC9F,IAAG,gBAAgB,IAAE,CAAC,EAAC;YACnB,IAAI,GAAG,GAAG,kCAAiB,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,0BAAU,CAAC,iBAAiB,EAAE,qBAAW,CAAC,WAAW,EAAE,CAAC,YAAY,CAAC,CAAC;YAC1H,GAAG,IAAI,CAAC,CAAC;YACT,kCAAiB,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,0BAAU,CAAC,iBAAiB,EAAE,EAAE,GAAG,GAAG,CAAC,CAAC;YAChF,IAAG,OAAK,CAAC,OAAO,IAAE,IAAI,EAAC;gBACnB,aAAa;gBACb,IAAG,OAAK,CAAC,OAAO,CAAC,KAAK,IAAE,EAAE,EAAC;oBACvB,OAAK,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,MAAM,GAAC,EAAE,GAAC,uBAAa,CAAC,eAAe,CAAC,GAAG,CAAC,CAAA;iBACpF;aACJ;YACD,IAAG,GAAG,IAAE,CAAC,EAAC;gBACN,kCAAiB,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,0BAAU,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC;gBACxE,IAAG,OAAK,CAAC,aAAa,IAAE,IAAI,EAAC;oBACzB,aAAa;oBACb,IAAG,OAAK,CAAC,aAAa,CAAC,KAAK,IAAE,EAAE,EAAC;wBAC7B,OAAK,CAAC,aAAa,CAAC,YAAY,CAAC,mBAAS,CAAC,CAAC,OAAO,EAAE,CAAA;qBACxD;iBACJ;aAEJ;SACJ;IACL,CAAC;;IAxCa,aAAO,GAAS,IAAI,CAAC;IACrB,mBAAa,GAAS,IAAI,CAAC;IAE3B,gBAAU,GAAQ,CAAC,CAAC,CAAA,cAAc;IAJ9B,KAAK;QADzB,OAAO;OACa,KAAK,CAuD1B;IAAD,YAAC;CAvDA,AAuDA,CAvDmC,EAAE,CAAC,SAAS,GAuD/C;kBAvDqB,KAAK;AAyD3B;;;;;;;;;GASG","file":"","sourceRoot":"/","sourcesContent":["\r\n// import { _decorator, Component, macro, Game, game } from 'cc';\r\n// import { FramePublic } from './FramePublic';\r\n// import LocalItemName from './LocalItemName';\r\n// import { OfflineReward } from './OfflineReward';\r\nimport GameManager from \"../GameManager\";\r\nimport { StorageKey } from \"../Storage/StorageConfig\";\r\nimport { TheStorageManager } from \"../Storage/StorageManager\";\r\nimport PublicMethods from \"./PublicMethods\";\r\nimport Turmtable from \"./Turmtable\";\r\n\r\n// import { PublicMethods } from './PublicMethods';\r\nconst {ccclass, property} = cc._decorator;\r\n/**\r\n * Predefined variables\r\n * Name = Time\r\n * DateTime = Tue Nov 08 2022 17:51:49 GMT+0800 (中国标准时间)\r\n * Author = dxq0328\r\n * FileBasename = Time.ts\r\n * FileBasenameNoExtension = Time\r\n * URL = db://assets/Scripts/Frame/Time.ts\r\n * ManualUrl = https://docs.cocos.com/creator/3.3/manual/zh/\r\n *\r\n */\r\n @ccclass\r\n export default class Times extends cc.Component {\r\n    public static timetxt:cc.Node=null;\r\n    public static Turmtablenode:cc.Node=null;\r\n\r\n    public static voidsensid:number=0;//虚空裂缝打到那一层的id\r\n    onLoad() {\r\n        var interval = 1;                       // 以秒为单位的时间间隔\r\n        var repeat = cc.macro.REPEAT_FOREVER;   // 重复次数     // cc.macro.REPEAT_FOREVER\r\n        var delay = 0;      \r\n        cc.game.addPersistRootNode(this.node);                    // 开始延时1秒后开始\r\n        this.schedule(this.Management, interval, repeat, delay);\r\n        //从后台到前台的事件\r\n        // cc.game.on(cc.game.EVENT_HIDE, ()=>{\r\n        //     this.GameShow();\r\n        // }, this);\r\n\r\n    }\r\n    Management() {//计时器\r\n        // this.SaveLocalTime();//每隔1秒保存一下时间到本地\r\n        let TurmtableFreeYes=TheStorageManager.getInstance().getNumber(StorageKey.TurmtableFreeYes,0);\r\n        if(TurmtableFreeYes==0){\r\n            let num = TheStorageManager.getInstance().getNumber(StorageKey.TurmtableFreeTime, GameManager.getInstance().tumTableTime);\r\n            num -= 1;\r\n            TheStorageManager.getInstance().setItem(StorageKey.TurmtableFreeTime, \"\" + num);\r\n            if(Times.timetxt!=null){\r\n                // @ts-ignore\r\n                if(Times.timetxt._name!=\"\"){\r\n                    Times.timetxt.getComponent(cc.Label).string=\"\"+PublicMethods.timeconversions(num)\r\n                }\r\n            }\r\n            if(num==0){\r\n                TheStorageManager.getInstance().setItem(StorageKey.TurmtableFreeYes, 1);\r\n                if(Times.Turmtablenode!=null){\r\n                    // @ts-ignore\r\n                    if(Times.Turmtablenode._name!=\"\"){\r\n                        Times.Turmtablenode.getComponent(Turmtable).Refresh()\r\n                    }\r\n                }\r\n                \r\n            }\r\n        }\r\n    }\r\n    // SaveLocalTime() {//保存一下本地时间\r\n    //     PublicMethods.setCurrentTime();\r\n    // }\r\n    // GameHide() {//游戏隐藏\r\n    //     cc.game.on(cc.game.EVENT_HIDE, function () {\r\n    //         // console.log(\"游戏进入后台\");\r\n    //         this.SaveLocalTime();//\r\n    //     }, this);\r\n    // }\r\n    // GameShow() {//游戏显示\r\n    //     // OfflineReward.shangdian_24();\r\n    //     // OfflineReward.Time_jianshao();\r\n    // }\r\n}\r\n\r\n/**\r\n * [1] Class member could be defined like this.\r\n * [2] Use `property` decorator if your want the member to be serializable.\r\n * [3] Your initialization goes here.\r\n * [4] Your update function goes here.\r\n *\r\n * Learn more about scripting: https://docs.cocos.com/creator/3.3/manual/zh/scripting/\r\n * Learn more about CCClass: https://docs.cocos.com/creator/3.3/manual/zh/scripting/ccclass.html\r\n * Learn more about life-cycle callbacks: https://docs.cocos.com/creator/3.3/manual/zh/scripting/life-cycle-callbacks.html\r\n */\r\n"]}